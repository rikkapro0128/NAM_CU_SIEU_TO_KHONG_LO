

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 26 12:42:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0001                     _TMR0	set	1
   208  0008                     _PORTD	set	8
   209  0007                     _PORTC	set	7
   210  005D                     _TMR0IE	set	93
   211  005E                     _PEIE	set	94
   212  005F                     _GIE	set	95
   213  005A                     _TMR0IF	set	90
   214  0088                     _TRISD	set	136
   215  0087                     _TRISC	set	135
   216  042C                     _TRISA4	set	1068
   217  040B                     _PSA	set	1035
   218  040C                     _T0SE	set	1036
   219  040D                     _T0CS	set	1037
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  07F8                     start_initialization:	
   225                           ; #config settings
   226                           
   227  07F8                     __initialization:
   228                           
   229                           ; Clear objects allocated to BANK0
   230  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   231  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   232  07FA  01A9               	clrf	__pbssBANK0& (0+127)
   233  07FB  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   234  07FC                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  07FC                     __end_of__initialization:
   238  07FC  0183               	clrf	3
   239  07FD  120A  118A  2EF3   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssBANK0
   242  0029                     __pbssBANK0:
   243  0029                     _state:
   244  0029                     	ds	2
   245                           
   246                           	psect	cstackCOMMON
   247  0070                     __pcstackCOMMON:
   248  0070                     ?_main:
   249  0070                     ?___lwdiv:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ___lwdiv@divisor:	
   253                           ; 2 bytes @ 0x0
   254                           
   255                           
   256                           ; 2 bytes @ 0x0
   257  0070                     	ds	2
   258  0072                     ___lwdiv@dividend:
   259                           
   260                           ; 2 bytes @ 0x2
   261  0072                     	ds	2
   262  0074                     ??___lwdiv:
   263                           
   264                           ; 1 bytes @ 0x4
   265  0074                     	ds	1
   266  0075                     ___lwdiv@quotient:
   267                           
   268                           ; 2 bytes @ 0x5
   269  0075                     	ds	2
   270  0077                     ___lwdiv@counter:
   271                           
   272                           ; 1 bytes @ 0x7
   273  0077                     	ds	1
   274  0078                     ?___lwmod:
   275  0078                     ___lwmod@divisor:	
   276                           ; 2 bytes @ 0x8
   277                           
   278                           
   279                           ; 2 bytes @ 0x8
   280  0078                     	ds	2
   281  007A                     ___lwmod@dividend:
   282                           
   283                           ; 2 bytes @ 0xA
   284  007A                     	ds	2
   285  007C                     ??___lwmod:
   286                           
   287                           ; 1 bytes @ 0xC
   288  007C                     	ds	1
   289  007D                     ___lwmod@counter:
   290                           
   291                           ; 1 bytes @ 0xD
   292  007D                     	ds	1
   293  007E                     ??_hienThiLedTong:
   294  007E                     ??_main:	
   295                           ; 1 bytes @ 0xE
   296                           
   297                           
   298                           	psect	cstackBANK0
   299  0020                     __pcstackBANK0:	
   300                           ; 1 bytes @ 0xE
   301                           
   302  0020                     ?_numPortC:
   303  0020                     ?_numPortD:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0020                     numPortC@num:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0020                     numPortD@num:	
   310                           ; 2 bytes @ 0x0
   311                           
   312                           
   313                           ; 2 bytes @ 0x0
   314  0020                     	ds	2
   315  0022                     ??_numPortC:
   316  0022                     ??_numPortD:	
   317                           ; 1 bytes @ 0x2
   318                           
   319                           
   320                           ; 1 bytes @ 0x2
   321  0022                     	ds	1
   322  0023                     numPortC@NG:
   323  0023                     numPortD@CH:	
   324                           ; 2 bytes @ 0x3
   325                           
   326                           
   327                           ; 2 bytes @ 0x3
   328  0023                     	ds	2
   329  0025                     numPortC@TR:
   330  0025                     numPortD@DV:	
   331                           ; 2 bytes @ 0x5
   332                           
   333                           
   334                           ; 2 bytes @ 0x5
   335  0025                     	ds	2
   336  0027                     ?_hienThiLedTong:
   337  0027                     hienThiLedTong@num:	
   338                           ; 1 bytes @ 0x7
   339                           
   340                           
   341                           ; 2 bytes @ 0x7
   342  0027                     	ds	2
   343                           
   344                           	psect	maintext
   345  06F3                     __pmaintext:	
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 34 in file "BAI_3.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : B00/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels required when called: 3
   371 ;; This function calls:
   372 ;;		_hienThiLedTong
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _main
   380  06F3                     _main:
   381  06F3                     l785:	
   382                           ;incstack = 0
   383                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   384                           
   385                           
   386                           ;BAI_3.c: 35:     ANSEL = ANSELH = 0;
   387  06F3  1683               	bsf	3,5	;RP0=1, select bank3
   388  06F4  1703               	bsf	3,6	;RP1=1, select bank3
   389  06F5  0189               	clrf	9	;volatile
   390  06F6  0188               	clrf	8	;volatile
   391                           
   392                           ;BAI_3.c: 36:     TRISC = TRISD = 0;
   393  06F7  1683               	bsf	3,5	;RP0=1, select bank1
   394  06F8  1303               	bcf	3,6	;RP1=0, select bank1
   395  06F9  0188               	clrf	8	;volatile
   396  06FA  0187               	clrf	7	;volatile
   397                           
   398                           ;BAI_3.c: 37:     PORTC = PORTD = 0;
   399  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   400  06FC  1303               	bcf	3,6	;RP1=0, select bank0
   401  06FD  0188               	clrf	8	;volatile
   402  06FE  0187               	clrf	7	;volatile
   403                           
   404                           ;BAI_3.c: 38:     TMR0 = 0;
   405  06FF  0181               	clrf	1	;volatile
   406  0700                     l787:
   407                           
   408                           ;BAI_3.c: 39:     TMR0IF = 0;
   409  0700  110B               	bcf	11,2	;volatile
   410  0701                     l789:
   411                           
   412                           ;BAI_3.c: 40:     T0CS = 1;
   413  0701  1683               	bsf	3,5	;RP0=1, select bank1
   414  0702  1303               	bcf	3,6	;RP1=0, select bank1
   415  0703  1681               	bsf	1,5	;volatile
   416  0704                     l791:
   417                           
   418                           ;BAI_3.c: 41:     T0SE = 0;
   419  0704  1201               	bcf	1,4	;volatile
   420  0705                     l793:
   421                           
   422                           ;BAI_3.c: 42:     GIE = PEIE = TMR0IE = 0;
   423  0705  128B               	bcf	11,5	;volatile
   424  0706  130B               	bcf	11,6	;volatile
   425  0707  138B               	bcf	11,7	;volatile
   426  0708                     l795:
   427                           
   428                           ;BAI_3.c: 43:     PSA = 1;
   429  0708  1581               	bsf	1,3	;volatile
   430  0709                     l797:
   431                           
   432                           ;BAI_3.c: 44:     TRISA4 = 1;
   433  0709  1605               	bsf	5,4	;volatile
   434  070A                     l799:
   435                           
   436                           ;BAI_3.c: 46:         if(TMR0) {
   437  070A  1283               	bcf	3,5	;RP0=0, select bank0
   438  070B  1303               	bcf	3,6	;RP1=0, select bank0
   439  070C  0801               	movf	1,w	;volatile
   440  070D  1903               	btfsc	3,2
   441  070E  2F10               	goto	u331
   442  070F  2F11               	goto	u330
   443  0710                     u331:
   444  0710  2F0A               	goto	l799
   445  0711                     u330:
   446  0711                     l801:
   447                           
   448                           ;BAI_3.c: 47:             TMR0 = 0;
   449  0711  0181               	clrf	1	;volatile
   450  0712                     l803:
   451                           
   452                           ;BAI_3.c: 48:             state += 50;
   453  0712  3032               	movlw	50
   454  0713  07A9               	addwf	_state,f
   455  0714  1803               	skipnc
   456  0715  0AAA               	incf	_state+1,f
   457  0716  3000               	movlw	0
   458  0717  07AA               	addwf	_state+1,f
   459  0718                     l805:
   460                           
   461                           ;BAI_3.c: 49:             if(state > 1000) {
   462  0718  3003               	movlw	3
   463  0719  022A               	subwf	_state+1,w
   464  071A  30E9               	movlw	233
   465  071B  1903               	skipnz
   466  071C  0229               	subwf	_state,w
   467  071D  1C03               	skipc
   468  071E  2F20               	goto	u341
   469  071F  2F21               	goto	u340
   470  0720                     u341:
   471  0720  2F23               	goto	l809
   472  0721                     u340:
   473  0721                     l807:
   474                           
   475                           ;BAI_3.c: 50:                 state = 0;
   476  0721  01A9               	clrf	_state
   477  0722  01AA               	clrf	_state+1
   478  0723                     l809:
   479                           
   480                           ;BAI_3.c: 52:             hienThiLedTong(state);
   481  0723  082A               	movf	_state+1,w
   482  0724  00A8               	movwf	hienThiLedTong@num+1
   483  0725  0829               	movf	_state,w
   484  0726  00A7               	movwf	hienThiLedTong@num
   485  0727  120A  118A  26A2  120A  118A  	fcall	_hienThiLedTong
   486  072C  2F0A               	goto	l799
   487  072D  120A  118A  2800   	ljmp	start
   488  0730                     __end_of_main:
   489                           
   490                           	psect	text1
   491  06A2                     __ptext1:	
   492 ;; *************** function _hienThiLedTong *****************
   493 ;; Defined at:
   494 ;;		line 27 in file "BAI_3.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  num             2    7[BANK0 ] unsigned int 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       2       0       0       0
   509 ;;      Locals:         0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0
   511 ;;      Totals:         0       2       0       0       0
   512 ;;Total ram usage:        2 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 2
   515 ;; This function calls:
   516 ;;		_numPortC
   517 ;;		_numPortD
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _hienThiLedTong
   525  06A2                     _hienThiLedTong:
   526  06A2                     l783:	
   527                           ;incstack = 0
   528                           ; Regs used in _hienThiLedTong: [wreg+status,2+status,0+pclath+cstack]
   529                           
   530                           
   531                           ;BAI_3.c: 28:     numPortC(num);
   532  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   533  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   534  06A4  0828               	movf	hienThiLedTong@num+1,w
   535  06A5  00A1               	movwf	numPortC@num+1
   536  06A6  0827               	movf	hienThiLedTong@num,w
   537  06A7  00A0               	movwf	numPortC@num
   538  06A8  120A  118A  2730  120A  118A  	fcall	_numPortC
   539                           
   540                           ;BAI_3.c: 29:     numPortD(num);
   541  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   542  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   543  06AF  0828               	movf	hienThiLedTong@num+1,w
   544  06B0  00A1               	movwf	numPortD@num+1
   545  06B1  0827               	movf	hienThiLedTong@num,w
   546  06B2  00A0               	movwf	numPortD@num
   547  06B3  120A  118A  2772  120A  118A  	fcall	_numPortD
   548  06B8                     l39:
   549  06B8  0008               	return
   550  06B9                     __end_of_hienThiLedTong:
   551                           
   552                           	psect	text2
   553  0772                     __ptext2:	
   554 ;; *************** function _numPortD *****************
   555 ;; Defined at:
   556 ;;		line 22 in file "BAI_3.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  num             2    0[BANK0 ] unsigned int 
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  DV              2    5[BANK0 ] unsigned int 
   561 ;;  CH              2    3[BANK0 ] unsigned int 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0, pclath, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         0       2       0       0       0
   572 ;;      Locals:         0       4       0       0       0
   573 ;;      Temps:          0       1       0       0       0
   574 ;;      Totals:         0       7       0       0       0
   575 ;;Total ram usage:        7 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; Hardware stack levels required when called: 1
   578 ;; This function calls:
   579 ;;		___lwdiv
   580 ;;		___lwmod
   581 ;; This function is called by:
   582 ;;		_hienThiLedTong
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _numPortD
   588  0772                     _numPortD:
   589  0772                     l779:	
   590                           ;incstack = 0
   591                           ; Regs used in _numPortD: [wreg+status,2+status,0+pclath+cstack]
   592                           
   593                           
   594                           ;BAI_3.c: 23:     unsigned int CH = (num / 10) % 10, DV = num % 10;
   595  0772  300A               	movlw	10
   596  0773  00F8               	movwf	___lwmod@divisor
   597  0774  3000               	movlw	0
   598  0775  00F9               	movwf	___lwmod@divisor+1
   599  0776  300A               	movlw	10
   600  0777  00F0               	movwf	___lwdiv@divisor
   601  0778  3000               	movlw	0
   602  0779  00F1               	movwf	___lwdiv@divisor+1
   603  077A  1283               	bcf	3,5	;RP0=0, select bank0
   604  077B  1303               	bcf	3,6	;RP1=0, select bank0
   605  077C  0821               	movf	numPortD@num+1,w
   606  077D  00F3               	movwf	___lwdiv@dividend+1
   607  077E  0820               	movf	numPortD@num,w
   608  077F  00F2               	movwf	___lwdiv@dividend
   609  0780  120A  118A  27B4  120A  118A  	fcall	___lwdiv
   610  0785  0871               	movf	?___lwdiv+1,w
   611  0786  00FB               	movwf	___lwmod@dividend+1
   612  0787  0870               	movf	?___lwdiv,w
   613  0788  00FA               	movwf	___lwmod@dividend
   614  0789  120A  118A  26B9  120A  118A  	fcall	___lwmod
   615  078E  0879               	movf	?___lwmod+1,w
   616  078F  1283               	bcf	3,5	;RP0=0, select bank0
   617  0790  1303               	bcf	3,6	;RP1=0, select bank0
   618  0791  00A4               	movwf	numPortD@CH+1
   619  0792  0878               	movf	?___lwmod,w
   620  0793  00A3               	movwf	numPortD@CH
   621  0794  300A               	movlw	10
   622  0795  00F8               	movwf	___lwmod@divisor
   623  0796  3000               	movlw	0
   624  0797  00F9               	movwf	___lwmod@divisor+1
   625  0798  0821               	movf	numPortD@num+1,w
   626  0799  00FB               	movwf	___lwmod@dividend+1
   627  079A  0820               	movf	numPortD@num,w
   628  079B  00FA               	movwf	___lwmod@dividend
   629  079C  120A  118A  26B9  120A  118A  	fcall	___lwmod
   630  07A1  0879               	movf	?___lwmod+1,w
   631  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   632  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   633  07A4  00A6               	movwf	numPortD@DV+1
   634  07A5  0878               	movf	?___lwmod,w
   635  07A6  00A5               	movwf	numPortD@DV
   636  07A7                     l781:
   637                           
   638                           ;BAI_3.c: 24:     PORTD = (DV << 4) | CH;
   639  07A7  0825               	movf	numPortD@DV,w
   640  07A8  00A2               	movwf	??_numPortD
   641  07A9  3003               	movlw	3
   642  07AA                     u325:
   643  07AA  1003               	clrc
   644  07AB  0DA2               	rlf	??_numPortD,f
   645  07AC  3EFF               	addlw	-1
   646  07AD  1D03               	skipz
   647  07AE  2FAA               	goto	u325
   648  07AF  1003               	clrc
   649  07B0  0D22               	rlf	??_numPortD,w
   650  07B1  0423               	iorwf	numPortD@CH,w
   651  07B2  0088               	movwf	8	;volatile
   652  07B3                     l36:
   653  07B3  0008               	return
   654  07B4                     __end_of_numPortD:
   655                           
   656                           	psect	text3
   657  0730                     __ptext3:	
   658 ;; *************** function _numPortC *****************
   659 ;; Defined at:
   660 ;;		line 17 in file "BAI_3.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  num             2    0[BANK0 ] unsigned int 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  TR              2    5[BANK0 ] unsigned int 
   665 ;;  NG              2    3[BANK0 ] unsigned int 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0, pclath, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       2       0       0       0
   676 ;;      Locals:         0       4       0       0       0
   677 ;;      Temps:          0       1       0       0       0
   678 ;;      Totals:         0       7       0       0       0
   679 ;;Total ram usage:        7 bytes
   680 ;; Hardware stack levels used: 1
   681 ;; Hardware stack levels required when called: 1
   682 ;; This function calls:
   683 ;;		___lwdiv
   684 ;;		___lwmod
   685 ;; This function is called by:
   686 ;;		_hienThiLedTong
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _numPortC
   692  0730                     _numPortC:
   693  0730                     l775:	
   694                           ;incstack = 0
   695                           ; Regs used in _numPortC: [wreg+status,2+status,0+pclath+cstack]
   696                           
   697                           
   698                           ;BAI_3.c: 18:     unsigned int NG = num / 1000, TR = (num / 100) % 10;
   699  0730  30E8               	movlw	232
   700  0731  00F0               	movwf	___lwdiv@divisor
   701  0732  3003               	movlw	3
   702  0733  00F1               	movwf	___lwdiv@divisor+1
   703  0734  1283               	bcf	3,5	;RP0=0, select bank0
   704  0735  1303               	bcf	3,6	;RP1=0, select bank0
   705  0736  0821               	movf	numPortC@num+1,w
   706  0737  00F3               	movwf	___lwdiv@dividend+1
   707  0738  0820               	movf	numPortC@num,w
   708  0739  00F2               	movwf	___lwdiv@dividend
   709  073A  120A  118A  27B4  120A  118A  	fcall	___lwdiv
   710  073F  0871               	movf	?___lwdiv+1,w
   711  0740  1283               	bcf	3,5	;RP0=0, select bank0
   712  0741  1303               	bcf	3,6	;RP1=0, select bank0
   713  0742  00A4               	movwf	numPortC@NG+1
   714  0743  0870               	movf	?___lwdiv,w
   715  0744  00A3               	movwf	numPortC@NG
   716  0745  300A               	movlw	10
   717  0746  00F8               	movwf	___lwmod@divisor
   718  0747  3000               	movlw	0
   719  0748  00F9               	movwf	___lwmod@divisor+1
   720  0749  3064               	movlw	100
   721  074A  00F0               	movwf	___lwdiv@divisor
   722  074B  3000               	movlw	0
   723  074C  00F1               	movwf	___lwdiv@divisor+1
   724  074D  0821               	movf	numPortC@num+1,w
   725  074E  00F3               	movwf	___lwdiv@dividend+1
   726  074F  0820               	movf	numPortC@num,w
   727  0750  00F2               	movwf	___lwdiv@dividend
   728  0751  120A  118A  27B4  120A  118A  	fcall	___lwdiv
   729  0756  0871               	movf	?___lwdiv+1,w
   730  0757  00FB               	movwf	___lwmod@dividend+1
   731  0758  0870               	movf	?___lwdiv,w
   732  0759  00FA               	movwf	___lwmod@dividend
   733  075A  120A  118A  26B9  120A  118A  	fcall	___lwmod
   734  075F  0879               	movf	?___lwmod+1,w
   735  0760  1283               	bcf	3,5	;RP0=0, select bank0
   736  0761  1303               	bcf	3,6	;RP1=0, select bank0
   737  0762  00A6               	movwf	numPortC@TR+1
   738  0763  0878               	movf	?___lwmod,w
   739  0764  00A5               	movwf	numPortC@TR
   740  0765                     l777:
   741                           
   742                           ;BAI_3.c: 19:     PORTC = (NG << 4) | TR;
   743  0765  0823               	movf	numPortC@NG,w
   744  0766  00A2               	movwf	??_numPortC
   745  0767  3003               	movlw	3
   746  0768                     u315:
   747  0768  1003               	clrc
   748  0769  0DA2               	rlf	??_numPortC,f
   749  076A  3EFF               	addlw	-1
   750  076B  1D03               	skipz
   751  076C  2F68               	goto	u315
   752  076D  1003               	clrc
   753  076E  0D22               	rlf	??_numPortC,w
   754  076F  0425               	iorwf	numPortC@TR,w
   755  0770  0087               	movwf	7	;volatile
   756  0771                     l33:
   757  0771  0008               	return
   758  0772                     __end_of_numPortC:
   759                           
   760                           	psect	text4
   761  06B9                     __ptext4:	
   762 ;; *************** function ___lwmod *****************
   763 ;; Defined at:
   764 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  divisor         2    8[COMMON] unsigned int 
   767 ;;  dividend        2   10[COMMON] unsigned int 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  counter         1   13[COMMON] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2    8[COMMON] unsigned int 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         4       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0
   781 ;;      Temps:          1       0       0       0       0
   782 ;;      Totals:         6       0       0       0       0
   783 ;;Total ram usage:        6 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_numPortC
   789 ;;		_numPortD
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function ___lwmod
   795  06B9                     ___lwmod:
   796  06B9                     l753:	
   797                           ;incstack = 0
   798                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   799                           
   800  06B9  0878               	movf	___lwmod@divisor,w
   801  06BA  0479               	iorwf	___lwmod@divisor+1,w
   802  06BB  1903               	btfsc	3,2
   803  06BC  2EBE               	goto	u251
   804  06BD  2EBF               	goto	u250
   805  06BE                     u251:
   806  06BE  2EEE               	goto	l771
   807  06BF                     u250:
   808  06BF                     l755:
   809  06BF  01FD               	clrf	___lwmod@counter
   810  06C0  0AFD               	incf	___lwmod@counter,f
   811  06C1  2ECD               	goto	l761
   812  06C2                     l757:
   813  06C2  3001               	movlw	1
   814  06C3                     u265:
   815  06C3  1003               	clrc
   816  06C4  0DF8               	rlf	___lwmod@divisor,f
   817  06C5  0DF9               	rlf	___lwmod@divisor+1,f
   818  06C6  3EFF               	addlw	-1
   819  06C7  1D03               	skipz
   820  06C8  2EC3               	goto	u265
   821  06C9                     l759:
   822  06C9  3001               	movlw	1
   823  06CA  00FC               	movwf	??___lwmod
   824  06CB  087C               	movf	??___lwmod,w
   825  06CC  07FD               	addwf	___lwmod@counter,f
   826  06CD                     l761:
   827  06CD  1FF9               	btfss	___lwmod@divisor+1,7
   828  06CE  2ED0               	goto	u271
   829  06CF  2ED1               	goto	u270
   830  06D0                     u271:
   831  06D0  2EC2               	goto	l757
   832  06D1                     u270:
   833  06D1                     l763:
   834  06D1  0879               	movf	___lwmod@divisor+1,w
   835  06D2  027B               	subwf	___lwmod@dividend+1,w
   836  06D3  1D03               	skipz
   837  06D4  2ED7               	goto	u285
   838  06D5  0878               	movf	___lwmod@divisor,w
   839  06D6  027A               	subwf	___lwmod@dividend,w
   840  06D7                     u285:
   841  06D7  1C03               	skipc
   842  06D8  2EDA               	goto	u281
   843  06D9  2EDB               	goto	u280
   844  06DA                     u281:
   845  06DA  2EE1               	goto	l767
   846  06DB                     u280:
   847  06DB                     l765:
   848  06DB  0878               	movf	___lwmod@divisor,w
   849  06DC  02FA               	subwf	___lwmod@dividend,f
   850  06DD  0879               	movf	___lwmod@divisor+1,w
   851  06DE  1C03               	skipc
   852  06DF  03FB               	decf	___lwmod@dividend+1,f
   853  06E0  02FB               	subwf	___lwmod@dividend+1,f
   854  06E1                     l767:
   855  06E1  3001               	movlw	1
   856  06E2                     u295:
   857  06E2  1003               	clrc
   858  06E3  0CF9               	rrf	___lwmod@divisor+1,f
   859  06E4  0CF8               	rrf	___lwmod@divisor,f
   860  06E5  3EFF               	addlw	-1
   861  06E6  1D03               	skipz
   862  06E7  2EE2               	goto	u295
   863  06E8                     l769:
   864  06E8  3001               	movlw	1
   865  06E9  02FD               	subwf	___lwmod@counter,f
   866  06EA  1D03               	btfss	3,2
   867  06EB  2EED               	goto	u301
   868  06EC  2EEE               	goto	u300
   869  06ED                     u301:
   870  06ED  2ED1               	goto	l763
   871  06EE                     u300:
   872  06EE                     l771:
   873  06EE  087B               	movf	___lwmod@dividend+1,w
   874  06EF  00F9               	movwf	?___lwmod+1
   875  06F0  087A               	movf	___lwmod@dividend,w
   876  06F1  00F8               	movwf	?___lwmod
   877  06F2                     l419:
   878  06F2  0008               	return
   879  06F3                     __end_of___lwmod:
   880                           
   881                           	psect	text5
   882  07B4                     __ptext5:	
   883 ;; *************** function ___lwdiv *****************
   884 ;; Defined at:
   885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  divisor         2    0[COMMON] unsigned int 
   888 ;;  dividend        2    2[COMMON] unsigned int 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  quotient        2    5[COMMON] unsigned int 
   891 ;;  counter         1    7[COMMON] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  2    0[COMMON] unsigned int 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         4       0       0       0       0
   902 ;;      Locals:         3       0       0       0       0
   903 ;;      Temps:          1       0       0       0       0
   904 ;;      Totals:         8       0       0       0       0
   905 ;;Total ram usage:        8 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_numPortC
   911 ;;		_numPortD
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function ___lwdiv
   917  07B4                     ___lwdiv:
   918  07B4                     l727:	
   919                           ;incstack = 0
   920                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   921                           
   922  07B4  01F5               	clrf	___lwdiv@quotient
   923  07B5  01F6               	clrf	___lwdiv@quotient+1
   924  07B6                     l729:
   925  07B6  0870               	movf	___lwdiv@divisor,w
   926  07B7  0471               	iorwf	___lwdiv@divisor+1,w
   927  07B8  1903               	btfsc	3,2
   928  07B9  2FBB               	goto	u181
   929  07BA  2FBC               	goto	u180
   930  07BB                     u181:
   931  07BB  2FF3               	goto	l749
   932  07BC                     u180:
   933  07BC                     l731:
   934  07BC  01F7               	clrf	___lwdiv@counter
   935  07BD  0AF7               	incf	___lwdiv@counter,f
   936  07BE  2FCA               	goto	l737
   937  07BF                     l733:
   938  07BF  3001               	movlw	1
   939  07C0                     u195:
   940  07C0  1003               	clrc
   941  07C1  0DF0               	rlf	___lwdiv@divisor,f
   942  07C2  0DF1               	rlf	___lwdiv@divisor+1,f
   943  07C3  3EFF               	addlw	-1
   944  07C4  1D03               	skipz
   945  07C5  2FC0               	goto	u195
   946  07C6                     l735:
   947  07C6  3001               	movlw	1
   948  07C7  00F4               	movwf	??___lwdiv
   949  07C8  0874               	movf	??___lwdiv,w
   950  07C9  07F7               	addwf	___lwdiv@counter,f
   951  07CA                     l737:
   952  07CA  1FF1               	btfss	___lwdiv@divisor+1,7
   953  07CB  2FCD               	goto	u201
   954  07CC  2FCE               	goto	u200
   955  07CD                     u201:
   956  07CD  2FBF               	goto	l733
   957  07CE                     u200:
   958  07CE                     l739:
   959  07CE  3001               	movlw	1
   960  07CF                     u215:
   961  07CF  1003               	clrc
   962  07D0  0DF5               	rlf	___lwdiv@quotient,f
   963  07D1  0DF6               	rlf	___lwdiv@quotient+1,f
   964  07D2  3EFF               	addlw	-1
   965  07D3  1D03               	skipz
   966  07D4  2FCF               	goto	u215
   967  07D5  0871               	movf	___lwdiv@divisor+1,w
   968  07D6  0273               	subwf	___lwdiv@dividend+1,w
   969  07D7  1D03               	skipz
   970  07D8  2FDB               	goto	u225
   971  07D9  0870               	movf	___lwdiv@divisor,w
   972  07DA  0272               	subwf	___lwdiv@dividend,w
   973  07DB                     u225:
   974  07DB  1C03               	skipc
   975  07DC  2FDE               	goto	u221
   976  07DD  2FDF               	goto	u220
   977  07DE                     u221:
   978  07DE  2FE6               	goto	l745
   979  07DF                     u220:
   980  07DF                     l741:
   981  07DF  0870               	movf	___lwdiv@divisor,w
   982  07E0  02F2               	subwf	___lwdiv@dividend,f
   983  07E1  0871               	movf	___lwdiv@divisor+1,w
   984  07E2  1C03               	skipc
   985  07E3  03F3               	decf	___lwdiv@dividend+1,f
   986  07E4  02F3               	subwf	___lwdiv@dividend+1,f
   987  07E5                     l743:
   988  07E5  1475               	bsf	___lwdiv@quotient,0
   989  07E6                     l745:
   990  07E6  3001               	movlw	1
   991  07E7                     u235:
   992  07E7  1003               	clrc
   993  07E8  0CF1               	rrf	___lwdiv@divisor+1,f
   994  07E9  0CF0               	rrf	___lwdiv@divisor,f
   995  07EA  3EFF               	addlw	-1
   996  07EB  1D03               	skipz
   997  07EC  2FE7               	goto	u235
   998  07ED                     l747:
   999  07ED  3001               	movlw	1
  1000  07EE  02F7               	subwf	___lwdiv@counter,f
  1001  07EF  1D03               	btfss	3,2
  1002  07F0  2FF2               	goto	u241
  1003  07F1  2FF3               	goto	u240
  1004  07F2                     u241:
  1005  07F2  2FCE               	goto	l739
  1006  07F3                     u240:
  1007  07F3                     l749:
  1008  07F3  0876               	movf	___lwdiv@quotient+1,w
  1009  07F4  00F1               	movwf	?___lwdiv+1
  1010  07F5  0875               	movf	___lwdiv@quotient,w
  1011  07F6  00F0               	movwf	?___lwdiv
  1012  07F7                     l409:
  1013  07F7  0008               	return
  1014  07F8                     __end_of___lwdiv:
  1015  007E                     btemp	set	126	;btemp
  1016  007E                     wtemp0	set	126
  1017                           
  1018                           	psect	config
  1019                           
  1020                           ;Config register CONFIG1 @ 0x2007
  1021                           ;	Oscillator Selection bits
  1022                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1023                           ;	Watchdog Timer Enable bit
  1024                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1025                           ;	Power-up Timer Enable bit
  1026                           ;	PWRTE = OFF, PWRT disabled
  1027                           ;	RE3/MCLR pin function select bit
  1028                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1029                           ;	Code Protection bit
  1030                           ;	CP = OFF, Program memory code protection is disabled
  1031                           ;	Data Code Protection bit
  1032                           ;	CPD = OFF, Data memory code protection is disabled
  1033                           ;	Brown Out Reset Selection bits
  1034                           ;	BOREN = OFF, BOR disabled
  1035                           ;	Internal External Switchover bit
  1036                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1037                           ;	Fail-Safe Clock Monitor Enabled bit
  1038                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1039                           ;	Low Voltage Programming Enable bit
  1040                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1041                           ;	In-Circuit Debugger Mode bit
  1042                           ;	DEBUG = 0x1, unprogrammed default
  1043  2007                     	org	8199
  1044  2007  20F2               	dw	8434
  1045                           
  1046                           ;Config register CONFIG2 @ 0x2008
  1047                           ;	Brown-out Reset Selection bit
  1048                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1049                           ;	Flash Program Memory Self Write Enable bits
  1050                           ;	WRT = OFF, Write protection off
  1051  2008                     	org	8200
  1052  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _numPortD->___lwmod
    _numPortC->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_hienThiLedTong
    _hienThiLedTong->_numPortC
    _hienThiLedTong->_numPortD

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2918
                     _hienThiLedTong
 ---------------------------------------------------------------------------------
 (1) _hienThiLedTong                                       2     0      2    2918
                                              7 BANK0      2     0      2
                           _numPortC
                           _numPortD
 ---------------------------------------------------------------------------------
 (2) _numPortD                                             7     5      2    1399
                                              0 BANK0      7     5      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _numPortC                                             7     5      2    1399
                                              0 BANK0      7     5      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hienThiLedTong
     _numPortC
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _numPortD
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 26 12:42:29 2021

                     l33 0771                       l36 07B3                       l39 06B8  
                    l409 07F7                      l419 06F2                      l801 0711  
                    l731 07BC                      l803 0712                      l741 07DF  
                    l733 07BF                      l805 0718                      l743 07E5  
                    l735 07C6                      l727 07B4                      l807 0721  
                    l745 07E6                      l737 07CA                      l729 07B6  
                    l761 06CD                      l753 06B9                      l809 0723  
                    l747 07ED                      l739 07CE                      l763 06D1  
                    l755 06BF                      l771 06EE                      l749 07F3  
                    l765 06DB                      l757 06C2                      l781 07A7  
                    l767 06E1                      l759 06C9                      l775 0730  
                    l783 06A2                      l791 0704                      l769 06E8  
                    l777 0765                      l793 0705                      l785 06F3  
                    l779 0772                      l795 0708                      l787 0700  
                    l797 0709                      l789 0701                      l799 070A  
                    _GIE 005F                      u200 07CE                      u201 07CD  
                    u220 07DF                      u300 06EE                      u221 07DE  
                    u301 06ED                      u215 07CF                      u240 07F3  
                    u241 07F2                      u225 07DB                      u250 06BF  
                    u330 0711                      u235 07E7                      u251 06BE  
                    u315 0768                      u331 0710                      u180 07BC  
                    u340 0721                      u181 07BB                      u325 07AA  
                    u341 0720                      u270 06D1                      u271 06D0  
                    u280 06DB                      u281 06DA                      u265 06C3  
                    u195 07C0                      u285 06D7                      u295 06E2  
                    _PSA 040B                     _T0CS 040D                     _T0SE 040C  
                   _PEIE 005E                     _TMR0 0001                     _main 06F3  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188          __end_of___lwdiv 07F8          __end_of___lwmod 06F3  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _state 0029                    status 0003  
                  wtemp0 007E          __initialization 07F8             __end_of_main 0730  
       ??_hienThiLedTong 007E                   ??_main 007E                   _ANSELH 0189  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TRISA4 042C  
              ??___lwdiv 0074                ??___lwmod 007C         __end_of_numPortC 0772  
       __end_of_numPortD 07B4  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pbssBANK0 0029               __pmaintext 06F3                ?_numPortC 0020  
              ?_numPortD 0020                  ___lwdiv 07B4                  ___lwmod 06B9  
                __ptext1 06A2                  __ptext2 0772                  __ptext3 0730  
                __ptext4 06B9                  __ptext5 07B4              numPortC@num 0020  
            numPortD@num 0020     end_of_initialization 07FC               ??_numPortC 0022  
             ??_numPortD 0022        hienThiLedTong@num 0027      start_initialization 07F8  
__size_of_hienThiLedTong 0017                ___latbits 0002            __pcstackBANK0 0020  
       ___lwdiv@dividend 0072        __size_of_numPortC 0042        __size_of_numPortD 0042  
               ?___lwdiv 0070                 ?___lwmod 0078         ___lwdiv@quotient 0075  
             numPortD@CH 0023               numPortC@NG 0023               numPortD@DV 0025  
             numPortC@TR 0025           _hienThiLedTong 06A2         __size_of___lwdiv 0044  
       __size_of___lwmod 003A   __end_of_hienThiLedTong 06B9          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077            __size_of_main 003D                 _numPortC 0730  
               _numPortD 0772          ?_hienThiLedTong 0027         ___lwmod@dividend 007A  
        ___lwmod@divisor 0078          ___lwmod@counter 007D  
