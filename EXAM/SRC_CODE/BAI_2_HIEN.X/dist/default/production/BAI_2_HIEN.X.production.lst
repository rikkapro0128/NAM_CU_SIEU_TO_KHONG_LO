

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 26 13:36:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	strings
   211  0204                     __pstrings:
   212  0204                     stringtab:
   213  0204                     __stringtab:
   214  0204                     stringcode:	
   215                           ;	String table - string pointers are 1 byte each
   216                           
   217  0204                     stringdir:
   218  0204  3002               	movlw	high stringdir
   219  0205  008A               	movwf	10
   220  0206  0804               	movf	4,w
   221  0207  0A84               	incf	4,f
   222  0208  0782               	addwf	2,f
   223  0209                     __stringbase:
   224  0209  3400               	retlw	0
   225  020A                     __end_of__stringtab:
   226  020A                     _led:
   227  020A  34C0               	retlw	192
   228  020B  3400               	retlw	0
   229  020C  34F9               	retlw	249
   230  020D  3400               	retlw	0
   231  020E  34A4               	retlw	164
   232  020F  3400               	retlw	0
   233  0210  34B0               	retlw	176
   234  0211  3400               	retlw	0
   235  0212  3499               	retlw	153
   236  0213  3400               	retlw	0
   237  0214  3492               	retlw	146
   238  0215  3400               	retlw	0
   239  0216  3482               	retlw	130
   240  0217  3400               	retlw	0
   241  0218  34F8               	retlw	248
   242  0219  3400               	retlw	0
   243  021A  3480               	retlw	128
   244  021B  3400               	retlw	0
   245  021C  3490               	retlw	144
   246  021D  3400               	retlw	0
   247  021E                     __end_of_led:
   248  0007                     _PORTC	set	7
   249  0008                     _PORTD	set	8
   250  0032                     _RB2	set	50
   251  0031                     _RB1	set	49
   252  0030                     _RB0	set	48
   253  005B                     _RBIE	set	91
   254  0058                     _RBIF	set	88
   255  005F                     _GIE	set	95
   256  0096                     _IOCB	set	150
   257  0088                     _TRISD	set	136
   258  0087                     _TRISC	set	135
   259  0095                     _WPUB	set	149
   260  0086                     _TRISB	set	134
   261  040F                     _nRBPU	set	1039
   262  0189                     _ANSELH	set	393
   263  0188                     _ANSEL	set	392
   264                           
   265                           	psect	cinit
   266  0015                     start_initialization:	
   267                           ; #config settings
   268                           
   269  0015                     __initialization:
   270  0015                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  0015                     __end_of__initialization:
   274  0015  0183               	clrf	3
   275  0016  120A  118A  29E9   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_hienThiFP:
   280  0070                     ??_hienThiFP:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_myIsr:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?___lwdiv:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?___lwmod:	
   293                           ; 2 bytes @ 0x0
   294                           
   295  0070                     ___lwdiv@divisor:	
   296                           ; 2 bytes @ 0x0
   297                           
   298  0070                     ___lwmod@divisor:	
   299                           ; 2 bytes @ 0x0
   300                           
   301                           
   302                           ; 2 bytes @ 0x0
   303  0070                     	ds	2
   304  0072                     ___lwdiv@dividend:
   305  0072                     ___lwmod@dividend:	
   306                           ; 2 bytes @ 0x2
   307                           
   308                           
   309                           ; 2 bytes @ 0x2
   310  0072                     	ds	2
   311  0074                     ??___lwdiv:
   312  0074                     ??___lwmod:	
   313                           ; 1 bytes @ 0x4
   314                           
   315                           
   316                           ; 1 bytes @ 0x4
   317  0074                     	ds	1
   318  0075                     ___lwmod@counter:
   319  0075                     ___lwdiv@quotient:	
   320                           ; 1 bytes @ 0x5
   321                           
   322                           
   323                           ; 2 bytes @ 0x5
   324  0075                     	ds	2
   325  0077                     ___lwdiv@counter:
   326                           
   327                           ; 1 bytes @ 0x7
   328  0077                     	ds	1
   329  0078                     ?_demNguoc:
   330  0078                     ?_demThuan:	
   331                           ; 1 bytes @ 0x8
   332                           
   333  0078                     demNguoc@num:	
   334                           ; 1 bytes @ 0x8
   335                           
   336  0078                     demThuan@num:	
   337                           ; 2 bytes @ 0x8
   338                           
   339                           
   340                           ; 2 bytes @ 0x8
   341  0078                     	ds	2
   342  007A                     ??_demNguoc:
   343  007A                     ??_demThuan:	
   344                           ; 1 bytes @ 0xA
   345                           
   346                           
   347                           ; 1 bytes @ 0xA
   348  007A                     	ds	2
   349                           
   350                           	psect	cstackBANK0
   351  0020                     __pcstackBANK0:
   352  0020                     demNguoc@CH:
   353  0020                     demThuan@CH:	
   354                           ; 2 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358  0020                     	ds	2
   359  0022                     demNguoc@DV:
   360  0022                     demThuan@DV:	
   361                           ; 2 bytes @ 0x2
   362                           
   363                           
   364                           ; 2 bytes @ 0x2
   365  0022                     	ds	2
   366  0024                     demThuan@dem:
   367                           
   368                           ; 2 bytes @ 0x4
   369  0024                     	ds	2
   370  0026                     ??_myIsr:
   371                           
   372                           ; 1 bytes @ 0x6
   373  0026                     	ds	7
   374  002D                     myIsr@num:
   375                           
   376                           ; 2 bytes @ 0xD
   377  002D                     	ds	2
   378  002F                     myIsr@num_68:
   379                           
   380                           ; 2 bytes @ 0xF
   381  002F                     	ds	2
   382  0031                     ??_main:
   383                           
   384                           	psect	maintext
   385  01E9                     __pmaintext:	
   386                           ; 1 bytes @ 0x11
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 59 in file "BAI_2.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels required when called: 3
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  01E9                     _main:
   422  01E9                     l888:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg+status,2]
   425                           
   426                           
   427                           ;BAI_2.c: 60:     ANSEL = ANSELH = 0;
   428  01E9  1683               	bsf	3,5	;RP0=1, select bank3
   429  01EA  1703               	bsf	3,6	;RP1=1, select bank3
   430  01EB  0189               	clrf	9	;volatile
   431  01EC  0188               	clrf	8	;volatile
   432  01ED                     l890:
   433                           
   434                           ;BAI_2.c: 61:     TRISB = WPUB = 0xff;
   435  01ED  30FF               	movlw	255
   436  01EE  1683               	bsf	3,5	;RP0=1, select bank1
   437  01EF  1303               	bcf	3,6	;RP1=0, select bank1
   438  01F0  0095               	movwf	21	;volatile
   439  01F1  0086               	movwf	6	;volatile
   440  01F2                     l892:
   441                           
   442                           ;BAI_2.c: 62:     nRBPU = 0;
   443  01F2  1381               	bcf	1,7	;volatile
   444  01F3                     l894:
   445                           
   446                           ;BAI_2.c: 63:     TRISC = TRISD = 0;
   447  01F3  0188               	clrf	8	;volatile
   448  01F4  0187               	clrf	7	;volatile
   449  01F5                     l896:
   450                           
   451                           ;BAI_2.c: 64:     PORTC = PORTD = 0;
   452  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   453  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   454  01F7  0188               	clrf	8	;volatile
   455  01F8  0187               	clrf	7	;volatile
   456  01F9                     l898:
   457                           
   458                           ;BAI_2.c: 65:     GIE = 1;
   459  01F9  178B               	bsf	11,7	;volatile
   460  01FA                     l900:
   461                           
   462                           ;BAI_2.c: 66:     RBIF = 0;
   463  01FA  100B               	bcf	11,0	;volatile
   464  01FB                     l902:
   465                           
   466                           ;BAI_2.c: 67:     RBIE = 1;
   467  01FB  158B               	bsf	11,3	;volatile
   468  01FC                     l904:
   469                           
   470                           ;BAI_2.c: 68:     IOCB = 0xff;
   471  01FC  30FF               	movlw	255
   472  01FD  1683               	bsf	3,5	;RP0=1, select bank1
   473  01FE  1303               	bcf	3,6	;RP1=0, select bank1
   474  01FF  0096               	movwf	22	;volatile
   475  0200                     l54:	
   476                           ;BAI_2.c: 69:     while(1);
   477                           
   478  0200                     l55:
   479  0200  2A00               	goto	l54
   480  0201  120A  118A  2812   	ljmp	start
   481  0204                     __end_of_main:
   482                           
   483                           	psect	text1
   484  0019                     __ptext1:	
   485 ;; *************** function _myIsr *****************
   486 ;; Defined at:
   487 ;;		line 72 in file "BAI_2.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  num             2   15[BANK0 ] unsigned int 
   492 ;;  num             2   13[BANK0 ] unsigned int 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       4       0       0       0
   504 ;;      Temps:          0       7       0       0       0
   505 ;;      Totals:         0      11       0       0       0
   506 ;;Total ram usage:       11 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; Hardware stack levels required when called: 2
   509 ;; This function calls:
   510 ;;		_demNguoc
   511 ;;		_demThuan
   512 ;;		_hienThiFP
   513 ;; This function is called by:
   514 ;;		Interrupt level 1
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _myIsr
   520  0019                     _myIsr:
   521  0019                     i1l906:
   522                           
   523                           ;BAI_2.c: 73:     if(!RB0) {
   524  0019  1806               	btfsc	6,0	;volatile
   525  001A  281C               	goto	u39_21
   526  001B  281D               	goto	u39_20
   527  001C                     u39_21:
   528  001C  282B               	goto	i1l62
   529  001D                     u39_20:
   530  001D                     i1l63:
   531  001D  1C06               	btfss	6,0	;volatile
   532  001E  2820               	goto	u40_21
   533  001F  2821               	goto	u40_20
   534  0020                     u40_21:
   535  0020  281D               	goto	i1l63
   536  0021                     u40_20:
   537  0021                     i1l910:
   538                           
   539                           ;BAI_2.c: 75:         demThuan(24);
   540  0021  3018               	movlw	24
   541  0022  00F8               	movwf	demThuan@num
   542  0023  3000               	movlw	0
   543  0024  00F9               	movwf	demThuan@num+1
   544  0025  120A  118A  20A3  120A  118A  	fcall	_demThuan
   545                           
   546                           ;BAI_2.c: 76:     }
   547  002A  2896               	goto	i1l82
   548  002B                     i1l62:	
   549                           ;BAI_2.c: 77:     else if(!RB1) {
   550                           
   551  002B  1886               	btfsc	6,1	;volatile
   552  002C  282E               	goto	u41_21
   553  002D  282F               	goto	u41_20
   554  002E                     u41_21:
   555  002E  2852               	goto	i1l67
   556  002F                     u41_20:
   557  002F                     i1l68:
   558  002F  1C86               	btfss	6,1	;volatile
   559  0030  2832               	goto	u42_21
   560  0031  2833               	goto	u42_20
   561  0032                     u42_21:
   562  0032  282F               	goto	i1l68
   563  0033                     u42_20:
   564  0033                     i1l914:
   565                           
   566                           ;BAI_2.c: 79:         unsigned int num = 2;
   567  0033  3002               	movlw	2
   568  0034  00AD               	movwf	myIsr@num
   569  0035  3000               	movlw	0
   570  0036  00AE               	movwf	myIsr@num+1
   571                           
   572                           ;BAI_2.c: 80:         while(num--) {
   573  0037  2841               	goto	i1l918
   574  0038                     i1l916:
   575                           
   576                           ;BAI_2.c: 81:             demNguoc(60);
   577  0038  303C               	movlw	60
   578  0039  00F8               	movwf	demNguoc@num
   579  003A  3000               	movlw	0
   580  003B  00F9               	movwf	demNguoc@num+1
   581  003C  120A  118A  210C  120A  118A  	fcall	_demNguoc
   582  0041                     i1l918:
   583                           
   584                           ;BAI_2.c: 80:         while(num--) {
   585  0041  3001               	movlw	1
   586  0042  1283               	bcf	3,5	;RP0=0, select bank0
   587  0043  1303               	bcf	3,6	;RP1=0, select bank0
   588  0044  02AD               	subwf	myIsr@num,f
   589  0045  3000               	movlw	0
   590  0046  1C03               	skipc
   591  0047  03AE               	decf	myIsr@num+1,f
   592  0048  02AE               	subwf	myIsr@num+1,f
   593  0049  0A2D               	incf	myIsr@num,w
   594  004A  1D03               	skipz
   595  004B  2850               	goto	u43_21
   596  004C  0A2E               	incf	myIsr@num+1,w
   597  004D  1D03               	btfss	3,2
   598  004E  2850               	goto	u43_21
   599  004F  2851               	goto	u43_20
   600  0050                     u43_21:
   601  0050  2838               	goto	i1l916
   602  0051                     u43_20:
   603  0051  2896               	goto	i1l82
   604  0052                     i1l67:	
   605                           ;BAI_2.c: 84:     else if(!RB2) {
   606                           
   607  0052  1906               	btfsc	6,2	;volatile
   608  0053  2855               	goto	u44_21
   609  0054  2856               	goto	u44_20
   610  0055                     u44_21:
   611  0055  2896               	goto	i1l82
   612  0056                     u44_20:
   613  0056                     i1l76:
   614  0056  1D06               	btfss	6,2	;volatile
   615  0057  2859               	goto	u45_21
   616  0058  285A               	goto	u45_20
   617  0059                     u45_21:
   618  0059  2856               	goto	i1l76
   619  005A                     u45_20:
   620  005A                     i1l922:
   621                           
   622                           ;BAI_2.c: 86:         unsigned int num = 3;
   623  005A  3003               	movlw	3
   624  005B  00AF               	movwf	myIsr@num_68
   625  005C  3000               	movlw	0
   626  005D  00B0               	movwf	myIsr@num_68+1
   627                           
   628                           ;BAI_2.c: 87:         while(num--) {
   629  005E  2883               	goto	i1l930
   630  005F                     i1l924:
   631                           
   632                           ;BAI_2.c: 88:             PORTC = PORTD = 0xff;
   633  005F  30FF               	movlw	255
   634  0060  0088               	movwf	8	;volatile
   635  0061  0087               	movwf	7	;volatile
   636                           
   637                           ;BAI_2.c: 89:             _delay((unsigned long)((500)*(4000000/4000.0)));
   638  0062  3003               	movlw	3
   639  0063  1283               	bcf	3,5	;RP0=0, select bank0
   640  0064  1303               	bcf	3,6	;RP1=0, select bank0
   641  0065  00A8               	movwf	??_myIsr+2
   642  0066  308A               	movlw	138
   643  0067  00A7               	movwf	??_myIsr+1
   644  0068  3055               	movlw	85
   645  0069  00A6               	movwf	??_myIsr
   646  006A                     u47_27:
   647  006A  0BA6               	decfsz	??_myIsr,f
   648  006B  286A               	goto	u47_27
   649  006C  0BA7               	decfsz	??_myIsr+1,f
   650  006D  286A               	goto	u47_27
   651  006E  0BA8               	decfsz	??_myIsr+2,f
   652  006F  286A               	goto	u47_27
   653  0070                     i1l926:
   654                           
   655                           ;BAI_2.c: 90:             hienThiFP();
   656  0070  120A  118A  221E  120A  118A  	fcall	_hienThiFP
   657  0075                     i1l928:
   658                           
   659                           ;BAI_2.c: 91:             _delay((unsigned long)((500)*(4000000/4000.0)));
   660  0075  3003               	movlw	3
   661  0076  1283               	bcf	3,5	;RP0=0, select bank0
   662  0077  1303               	bcf	3,6	;RP1=0, select bank0
   663  0078  00A8               	movwf	??_myIsr+2
   664  0079  308A               	movlw	138
   665  007A  00A7               	movwf	??_myIsr+1
   666  007B  3055               	movlw	85
   667  007C  00A6               	movwf	??_myIsr
   668  007D                     u48_27:
   669  007D  0BA6               	decfsz	??_myIsr,f
   670  007E  287D               	goto	u48_27
   671  007F  0BA7               	decfsz	??_myIsr+1,f
   672  0080  287D               	goto	u48_27
   673  0081  0BA8               	decfsz	??_myIsr+2,f
   674  0082  287D               	goto	u48_27
   675  0083                     i1l930:
   676                           
   677                           ;BAI_2.c: 87:         while(num--) {
   678  0083  3001               	movlw	1
   679  0084  1283               	bcf	3,5	;RP0=0, select bank0
   680  0085  1303               	bcf	3,6	;RP1=0, select bank0
   681  0086  02AF               	subwf	myIsr@num_68,f
   682  0087  3000               	movlw	0
   683  0088  1C03               	skipc
   684  0089  03B0               	decf	myIsr@num_68+1,f
   685  008A  02B0               	subwf	myIsr@num_68+1,f
   686  008B  0A2F               	incf	myIsr@num_68,w
   687  008C  1D03               	skipz
   688  008D  2892               	goto	u46_21
   689  008E  0A30               	incf	myIsr@num_68+1,w
   690  008F  1D03               	btfss	3,2
   691  0090  2892               	goto	u46_21
   692  0091  2893               	goto	u46_20
   693  0092                     u46_21:
   694  0092  285F               	goto	i1l924
   695  0093                     u46_20:
   696  0093                     i1l932:
   697                           
   698                           ;BAI_2.c: 93:         PORTC = PORTD = 0xff;
   699  0093  30FF               	movlw	255
   700  0094  0088               	movwf	8	;volatile
   701  0095  0087               	movwf	7	;volatile
   702  0096                     i1l82:
   703  0096  1283               	bcf	3,5	;RP0=0, select bank0
   704  0097  1303               	bcf	3,6	;RP1=0, select bank0
   705  0098  082C               	movf	??_myIsr+6,w
   706  0099  00FF               	movwf	btemp+1
   707  009A  082B               	movf	??_myIsr+5,w
   708  009B  008A               	movwf	10
   709  009C  082A               	movf	??_myIsr+4,w
   710  009D  0084               	movwf	4
   711  009E  0E29               	swapf	??_myIsr+3,w
   712  009F  0083               	movwf	3
   713  00A0  0EFE               	swapf	btemp,f
   714  00A1  0E7E               	swapf	btemp,w
   715  00A2  0009               	retfie
   716  00A3                     __end_of_myIsr:
   717                           
   718                           	psect	intentry
   719  0004                     __pintentry:	
   720                           ;incstack = 0
   721                           ; Regs used in _myIsr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   722                           
   723  0004                     interrupt_function:
   724  007E                     saved_w	set	btemp
   725  0004  00FE               	movwf	btemp
   726  0005  0E03               	swapf	3,w
   727  0006  1283               	bcf	3,5	;RP0=0, select bank0
   728  0007  1303               	bcf	3,6	;RP1=0, select bank0
   729  0008  00A9               	movwf	??_myIsr+3
   730  0009  0804               	movf	4,w
   731  000A  00AA               	movwf	??_myIsr+4
   732  000B  080A               	movf	10,w
   733  000C  00AB               	movwf	??_myIsr+5
   734  000D  087F               	movf	btemp+1,w
   735  000E  00AC               	movwf	??_myIsr+6
   736  000F  120A  118A  2819   	ljmp	_myIsr
   737                           
   738                           	psect	text2
   739  021E                     __ptext2:	
   740 ;; *************** function _hienThiFP *****************
   741 ;; Defined at:
   742 ;;		line 54 in file "BAI_2.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0
   759 ;;      Totals:         0       0       0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_myIsr
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _hienThiFP
   771  021E                     _hienThiFP:
   772  021E                     i1l886:	
   773                           ;incstack = 0
   774                           ; Regs used in _hienThiFP: [wreg]
   775                           
   776                           
   777                           ;BAI_2.c: 55:     PORTD = 0b0001100 << 1;
   778  021E  3018               	movlw	24
   779  021F  1283               	bcf	3,5	;RP0=0, select bank0
   780  0220  1303               	bcf	3,6	;RP1=0, select bank0
   781  0221  0088               	movwf	8	;volatile
   782                           
   783                           ;BAI_2.c: 56:     PORTC = 0b0001110;
   784  0222  300E               	movlw	14
   785  0223  0087               	movwf	7	;volatile
   786  0224                     i1l49:
   787  0224  0008               	return
   788  0225                     __end_of_hienThiFP:
   789                           
   790                           	psect	text3
   791  00A3                     __ptext3:	
   792 ;; *************** function _demThuan *****************
   793 ;; Defined at:
   794 ;;		line 41 in file "BAI_2.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  num             2    8[COMMON] unsigned int 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  dem             2    4[BANK0 ] unsigned int 
   799 ;;  DV              2    2[BANK0 ] unsigned int 
   800 ;;  CH              2    0[BANK0 ] unsigned int 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         2       0       0       0       0
   811 ;;      Locals:         0       6       0       0       0
   812 ;;      Temps:          2       0       0       0       0
   813 ;;      Totals:         4       6       0       0       0
   814 ;;Total ram usage:       10 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 1
   817 ;; This function calls:
   818 ;;		___lwdiv
   819 ;;		___lwmod
   820 ;; This function is called by:
   821 ;;		_myIsr
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _demThuan
   827  00A3                     _demThuan:
   828  00A3                     i1l868:	
   829                           ;incstack = 0
   830                           ; Regs used in _demThuan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   831                           
   832                           
   833                           ;BAI_2.c: 42:     unsigned int dem = 0, CH = 0, DV = 0;
   834  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   835  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   836  00A5  01A4               	clrf	demThuan@dem
   837  00A6  01A5               	clrf	demThuan@dem+1
   838  00A7  01A0               	clrf	demThuan@CH
   839  00A8  01A1               	clrf	demThuan@CH+1
   840  00A9  01A2               	clrf	demThuan@DV
   841  00AA  01A3               	clrf	demThuan@DV+1
   842  00AB                     i1l870:
   843                           
   844                           ;BAI_2.c: 44:         PORTD = led[DV] << 1;
   845  00AB  0822               	movf	demThuan@DV,w
   846  00AC  00FA               	movwf	??_demThuan
   847  00AD  077A               	addwf	??_demThuan,w
   848  00AE  3E01               	addlw	low ((_led-__stringbase)| (0+32768))
   849  00AF  0084               	movwf	4
   850  00B0  120A  118A  2204  120A  118A  	fcall	stringdir
   851  00B5  00FB               	movwf	??_demThuan+1
   852  00B6  077B               	addwf	??_demThuan+1,w
   853  00B7  0088               	movwf	8	;volatile
   854  00B8                     i1l872:
   855                           
   856                           ;BAI_2.c: 45:         PORTC = led[CH];
   857  00B8  0820               	movf	demThuan@CH,w
   858  00B9  00FA               	movwf	??_demThuan
   859  00BA  077A               	addwf	??_demThuan,w
   860  00BB  3E01               	addlw	low ((_led-__stringbase)| (0+32768))
   861  00BC  0084               	movwf	4
   862  00BD  120A  118A  2204  120A  118A  	fcall	stringdir
   863  00C2  0087               	movwf	7	;volatile
   864  00C3                     i1l874:
   865                           
   866                           ;BAI_2.c: 46:         _delay((unsigned long)((50)*(4000000/4000.0)));
   867  00C3  3041               	movlw	65
   868  00C4  00FB               	movwf	??_demThuan+1
   869  00C5  30EE               	movlw	238
   870  00C6  00FA               	movwf	??_demThuan
   871  00C7                     u49_27:
   872  00C7  0BFA               	decfsz	??_demThuan,f
   873  00C8  28C7               	goto	u49_27
   874  00C9  0BFB               	decfsz	??_demThuan+1,f
   875  00CA  28C7               	goto	u49_27
   876  00CB  0000               	nop
   877  00CC                     i1l876:
   878                           
   879                           ;BAI_2.c: 47:         dem++;
   880  00CC  3001               	movlw	1
   881  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   882  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   883  00CF  07A4               	addwf	demThuan@dem,f
   884  00D0  1803               	skipnc
   885  00D1  0AA5               	incf	demThuan@dem+1,f
   886  00D2  3000               	movlw	0
   887  00D3  07A5               	addwf	demThuan@dem+1,f
   888  00D4                     i1l878:
   889                           
   890                           ;BAI_2.c: 48:         CH = dem / 10;
   891  00D4  300A               	movlw	10
   892  00D5  00F0               	movwf	___lwdiv@divisor
   893  00D6  3000               	movlw	0
   894  00D7  00F1               	movwf	___lwdiv@divisor+1
   895  00D8  0825               	movf	demThuan@dem+1,w
   896  00D9  00F3               	movwf	___lwdiv@dividend+1
   897  00DA  0824               	movf	demThuan@dem,w
   898  00DB  00F2               	movwf	___lwdiv@dividend
   899  00DC  120A  118A  216B  120A  118A  	fcall	___lwdiv
   900  00E1  0871               	movf	?___lwdiv+1,w
   901  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   902  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   903  00E4  00A1               	movwf	demThuan@CH+1
   904  00E5  0870               	movf	?___lwdiv,w
   905  00E6  00A0               	movwf	demThuan@CH
   906  00E7                     i1l880:
   907                           
   908                           ;BAI_2.c: 49:         DV = dem % 10;
   909  00E7  300A               	movlw	10
   910  00E8  00F0               	movwf	___lwmod@divisor
   911  00E9  3000               	movlw	0
   912  00EA  00F1               	movwf	___lwmod@divisor+1
   913  00EB  0825               	movf	demThuan@dem+1,w
   914  00EC  00F3               	movwf	___lwmod@dividend+1
   915  00ED  0824               	movf	demThuan@dem,w
   916  00EE  00F2               	movwf	___lwmod@dividend
   917  00EF  120A  118A  21AF  120A  118A  	fcall	___lwmod
   918  00F4  0871               	movf	?___lwmod+1,w
   919  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   920  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   921  00F7  00A3               	movwf	demThuan@DV+1
   922  00F8  0870               	movf	?___lwmod,w
   923  00F9  00A2               	movwf	demThuan@DV
   924  00FA                     i1l882:
   925                           
   926                           ;BAI_2.c: 50:     }while(num--);
   927  00FA  3001               	movlw	1
   928  00FB  02F8               	subwf	demThuan@num,f
   929  00FC  3000               	movlw	0
   930  00FD  1C03               	skipc
   931  00FE  03F9               	decf	demThuan@num+1,f
   932  00FF  02F9               	subwf	demThuan@num+1,f
   933  0100  0A78               	incf	demThuan@num,w
   934  0101  1D03               	skipz
   935  0102  2907               	goto	u38_21
   936  0103  0A79               	incf	demThuan@num+1,w
   937  0104  1D03               	btfss	3,2
   938  0105  2907               	goto	u38_21
   939  0106  2908               	goto	u38_20
   940  0107                     u38_21:
   941  0107  28AB               	goto	i1l870
   942  0108                     u38_20:
   943  0108                     i1l884:
   944                           
   945                           ;BAI_2.c: 51:     PORTC = PORTD = 0xff;
   946  0108  30FF               	movlw	255
   947  0109  0088               	movwf	8	;volatile
   948  010A  0087               	movwf	7	;volatile
   949  010B                     i1l46:
   950  010B  0008               	return
   951  010C                     __end_of_demThuan:
   952                           
   953                           	psect	text4
   954  010C                     __ptext4:	
   955 ;; *************** function _demNguoc *****************
   956 ;; Defined at:
   957 ;;		line 29 in file "BAI_2.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  num             2    8[COMMON] unsigned int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  DV              2    2[BANK0 ] unsigned int 
   962 ;;  CH              2    0[BANK0 ] unsigned int 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         2       0       0       0       0
   973 ;;      Locals:         0       4       0       0       0
   974 ;;      Temps:          2       0       0       0       0
   975 ;;      Totals:         4       4       0       0       0
   976 ;;Total ram usage:        8 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 1
   979 ;; This function calls:
   980 ;;		___lwdiv
   981 ;;		___lwmod
   982 ;; This function is called by:
   983 ;;		_myIsr
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _demNguoc
   989  010C                     _demNguoc:
   990  010C                     i1l852:	
   991                           ;incstack = 0
   992                           ; Regs used in _demNguoc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   993                           
   994  010C  1283               	bcf	3,5	;RP0=0, select bank0
   995  010D  1303               	bcf	3,6	;RP1=0, select bank0
   996  010E  01A2               	clrf	demNguoc@DV
   997  010F  01A3               	clrf	demNguoc@DV+1
   998  0110                     i1l854:
   999                           
  1000                           ;BAI_2.c: 32:         CH = num / 10;
  1001  0110  300A               	movlw	10
  1002  0111  00F0               	movwf	___lwdiv@divisor
  1003  0112  3000               	movlw	0
  1004  0113  00F1               	movwf	___lwdiv@divisor+1
  1005  0114  0879               	movf	demNguoc@num+1,w
  1006  0115  00F3               	movwf	___lwdiv@dividend+1
  1007  0116  0878               	movf	demNguoc@num,w
  1008  0117  00F2               	movwf	___lwdiv@dividend
  1009  0118  120A  118A  216B  120A  118A  	fcall	___lwdiv
  1010  011D  0871               	movf	?___lwdiv+1,w
  1011  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1012  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0120  00A1               	movwf	demNguoc@CH+1
  1014  0121  0870               	movf	?___lwdiv,w
  1015  0122  00A0               	movwf	demNguoc@CH
  1016  0123                     i1l856:
  1017                           
  1018                           ;BAI_2.c: 33:         DV = num % 10;
  1019  0123  300A               	movlw	10
  1020  0124  00F0               	movwf	___lwmod@divisor
  1021  0125  3000               	movlw	0
  1022  0126  00F1               	movwf	___lwmod@divisor+1
  1023  0127  0879               	movf	demNguoc@num+1,w
  1024  0128  00F3               	movwf	___lwmod@dividend+1
  1025  0129  0878               	movf	demNguoc@num,w
  1026  012A  00F2               	movwf	___lwmod@dividend
  1027  012B  120A  118A  21AF  120A  118A  	fcall	___lwmod
  1028  0130  0871               	movf	?___lwmod+1,w
  1029  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0133  00A3               	movwf	demNguoc@DV+1
  1032  0134  0870               	movf	?___lwmod,w
  1033  0135  00A2               	movwf	demNguoc@DV
  1034  0136                     i1l858:
  1035                           
  1036                           ;BAI_2.c: 34:         PORTD = led[DV] << 1;
  1037  0136  0822               	movf	demNguoc@DV,w
  1038  0137  00FA               	movwf	??_demNguoc
  1039  0138  077A               	addwf	??_demNguoc,w
  1040  0139  3E01               	addlw	low ((_led-__stringbase)| (0+32768))
  1041  013A  0084               	movwf	4
  1042  013B  120A  118A  2204  120A  118A  	fcall	stringdir
  1043  0140  00FB               	movwf	??_demNguoc+1
  1044  0141  077B               	addwf	??_demNguoc+1,w
  1045  0142  0088               	movwf	8	;volatile
  1046  0143                     i1l860:
  1047                           
  1048                           ;BAI_2.c: 35:         PORTC = led[CH];
  1049  0143  0820               	movf	demNguoc@CH,w
  1050  0144  00FA               	movwf	??_demNguoc
  1051  0145  077A               	addwf	??_demNguoc,w
  1052  0146  3E01               	addlw	low ((_led-__stringbase)| (0+32768))
  1053  0147  0084               	movwf	4
  1054  0148  120A  118A  2204  120A  118A  	fcall	stringdir
  1055  014D  0087               	movwf	7	;volatile
  1056  014E                     i1l862:
  1057                           
  1058                           ;BAI_2.c: 36:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1059  014E  3041               	movlw	65
  1060  014F  00FB               	movwf	??_demNguoc+1
  1061  0150  30EE               	movlw	238
  1062  0151  00FA               	movwf	??_demNguoc
  1063  0152                     u50_27:
  1064  0152  0BFA               	decfsz	??_demNguoc,f
  1065  0153  2952               	goto	u50_27
  1066  0154  0BFB               	decfsz	??_demNguoc+1,f
  1067  0155  2952               	goto	u50_27
  1068  0156  0000               	nop
  1069  0157                     i1l864:
  1070                           
  1071                           ;BAI_2.c: 37:     }while(num--);
  1072  0157  3001               	movlw	1
  1073  0158  02F8               	subwf	demNguoc@num,f
  1074  0159  3000               	movlw	0
  1075  015A  1C03               	skipc
  1076  015B  03F9               	decf	demNguoc@num+1,f
  1077  015C  02F9               	subwf	demNguoc@num+1,f
  1078  015D  0A78               	incf	demNguoc@num,w
  1079  015E  1D03               	skipz
  1080  015F  2964               	goto	u37_21
  1081  0160  0A79               	incf	demNguoc@num+1,w
  1082  0161  1D03               	btfss	3,2
  1083  0162  2964               	goto	u37_21
  1084  0163  2965               	goto	u37_20
  1085  0164                     u37_21:
  1086  0164  2910               	goto	i1l854
  1087  0165                     u37_20:
  1088  0165                     i1l866:
  1089                           
  1090                           ;BAI_2.c: 38:     PORTC = PORTD = 0xff;
  1091  0165  30FF               	movlw	255
  1092  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0168  0088               	movwf	8	;volatile
  1095  0169  0087               	movwf	7	;volatile
  1096  016A                     i1l41:
  1097  016A  0008               	return
  1098  016B                     __end_of_demNguoc:
  1099                           
  1100                           	psect	text5
  1101  01AF                     __ptext5:	
  1102 ;; *************** function ___lwmod *****************
  1103 ;; Defined at:
  1104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  divisor         2    0[COMMON] unsigned int 
  1107 ;;  dividend        2    2[COMMON] unsigned int 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  counter         1    5[COMMON] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  2    0[COMMON] unsigned int 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         4       0       0       0       0
  1120 ;;      Locals:         1       0       0       0       0
  1121 ;;      Temps:          1       0       0       0       0
  1122 ;;      Totals:         6       0       0       0       0
  1123 ;;Total ram usage:        6 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_demNguoc
  1129 ;;		_demThuan
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function ___lwmod
  1135  01AF                     ___lwmod:
  1136  01AF                     i1l830:	
  1137                           ;incstack = 0
  1138                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1139                           
  1140  01AF  0870               	movf	___lwmod@divisor,w
  1141  01B0  0471               	iorwf	___lwmod@divisor+1,w
  1142  01B1  1903               	btfsc	3,2
  1143  01B2  29B4               	goto	u31_21
  1144  01B3  29B5               	goto	u31_20
  1145  01B4                     u31_21:
  1146  01B4  29E4               	goto	i1l848
  1147  01B5                     u31_20:
  1148  01B5                     i1l832:
  1149  01B5  01F5               	clrf	___lwmod@counter
  1150  01B6  0AF5               	incf	___lwmod@counter,f
  1151  01B7  29C3               	goto	i1l838
  1152  01B8                     i1l834:
  1153  01B8  3001               	movlw	1
  1154  01B9                     u32_25:
  1155  01B9  1003               	clrc
  1156  01BA  0DF0               	rlf	___lwmod@divisor,f
  1157  01BB  0DF1               	rlf	___lwmod@divisor+1,f
  1158  01BC  3EFF               	addlw	-1
  1159  01BD  1D03               	skipz
  1160  01BE  29B9               	goto	u32_25
  1161  01BF                     i1l836:
  1162  01BF  3001               	movlw	1
  1163  01C0  00F4               	movwf	??___lwmod
  1164  01C1  0874               	movf	??___lwmod,w
  1165  01C2  07F5               	addwf	___lwmod@counter,f
  1166  01C3                     i1l838:
  1167  01C3  1FF1               	btfss	___lwmod@divisor+1,7
  1168  01C4  29C6               	goto	u33_21
  1169  01C5  29C7               	goto	u33_20
  1170  01C6                     u33_21:
  1171  01C6  29B8               	goto	i1l834
  1172  01C7                     u33_20:
  1173  01C7                     i1l840:
  1174  01C7  0871               	movf	___lwmod@divisor+1,w
  1175  01C8  0273               	subwf	___lwmod@dividend+1,w
  1176  01C9  1D03               	skipz
  1177  01CA  29CD               	goto	u34_25
  1178  01CB  0870               	movf	___lwmod@divisor,w
  1179  01CC  0272               	subwf	___lwmod@dividend,w
  1180  01CD                     u34_25:
  1181  01CD  1C03               	skipc
  1182  01CE  29D0               	goto	u34_21
  1183  01CF  29D1               	goto	u34_20
  1184  01D0                     u34_21:
  1185  01D0  29D7               	goto	i1l844
  1186  01D1                     u34_20:
  1187  01D1                     i1l842:
  1188  01D1  0870               	movf	___lwmod@divisor,w
  1189  01D2  02F2               	subwf	___lwmod@dividend,f
  1190  01D3  0871               	movf	___lwmod@divisor+1,w
  1191  01D4  1C03               	skipc
  1192  01D5  03F3               	decf	___lwmod@dividend+1,f
  1193  01D6  02F3               	subwf	___lwmod@dividend+1,f
  1194  01D7                     i1l844:
  1195  01D7  3001               	movlw	1
  1196  01D8                     u35_25:
  1197  01D8  1003               	clrc
  1198  01D9  0CF1               	rrf	___lwmod@divisor+1,f
  1199  01DA  0CF0               	rrf	___lwmod@divisor,f
  1200  01DB  3EFF               	addlw	-1
  1201  01DC  1D03               	skipz
  1202  01DD  29D8               	goto	u35_25
  1203  01DE                     i1l846:
  1204  01DE  3001               	movlw	1
  1205  01DF  02F5               	subwf	___lwmod@counter,f
  1206  01E0  1D03               	btfss	3,2
  1207  01E1  29E3               	goto	u36_21
  1208  01E2  29E4               	goto	u36_20
  1209  01E3                     u36_21:
  1210  01E3  29C7               	goto	i1l840
  1211  01E4                     u36_20:
  1212  01E4                     i1l848:
  1213  01E4  0873               	movf	___lwmod@dividend+1,w
  1214  01E5  00F1               	movwf	?___lwmod+1
  1215  01E6  0872               	movf	___lwmod@dividend,w
  1216  01E7  00F0               	movwf	?___lwmod
  1217  01E8                     i1l450:
  1218  01E8  0008               	return
  1219  01E9                     __end_of___lwmod:
  1220                           
  1221                           	psect	text6
  1222  016B                     __ptext6:	
  1223 ;; *************** function ___lwdiv *****************
  1224 ;; Defined at:
  1225 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  divisor         2    0[COMMON] unsigned int 
  1228 ;;  dividend        2    2[COMMON] unsigned int 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  quotient        2    5[COMMON] unsigned int 
  1231 ;;  counter         1    7[COMMON] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  2    0[COMMON] unsigned int 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         4       0       0       0       0
  1242 ;;      Locals:         3       0       0       0       0
  1243 ;;      Temps:          1       0       0       0       0
  1244 ;;      Totals:         8       0       0       0       0
  1245 ;;Total ram usage:        8 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_demNguoc
  1251 ;;		_demThuan
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function ___lwdiv
  1257  016B                     ___lwdiv:
  1258  016B                     i1l804:	
  1259                           ;incstack = 0
  1260                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1261                           
  1262  016B  01F5               	clrf	___lwdiv@quotient
  1263  016C  01F6               	clrf	___lwdiv@quotient+1
  1264  016D                     i1l806:
  1265  016D  0870               	movf	___lwdiv@divisor,w
  1266  016E  0471               	iorwf	___lwdiv@divisor+1,w
  1267  016F  1903               	btfsc	3,2
  1268  0170  2972               	goto	u24_21
  1269  0171  2973               	goto	u24_20
  1270  0172                     u24_21:
  1271  0172  29AA               	goto	i1l826
  1272  0173                     u24_20:
  1273  0173                     i1l808:
  1274  0173  01F7               	clrf	___lwdiv@counter
  1275  0174  0AF7               	incf	___lwdiv@counter,f
  1276  0175  2981               	goto	i1l814
  1277  0176                     i1l810:
  1278  0176  3001               	movlw	1
  1279  0177                     u25_25:
  1280  0177  1003               	clrc
  1281  0178  0DF0               	rlf	___lwdiv@divisor,f
  1282  0179  0DF1               	rlf	___lwdiv@divisor+1,f
  1283  017A  3EFF               	addlw	-1
  1284  017B  1D03               	skipz
  1285  017C  2977               	goto	u25_25
  1286  017D                     i1l812:
  1287  017D  3001               	movlw	1
  1288  017E  00F4               	movwf	??___lwdiv
  1289  017F  0874               	movf	??___lwdiv,w
  1290  0180  07F7               	addwf	___lwdiv@counter,f
  1291  0181                     i1l814:
  1292  0181  1FF1               	btfss	___lwdiv@divisor+1,7
  1293  0182  2984               	goto	u26_21
  1294  0183  2985               	goto	u26_20
  1295  0184                     u26_21:
  1296  0184  2976               	goto	i1l810
  1297  0185                     u26_20:
  1298  0185                     i1l816:
  1299  0185  3001               	movlw	1
  1300  0186                     u27_25:
  1301  0186  1003               	clrc
  1302  0187  0DF5               	rlf	___lwdiv@quotient,f
  1303  0188  0DF6               	rlf	___lwdiv@quotient+1,f
  1304  0189  3EFF               	addlw	-1
  1305  018A  1D03               	skipz
  1306  018B  2986               	goto	u27_25
  1307  018C  0871               	movf	___lwdiv@divisor+1,w
  1308  018D  0273               	subwf	___lwdiv@dividend+1,w
  1309  018E  1D03               	skipz
  1310  018F  2992               	goto	u28_25
  1311  0190  0870               	movf	___lwdiv@divisor,w
  1312  0191  0272               	subwf	___lwdiv@dividend,w
  1313  0192                     u28_25:
  1314  0192  1C03               	skipc
  1315  0193  2995               	goto	u28_21
  1316  0194  2996               	goto	u28_20
  1317  0195                     u28_21:
  1318  0195  299D               	goto	i1l822
  1319  0196                     u28_20:
  1320  0196                     i1l818:
  1321  0196  0870               	movf	___lwdiv@divisor,w
  1322  0197  02F2               	subwf	___lwdiv@dividend,f
  1323  0198  0871               	movf	___lwdiv@divisor+1,w
  1324  0199  1C03               	skipc
  1325  019A  03F3               	decf	___lwdiv@dividend+1,f
  1326  019B  02F3               	subwf	___lwdiv@dividend+1,f
  1327  019C                     i1l820:
  1328  019C  1475               	bsf	___lwdiv@quotient,0
  1329  019D                     i1l822:
  1330  019D  3001               	movlw	1
  1331  019E                     u29_25:
  1332  019E  1003               	clrc
  1333  019F  0CF1               	rrf	___lwdiv@divisor+1,f
  1334  01A0  0CF0               	rrf	___lwdiv@divisor,f
  1335  01A1  3EFF               	addlw	-1
  1336  01A2  1D03               	skipz
  1337  01A3  299E               	goto	u29_25
  1338  01A4                     i1l824:
  1339  01A4  3001               	movlw	1
  1340  01A5  02F7               	subwf	___lwdiv@counter,f
  1341  01A6  1D03               	btfss	3,2
  1342  01A7  29A9               	goto	u30_21
  1343  01A8  29AA               	goto	u30_20
  1344  01A9                     u30_21:
  1345  01A9  2985               	goto	i1l816
  1346  01AA                     u30_20:
  1347  01AA                     i1l826:
  1348  01AA  0876               	movf	___lwdiv@quotient+1,w
  1349  01AB  00F1               	movwf	?___lwdiv+1
  1350  01AC  0875               	movf	___lwdiv@quotient,w
  1351  01AD  00F0               	movwf	?___lwdiv
  1352  01AE                     i1l440:
  1353  01AE  0008               	return
  1354  01AF                     __end_of___lwdiv:
  1355  007E                     btemp	set	126	;btemp
  1356  007E                     wtemp0	set	126
  1357                           
  1358                           	psect	config
  1359                           
  1360                           ;Config register CONFIG1 @ 0x2007
  1361                           ;	Oscillator Selection bits
  1362                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1363                           ;	Watchdog Timer Enable bit
  1364                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1365                           ;	Power-up Timer Enable bit
  1366                           ;	PWRTE = OFF, PWRT disabled
  1367                           ;	RE3/MCLR pin function select bit
  1368                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1369                           ;	Code Protection bit
  1370                           ;	CP = OFF, Program memory code protection is disabled
  1371                           ;	Data Code Protection bit
  1372                           ;	CPD = OFF, Data memory code protection is disabled
  1373                           ;	Brown Out Reset Selection bits
  1374                           ;	BOREN = OFF, BOR disabled
  1375                           ;	Internal External Switchover bit
  1376                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1377                           ;	Fail-Safe Clock Monitor Enabled bit
  1378                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1379                           ;	Low Voltage Programming Enable bit
  1380                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1381                           ;	In-Circuit Debugger Mode bit
  1382                           ;	DEBUG = 0x1, unprogrammed default
  1383  2007                     	org	8199
  1384  2007  20F2               	dw	8434
  1385                           
  1386                           ;Config register CONFIG2 @ 0x2008
  1387                           ;	Brown-out Reset Selection bit
  1388                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1389                           ;	Flash Program Memory Self Write Enable bits
  1390                           ;	WRT = OFF, Write protection off
  1391  2008                     	org	8200
  1392  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    20
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     17      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    _myIsr->_demNguoc
    _myIsr->_demThuan
    _demThuan->___lwdiv
    _demNguoc->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    _myIsr->_demThuan

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myIsr                                               11    11      0    2286
                                              6 BANK0     11    11      0
                           _demNguoc
                           _demThuan
                          _hienThiFP
 ---------------------------------------------------------------------------------
 (2) _hienThiFP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _demThuan                                            10     8      2    1121
                                              8 COMMON     4     2      2
                                              0 BANK0      6     6      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _demNguoc                                             8     6      2    1119
                                              8 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myIsr (ROOT)
   _demNguoc
     ___lwdiv
     ___lwmod
   _demThuan
     ___lwdiv
     ___lwmod
   _hienThiFP

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 26 13:36:39 2021

                      pc 0002                       l54 0200                       l55 0200  
                     fsr 0004                      l900 01FA                      l902 01FB  
                    l904 01FC                      l890 01ED                      l892 01F2  
                    l894 01F3                      l896 01F5                      l888 01E9  
                    l898 01F9                      _GIE 005F                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _led 020A  
                    fsr0 0004                     _IOCB 0096                     _RBIE 005B  
                   _RBIF 0058                     i1l41 016A                     i1l46 010B  
                   i1l62 002B                     i1l63 001D                     i1l49 0224  
                   i1l82 0096                     i1l67 0052                     i1l76 0056  
                   i1l68 002F                     _WPUB 0095                     _main 01E9  
                   btemp 007E                     start 0012                    ?_main 0070  
                  _ANSEL 0188          __end_of___lwdiv 01AF                    i1l440 01AE  
        __end_of___lwmod 01E9                    i1l450 01E8                    i1l810 0176  
                  i1l820 019C                    i1l812 017D                    i1l804 016B  
                  i1l822 019D                    i1l814 0181                    i1l806 016D  
                  i1l830 01AF                    i1l910 0021                    i1l824 01A4  
                  i1l816 0185                    i1l808 0173                    i1l840 01C7  
                  i1l832 01B5                    i1l818 0196                    i1l826 01AA  
                  i1l842 01D1                    i1l834 01B8                    i1l930 0083  
                  i1l922 005A                    i1l914 0033                    i1l906 0019  
                  i1l844 01D7                    i1l836 01BF                    i1l860 0143  
                  i1l852 010C                    i1l932 0093                    i1l924 005F  
                  i1l916 0038                    i1l846 01DE                    i1l838 01C3  
                  i1l862 014E                    i1l854 0110                    i1l870 00AB  
                  i1l926 0070                    i1l918 0041                    i1l848 01E4  
                  i1l864 0157                    i1l856 0123                    i1l880 00E7  
                  i1l872 00B8                    i1l928 0075                    i1l866 0165  
                  i1l858 0136                    i1l882 00FA                    i1l874 00C3  
                  i1l884 0108                    i1l876 00CC                    i1l868 00A3  
                  i1l878 00D4                    i1l886 021E                    u30_20 01AA  
                  u30_21 01A9                    u31_20 01B5                    u31_21 01B4  
                  u24_20 0173                    u40_20 0021                    u24_21 0172  
                  u40_21 0020                    u32_25 01B9                    u33_20 01C7  
                  u41_20 002F                    u33_21 01C6                    u41_21 002E  
                  u25_25 0177                    u26_20 0185                    u34_20 01D1  
                  u42_20 0033                    u26_21 0184                    u34_21 01D0  
                  u42_21 0032                    u34_25 01CD                    u50_27 0152  
                  u43_20 0051                    u43_21 0050                    _PORTC 0007  
                  _PORTD 0008                    u27_25 0186                    u35_25 01D8  
                  u28_20 0196                    u36_20 01E4                    u44_20 0056  
                  u28_21 0195                    u36_21 01E3                    u44_21 0055  
                  u28_25 0192                    u37_20 0165                    u45_20 005A  
                  u37_21 0164                    u45_21 0059                    u29_25 019E  
                  u38_20 0108                    u46_20 0093                    u38_21 0107  
                  u46_21 0092                    u39_20 001D                    u39_21 001C  
                  u47_27 006A                    u48_27 007D                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    u49_27 00C7  
                  _nRBPU 040F                    _myIsr 0019                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 0204                   ??_main 0031                   ?_myIsr 0070  
                 _ANSELH 0189         __end_of_demNguoc 016B         __end_of_demThuan 010C  
              ??___lwdiv 0074                ??___lwmod 0074                   saved_w 007E  
__end_of__initialization 0015              myIsr@num_68 002F           __pcstackCOMMON 0070  
          __end_of_myIsr 00A3       __size_of_hienThiFP 0007                  ??_myIsr 0026  
             __pmaintext 01E9               __pintentry 0004                ?_demNguoc 0078  
              ?_demThuan 0078               __stringtab 0204               demNguoc@CH 0020  
             demNguoc@DV 0022        __end_of_hienThiFP 0225               demThuan@CH 0020  
             demThuan@DV 0022                  ___lwdiv 016B                  ___lwmod 01AF  
                __ptext1 0019                  __ptext2 021E                  __ptext3 00A3  
                __ptext4 010C                  __ptext5 01AF                  __ptext6 016B  
             ??_demNguoc 007A               ??_demThuan 007A     end_of_initialization 0015  
    start_initialization 0015              __end_of_led 021E                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_demNguoc 005F        __size_of_demThuan 0069  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0070  
              _hienThiFP 021E                __pstrings 0204         ___lwdiv@quotient 0075  
         __size_of_myIsr 008A        interrupt_function 0004               ?_hienThiFP 0070  
            __stringbase 0209              demNguoc@num 0078         __size_of___lwdiv 0044  
       __size_of___lwmod 003A       __end_of__stringtab 020A              demThuan@dem 0024  
            demThuan@num 0078                 _demNguoc 010C                 _demThuan 00A3  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077            __size_of_main 001B  
            ??_hienThiFP 0070                 myIsr@num 002D                 intlevel1 0000  
       ___lwmod@dividend 0072                stringcode 0204          ___lwmod@divisor 0070  
        ___lwmod@counter 0075                 stringdir 0204                 stringtab 0204  
