

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 25 18:46:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	strings
   291  0003                     __pstrings:
   292  0003                     stringtab:
   293  0003                     __stringtab:
   294  0003                     stringcode:	
   295                           ;	String table - string pointers are 1 byte each
   296                           
   297  0003                     stringdir:
   298  0003  3000               	movlw	high stringdir
   299  0004  008A               	movwf	10
   300  0005  0804               	movf	4,w
   301  0006  0A84               	incf	4,f
   302  0007  0782               	addwf	2,f
   303  0008                     __stringbase:
   304  0008  3400               	retlw	0
   305  0009                     __end_of__stringtab:
   306  0009                     main@special_end:
   307  0009  3401               	retlw	1
   308  000A  3405               	retlw	5
   309  000B  340A               	retlw	10
   310  000C  3404               	retlw	4
   311  000D  340A               	retlw	10
   312  000E  340C               	retlw	12
   313  000F  3407               	retlw	7
   314  0010  3400               	retlw	0
   315  0011  3402               	retlw	2
   316  0012  3404               	retlw	4
   317  0013  3400               	retlw	0
   318  0014  3412               	retlw	18
   319  0015  3412               	retlw	18
   320  0016  3412               	retlw	18
   321  0017  340C               	retlw	12
   322  0018  3400               	retlw	0
   323  0019  340C               	retlw	12
   324  001A  3412               	retlw	18
   325  001B  3400               	retlw	0
   326  001C  340C               	retlw	12
   327  001D  3412               	retlw	18
   328  001E  3412               	retlw	18
   329  001F  340C               	retlw	12
   330  0020  3400               	retlw	0
   331  0021  340C               	retlw	12
   332  0022  3404               	retlw	4
   333  0023  340B               	retlw	11
   334  0024  3401               	retlw	1
   335  0025  3412               	retlw	18
   336  0026  3412               	retlw	18
   337  0027  340C               	retlw	12
   338  0028  3400               	retlw	0
   339  0029  3402               	retlw	2
   340  002A  3404               	retlw	4
   341  002B  3411               	retlw	17
   342  002C  340A               	retlw	10
   343  002D  3404               	retlw	4
   344  002E  3404               	retlw	4
   345  002F  3404               	retlw	4
   346  0030  3400               	retlw	0
   347  0031  3499               	retlw	153
   348  0032                     __end_ofmain@special_end:
   349  0032                     main@special_name_info:
   350  0032  340D               	retlw	13
   351  0033  3412               	retlw	18
   352  0034  3408               	retlw	8
   353  0035  3414               	retlw	20
   354  0036  3408               	retlw	8
   355  0037  3414               	retlw	20
   356  0038  341E               	retlw	30
   357  0039  3400               	retlw	0
   358  003A  3401               	retlw	1
   359  003B  340A               	retlw	10
   360  003C  3414               	retlw	20
   361  003D  3400               	retlw	0
   362  003E  341C               	retlw	28
   363  003F  3414               	retlw	20
   364  0040  341F               	retlw	31
   365  0041  3400               	retlw	0
   366  0042  3400               	retlw	0
   367  0043  3404               	retlw	4
   368  0044  3408               	retlw	8
   369  0045  3400               	retlw	0
   370  0046  341C               	retlw	28
   371  0047  3414               	retlw	20
   372  0048  341E               	retlw	30
   373  0049  3400               	retlw	0
   374  004A  340E               	retlw	14
   375  004B  3409               	retlw	9
   376  004C  3409               	retlw	9
   377  004D  341D               	retlw	29
   378  004E  3409               	retlw	9
   379  004F  3409               	retlw	9
   380  0050  340E               	retlw	14
   381  0051  3400               	retlw	0
   382  0052  3499               	retlw	153
   383  0053                     __end_ofmain@special_name_info:
   384  0053                     main@end_first:
   385  0053  3454               	retlw	84
   386  0054  3468               	retlw	104
   387  0055  3469               	retlw	105
   388  0056  3420               	retlw	32
   389  0057  346B               	retlw	107
   390  0058  3400               	retlw	0
   391  0059  3474               	retlw	116
   392  005A  3420               	retlw	32
   393  005B  3474               	retlw	116
   394  005C  3468               	retlw	104
   395  005D  3401               	retlw	1
   396  005E  3463               	retlw	99
   397  005F  3420               	retlw	32
   398  0060  346D               	retlw	109
   399  0061  3402               	retlw	2
   400  0062  346E               	retlw	110
   401  0063  340A               	retlw	10
   402  0064                     __end_ofmain@end_first:
   403  0064                     main@info:
   404  0064  3403               	retlw	3
   405  0065  3454               	retlw	84
   406  0066  3456               	retlw	86
   407  0067  3454               	retlw	84
   408  0068  3431               	retlw	49
   409  0069  3435               	retlw	53
   410  006A  3441               	retlw	65
   411  006B  342D               	retlw	45
   412  006C  3431               	retlw	49
   413  006D  3439               	retlw	57
   414  006E  3434               	retlw	52
   415  006F  3433               	retlw	51
   416  0070  3436               	retlw	54
   417  0071  3434               	retlw	52
   418  0072  3438               	retlw	56
   419  0073  3431               	retlw	49
   420  0074  340A               	retlw	10
   421  0075                     __end_ofmain@info:
   422  0075                     main@your_name:
   423  0075  344E               	retlw	78
   424  0076  3467               	retlw	103
   425  0077  3475               	retlw	117
   426  0078  3479               	retlw	121
   427  0079  3400               	retlw	0
   428  007A  346E               	retlw	110
   429  007B  3420               	retlw	32
   430  007C  3454               	retlw	84
   431  007D  3401               	retlw	1
   432  007E  346E               	retlw	110
   433  007F  3420               	retlw	32
   434  0080  3450               	retlw	80
   435  0081  3468               	retlw	104
   436  0082  3402               	retlw	2
   437  0083  3470               	retlw	112
   438  0084  340A               	retlw	10
   439  0085                     __end_ofmain@your_name:
   440  0085                     main@end_second:
   441  0085  344B               	retlw	75
   442  0086  3454               	retlw	84
   443  0087  3420               	retlw	32
   444  0088  3476               	retlw	118
   445  0089  3469               	retlw	105
   446  008A  3420               	retlw	32
   447  008B  3478               	retlw	120
   448  008C  3403               	retlw	3
   449  008D  3420               	retlw	32
   450  008E  346C               	retlw	108
   451  008F  3404               	retlw	4
   452  0090  340A               	retlw	10
   453  0091                     __end_ofmain@end_second:
   454  000E                     _TMR1L	set	14
   455  000F                     _TMR1H	set	15
   456  0031                     _RB1	set	49
   457  0030                     _RB0	set	48
   458  0080                     _TMR1ON	set	128
   459  0082                     _T1SYNC	set	130
   460  0084                     _T1CKPS0	set	132
   461  0085                     _T1CKPS1	set	133
   462  005E                     _PEIE	set	94
   463  005F                     _GIE	set	95
   464  0081                     _TMR1CS	set	129
   465  0060                     _TMR1IF	set	96
   466  0044                     _RD4	set	68
   467  0045                     _RD5	set	69
   468  0046                     _RD6	set	70
   469  0047                     _RD7	set	71
   470  0043                     _RD3	set	67
   471  0041                     _RD1	set	65
   472  0042                     _RD2	set	66
   473  0095                     _WPUB	set	149
   474  040F                     _nRBPU	set	1039
   475  0432                     _TRISB2	set	1074
   476  0431                     _TRISB1	set	1073
   477  0430                     _TRISB0	set	1072
   478  0460                     _TMR1IE	set	1120
   479  0442                     _TRISD2	set	1090
   480  0441                     _TRISD1	set	1089
   481  0443                     _TRISD3	set	1091
   482  0447                     _TRISD7	set	1095
   483  0446                     _TRISD6	set	1094
   484  0445                     _TRISD5	set	1093
   485  0444                     _TRISD4	set	1092
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488                           
   489                           	psect	cinit
   490  07FC                     start_initialization:	
   491                           ; #config settings
   492                           
   493  07FC                     __initialization:
   494  07FC                     end_of_initialization:	
   495                           ;End of C runtime variable initialization code
   496                           
   497  07FC                     __end_of__initialization:
   498  07FC  0183               	clrf	3
   499  07FD  120A  118A  2EC5   	ljmp	_main	;jump to C main() function
   500                           
   501                           	psect	cstackCOMMON
   502  0070                     __pcstackCOMMON:
   503  0070                     ?_lcd_busy:
   504  0070                     ??_lcd_busy:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_lcd_put_nibble:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_lcd_put_nibble:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_lcd_putc:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_lcd_init:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_insertCharacter:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_delayOneMS:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_getLength:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     delayOneMS@n:	
   532                           ; 2 bytes @ 0x0
   533                           
   534                           
   535                           ; 2 bytes @ 0x0
   536  0070                     	ds	1
   537  0071                     lcd_busy@busy:
   538  0071                     lcd_put_nibble@b:	
   539                           ; 1 bytes @ 0x1
   540                           
   541                           
   542                           ; 1 bytes @ 0x1
   543  0071                     	ds	1
   544  0072                     ??_getLength:
   545  0072                     ??_delayOneMS:	
   546                           ; 1 bytes @ 0x2
   547                           
   548  0072                     lcd_put_nibble@temp:	
   549                           ; 1 bytes @ 0x2
   550                           
   551  0072                     getLength@i:	
   552                           ; 1 bytes @ 0x2
   553                           
   554                           
   555                           ; 2 bytes @ 0x2
   556  0072                     	ds	1
   557  0073                     ?_lcd_put_byte:
   558  0073                     lcd_put_byte@b:	
   559                           ; 1 bytes @ 0x3
   560                           
   561                           
   562                           ; 1 bytes @ 0x3
   563  0073                     	ds	1
   564  0074                     ??_lcd_put_byte:
   565  0074                     getLength@character:	
   566                           ; 1 bytes @ 0x4
   567                           
   568                           
   569                           ; 1 bytes @ 0x4
   570  0074                     	ds	1
   571  0075                     lcd_put_byte@rs:
   572                           
   573                           ; 1 bytes @ 0x5
   574  0075                     	ds	1
   575  0076                     ?_lcd_gotoxy:
   576  0076                     ??_lcd_init:	
   577                           ; 1 bytes @ 0x6
   578                           
   579  0076                     ??_insertCharacter:	
   580                           ; 1 bytes @ 0x6
   581                           
   582  0076                     lcd_gotoxy@row:	
   583                           ; 1 bytes @ 0x6
   584                           
   585                           
   586                           ; 1 bytes @ 0x6
   587  0076                     	ds	1
   588  0077                     ??_lcd_gotoxy:
   589  0077                     insertCharacter@i:	
   590                           ; 1 bytes @ 0x7
   591                           
   592                           
   593                           ; 2 bytes @ 0x7
   594  0077                     	ds	1
   595  0078                     lcd_gotoxy@col:
   596                           
   597                           ; 1 bytes @ 0x8
   598  0078                     	ds	1
   599  0079                     lcd_gotoxy@address:
   600  0079                     insertCharacter@character:	
   601                           ; 1 bytes @ 0x9
   602                           
   603                           
   604                           ; 1 bytes @ 0x9
   605  0079                     	ds	1
   606  007A                     ??_lcd_putc:
   607                           
   608                           ; 1 bytes @ 0xA
   609  007A                     	ds	2
   610  007C                     lcd_putc@c:
   611                           
   612                           ; 1 bytes @ 0xC
   613  007C                     	ds	1
   614  007D                     ??_main:
   615                           
   616                           	psect	cstackBANK0
   617  0020                     __pcstackBANK0:	
   618                           ; 1 bytes @ 0xD
   619                           
   620  0020                     main@length:
   621                           
   622                           ; 2 bytes @ 0x0
   623  0020                     	ds	2
   624  0022                     main@i:
   625                           
   626                           ; 2 bytes @ 0x2
   627  0022                     	ds	2
   628                           
   629                           	psect	maintext
   630  06C5                     __pmaintext:	
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   633 ;;
   634 ;; *************** function _main *****************
   635 ;; Defined at:
   636 ;;		line 62 in file "BAI_3.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  delays          2    0        unsigned int 
   641 ;;  i               2    2[BANK0 ] unsigned int 
   642 ;;  length          2    0[BANK0 ] unsigned int 
   643 ;;  times           2    0        unsigned int 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : B00/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       4       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         0       4       0       0       0
   657 ;;Total ram usage:        4 bytes
   658 ;; Hardware stack levels required when called: 4
   659 ;; This function calls:
   660 ;;		_delayOneMS
   661 ;;		_getLength
   662 ;;		_insertCharacter
   663 ;;		_lcd_gotoxy
   664 ;;		_lcd_init
   665 ;;		_lcd_putc
   666 ;; This function is called by:
   667 ;;		Startup code after reset
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _main
   673  06C5                     _main:
   674  06C5                     l1404:	
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   677                           
   678                           
   679                           ;BAI_3.c: 63:     ANSEL = ANSELH = 0;
   680  06C5  1683               	bsf	3,5	;RP0=1, select bank3
   681  06C6  1703               	bsf	3,6	;RP1=1, select bank3
   682  06C7  0189               	clrf	9	;volatile
   683  06C8  0188               	clrf	8	;volatile
   684  06C9                     l1406:
   685                           
   686                           ;BAI_3.c: 64:     TRISB0 = 1;
   687  06C9  1683               	bsf	3,5	;RP0=1, select bank1
   688  06CA  1303               	bcf	3,6	;RP1=0, select bank1
   689  06CB  1406               	bsf	6,0	;volatile
   690  06CC                     l1408:
   691                           
   692                           ;BAI_3.c: 65:     TRISB1 = 1;
   693  06CC  1486               	bsf	6,1	;volatile
   694  06CD                     l1410:
   695                           
   696                           ;BAI_3.c: 66:     TRISB2 = 1;
   697  06CD  1506               	bsf	6,2	;volatile
   698  06CE                     l1412:
   699                           
   700                           ;BAI_3.c: 67:     nRBPU = 0;
   701  06CE  1381               	bcf	1,7	;volatile
   702  06CF                     l1414:
   703                           
   704                           ;BAI_3.c: 68:     WPUB = 0x07;
   705  06CF  3007               	movlw	7
   706  06D0  0095               	movwf	21	;volatile
   707  06D1                     l1416:
   708  06D1                     l1418:
   709  06D1                     l1420:
   710  06D1                     l1422:
   711                           
   712                           ;BAI_3.c: 92:         if(!RB0) {
   713  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   714  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   715  06D3  1806               	btfsc	6,0	;volatile
   716  06D4  2ED6               	goto	u781
   717  06D5  2ED7               	goto	u780
   718  06D6                     u781:
   719  06D6  2F69               	goto	l219
   720  06D7                     u780:
   721  06D7                     l220:
   722  06D7  1C06               	btfss	6,0	;volatile
   723  06D8  2EDA               	goto	u791
   724  06D9  2EDB               	goto	u790
   725  06DA                     u791:
   726  06DA  2ED7               	goto	l220
   727  06DB                     u790:
   728  06DB                     l1426:
   729                           
   730                           ;BAI_3.c: 94:             lcd_init();
   731  06DB  120A  118A  2622  120A  118A  	fcall	_lcd_init
   732  06E0                     l1428:
   733                           
   734                           ;BAI_3.c: 95:             insertCharacter(special_name_info);
   735  06E0  302A               	movlw	(low ((main@special_name_info-__stringbase)| (0+32768)))& (0+255)
   736  06E1  120A  118A  257F  120A  118A  	fcall	_insertCharacter
   737  06E6                     l1430:
   738                           
   739                           ;BAI_3.c: 96:             lcd_putc('\f');
   740  06E6  300C               	movlw	12
   741  06E7  120A  118A  25C6  120A  118A  	fcall	_lcd_putc
   742                           
   743                           ;BAI_3.c: 97:             lcd_gotoxy(0, 0);
   744  06EC  01F6               	clrf	lcd_gotoxy@row
   745  06ED  3000               	movlw	0
   746  06EE  120A  118A  2485  120A  118A  	fcall	_lcd_gotoxy
   747  06F3                     l1432:
   748                           
   749                           ;BAI_3.c: 98:             length = getLength(your_name);
   750  06F3  306D               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   751  06F4  120A  118A  2468  120A  118A  	fcall	_getLength
   752  06F9  0871               	movf	?_getLength+1,w
   753  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   754  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   755  06FC  00A1               	movwf	main@length+1
   756  06FD  0870               	movf	?_getLength,w
   757  06FE  00A0               	movwf	main@length
   758  06FF                     l1434:
   759                           
   760                           ;BAI_3.c: 99:             for(i = 0; i < length; i++) {
   761  06FF  01A2               	clrf	main@i
   762  0700  01A3               	clrf	main@i+1
   763  0701  2F17               	goto	l1440
   764  0702                     l1436:
   765                           
   766                           ;BAI_3.c: 100:                 lcd_putc(your_name[i]);
   767  0702  0822               	movf	main@i,w
   768  0703  3E6D               	addlw	low ((main@your_name-__stringbase)| (0+32768))
   769  0704  0084               	movwf	4
   770  0705  120A  118A  2003  120A  118A  	fcall	stringdir
   771  070A  120A  118A  25C6  120A  118A  	fcall	_lcd_putc
   772  070F                     l1438:
   773                           
   774                           ;BAI_3.c: 101:             }
   775  070F  3001               	movlw	1
   776  0710  1283               	bcf	3,5	;RP0=0, select bank0
   777  0711  1303               	bcf	3,6	;RP1=0, select bank0
   778  0712  07A2               	addwf	main@i,f
   779  0713  1803               	skipnc
   780  0714  0AA3               	incf	main@i+1,f
   781  0715  3000               	movlw	0
   782  0716  07A3               	addwf	main@i+1,f
   783  0717                     l1440:
   784  0717  0821               	movf	main@length+1,w
   785  0718  0223               	subwf	main@i+1,w
   786  0719  1D03               	skipz
   787  071A  2F1D               	goto	u805
   788  071B  0820               	movf	main@length,w
   789  071C  0222               	subwf	main@i,w
   790  071D                     u805:
   791  071D  1C03               	skipc
   792  071E  2F20               	goto	u801
   793  071F  2F21               	goto	u800
   794  0720                     u801:
   795  0720  2F02               	goto	l1436
   796  0721                     u800:
   797  0721                     l1442:
   798                           
   799                           ;BAI_3.c: 102:             length = getLength(info);
   800  0721  305C               	movlw	(low ((main@info-__stringbase)| (0+32768)))& (0+255)
   801  0722  120A  118A  2468  120A  118A  	fcall	_getLength
   802  0727  0871               	movf	?_getLength+1,w
   803  0728  1283               	bcf	3,5	;RP0=0, select bank0
   804  0729  1303               	bcf	3,6	;RP1=0, select bank0
   805  072A  00A1               	movwf	main@length+1
   806  072B  0870               	movf	?_getLength,w
   807  072C  00A0               	movwf	main@length
   808  072D                     l1444:
   809                           
   810                           ;BAI_3.c: 103:             lcd_gotoxy(0, 1);
   811  072D  01F6               	clrf	lcd_gotoxy@row
   812  072E  0AF6               	incf	lcd_gotoxy@row,f
   813  072F  3000               	movlw	0
   814  0730  120A  118A  2485  120A  118A  	fcall	_lcd_gotoxy
   815  0735                     l1446:
   816                           
   817                           ;BAI_3.c: 104:             for(i = 0; i < length; i++) {
   818  0735  1283               	bcf	3,5	;RP0=0, select bank0
   819  0736  1303               	bcf	3,6	;RP1=0, select bank0
   820  0737  01A2               	clrf	main@i
   821  0738  01A3               	clrf	main@i+1
   822  0739  2F4F               	goto	l1452
   823  073A                     l1448:
   824                           
   825                           ;BAI_3.c: 105:                 lcd_putc(info[i]);
   826  073A  0822               	movf	main@i,w
   827  073B  3E5C               	addlw	low ((main@info-__stringbase)| (0+32768))
   828  073C  0084               	movwf	4
   829  073D  120A  118A  2003  120A  118A  	fcall	stringdir
   830  0742  120A  118A  25C6  120A  118A  	fcall	_lcd_putc
   831  0747                     l1450:
   832                           
   833                           ;BAI_3.c: 106:             }
   834  0747  3001               	movlw	1
   835  0748  1283               	bcf	3,5	;RP0=0, select bank0
   836  0749  1303               	bcf	3,6	;RP1=0, select bank0
   837  074A  07A2               	addwf	main@i,f
   838  074B  1803               	skipnc
   839  074C  0AA3               	incf	main@i+1,f
   840  074D  3000               	movlw	0
   841  074E  07A3               	addwf	main@i+1,f
   842  074F                     l1452:
   843  074F  0821               	movf	main@length+1,w
   844  0750  0223               	subwf	main@i+1,w
   845  0751  1D03               	skipz
   846  0752  2F55               	goto	u815
   847  0753  0820               	movf	main@length,w
   848  0754  0222               	subwf	main@i,w
   849  0755                     u815:
   850  0755  1C03               	skipc
   851  0756  2F58               	goto	u811
   852  0757  2F59               	goto	u810
   853  0758                     u811:
   854  0758  2F3A               	goto	l1448
   855  0759                     u810:
   856  0759                     l1454:
   857                           
   858                           ;BAI_3.c: 107:             delayOneMS(1000);
   859  0759  30E8               	movlw	232
   860  075A  00F0               	movwf	delayOneMS@n
   861  075B  3003               	movlw	3
   862  075C  00F1               	movwf	delayOneMS@n+1
   863  075D  120A  118A  24AB  120A  118A  	fcall	_delayOneMS
   864  0762                     l1456:
   865                           
   866                           ;BAI_3.c: 108:             lcd_putc('\f');
   867  0762  300C               	movlw	12
   868  0763  120A  118A  25C6  120A  118A  	fcall	_lcd_putc
   869                           
   870                           ;BAI_3.c: 109:         }else if(!RB1) {
   871  0768  2ED1               	goto	l1422
   872  0769                     l219:
   873  0769  1886               	btfsc	6,1	;volatile
   874  076A  2F6C               	goto	u821
   875  076B  2F6D               	goto	u820
   876  076C                     u821:
   877  076C  2ED1               	goto	l1422
   878  076D                     u820:
   879  076D                     l231:
   880  076D  1C86               	btfss	6,1	;volatile
   881  076E  2F70               	goto	u831
   882  076F  2F71               	goto	u830
   883  0770                     u831:
   884  0770  2F6D               	goto	l231
   885  0771                     u830:
   886  0771                     l1460:
   887                           
   888                           ;BAI_3.c: 111:             lcd_init();
   889  0771  120A  118A  2622  120A  118A  	fcall	_lcd_init
   890  0776                     l1462:
   891                           
   892                           ;BAI_3.c: 112:             insertCharacter(special_end);
   893  0776  3001               	movlw	(low ((main@special_end-__stringbase)| (0+32768)))& (0+255)
   894  0777  120A  118A  257F  120A  118A  	fcall	_insertCharacter
   895  077C                     l1464:
   896                           
   897                           ;BAI_3.c: 113:             lcd_gotoxy(0, 0);
   898  077C  01F6               	clrf	lcd_gotoxy@row
   899  077D  3000               	movlw	0
   900  077E  120A  118A  2485  120A  118A  	fcall	_lcd_gotoxy
   901                           
   902                           ;BAI_3.c: 114:             length = getLength(end_first);
   903  0783  304B               	movlw	(low ((main@end_first-__stringbase)| (0+32768)))& (0+255)
   904  0784  120A  118A  2468  120A  118A  	fcall	_getLength
   905  0789  0871               	movf	?_getLength+1,w
   906  078A  1283               	bcf	3,5	;RP0=0, select bank0
   907  078B  1303               	bcf	3,6	;RP1=0, select bank0
   908  078C  00A1               	movwf	main@length+1
   909  078D  0870               	movf	?_getLength,w
   910  078E  00A0               	movwf	main@length
   911  078F                     l1466:
   912                           
   913                           ;BAI_3.c: 115:             for(i = 0; i < length; i++) {
   914  078F  01A2               	clrf	main@i
   915  0790  01A3               	clrf	main@i+1
   916  0791  2FA7               	goto	l1472
   917  0792                     l1468:
   918                           
   919                           ;BAI_3.c: 116:                 lcd_putc(end_first[i]);
   920  0792  0822               	movf	main@i,w
   921  0793  3E4B               	addlw	low ((main@end_first-__stringbase)| (0+32768))
   922  0794  0084               	movwf	4
   923  0795  120A  118A  2003  120A  118A  	fcall	stringdir
   924  079A  120A  118A  25C6  120A  118A  	fcall	_lcd_putc
   925  079F                     l1470:
   926                           
   927                           ;BAI_3.c: 117:             }
   928  079F  3001               	movlw	1
   929  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   930  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   931  07A2  07A2               	addwf	main@i,f
   932  07A3  1803               	skipnc
   933  07A4  0AA3               	incf	main@i+1,f
   934  07A5  3000               	movlw	0
   935  07A6  07A3               	addwf	main@i+1,f
   936  07A7                     l1472:
   937  07A7  0821               	movf	main@length+1,w
   938  07A8  0223               	subwf	main@i+1,w
   939  07A9  1D03               	skipz
   940  07AA  2FAD               	goto	u845
   941  07AB  0820               	movf	main@length,w
   942  07AC  0222               	subwf	main@i,w
   943  07AD                     u845:
   944  07AD  1C03               	skipc
   945  07AE  2FB0               	goto	u841
   946  07AF  2FB1               	goto	u840
   947  07B0                     u841:
   948  07B0  2F92               	goto	l1468
   949  07B1                     u840:
   950  07B1                     l1474:
   951                           
   952                           ;BAI_3.c: 118:             length = getLength(end_second);
   953  07B1  307D               	movlw	(low ((main@end_second-__stringbase)| (0+32768)))& (0+255)
   954  07B2  120A  118A  2468  120A  118A  	fcall	_getLength
   955  07B7  0871               	movf	?_getLength+1,w
   956  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   957  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   958  07BA  00A1               	movwf	main@length+1
   959  07BB  0870               	movf	?_getLength,w
   960  07BC  00A0               	movwf	main@length
   961  07BD                     l1476:
   962                           
   963                           ;BAI_3.c: 119:             lcd_gotoxy(2, 1);
   964  07BD  01F6               	clrf	lcd_gotoxy@row
   965  07BE  0AF6               	incf	lcd_gotoxy@row,f
   966  07BF  3002               	movlw	2
   967  07C0  120A  118A  2485  120A  118A  	fcall	_lcd_gotoxy
   968  07C5                     l1478:
   969                           
   970                           ;BAI_3.c: 120:             for(i = 0; i < length; i++) {
   971  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   972  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   973  07C7  01A2               	clrf	main@i
   974  07C8  01A3               	clrf	main@i+1
   975  07C9  2FDF               	goto	l1484
   976  07CA                     l1480:
   977                           
   978                           ;BAI_3.c: 121:                 lcd_putc(end_second[i]);
   979  07CA  0822               	movf	main@i,w
   980  07CB  3E7D               	addlw	low ((main@end_second-__stringbase)| (0+32768))
   981  07CC  0084               	movwf	4
   982  07CD  120A  118A  2003  120A  118A  	fcall	stringdir
   983  07D2  120A  118A  25C6  120A  118A  	fcall	_lcd_putc
   984  07D7                     l1482:
   985                           
   986                           ;BAI_3.c: 122:             }
   987  07D7  3001               	movlw	1
   988  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   989  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   990  07DA  07A2               	addwf	main@i,f
   991  07DB  1803               	skipnc
   992  07DC  0AA3               	incf	main@i+1,f
   993  07DD  3000               	movlw	0
   994  07DE  07A3               	addwf	main@i+1,f
   995  07DF                     l1484:
   996  07DF  0821               	movf	main@length+1,w
   997  07E0  0223               	subwf	main@i+1,w
   998  07E1  1D03               	skipz
   999  07E2  2FE5               	goto	u855
  1000  07E3  0820               	movf	main@length,w
  1001  07E4  0222               	subwf	main@i,w
  1002  07E5                     u855:
  1003  07E5  1C03               	skipc
  1004  07E6  2FE8               	goto	u851
  1005  07E7  2FE9               	goto	u850
  1006  07E8                     u851:
  1007  07E8  2FCA               	goto	l1480
  1008  07E9                     u850:
  1009  07E9                     l1486:
  1010  07E9                     l1488:
  1011                           
  1012                           ;BAI_3.c: 124:             delayOneMS(2000);
  1013  07E9  30D0               	movlw	208
  1014  07EA  00F0               	movwf	delayOneMS@n
  1015  07EB  3007               	movlw	7
  1016  07EC  00F1               	movwf	delayOneMS@n+1
  1017  07ED  120A  118A  24AB  120A  118A  	fcall	_delayOneMS
  1018  07F2                     l1490:
  1019                           
  1020                           ;BAI_3.c: 125:             lcd_putc('\f');
  1021  07F2  300C               	movlw	12
  1022  07F3  120A  118A  25C6  120A  118A  	fcall	_lcd_putc
  1023  07F8  2ED1               	goto	l1422
  1024  07F9  120A  118A  2800   	ljmp	start
  1025  07FC                     __end_of_main:
  1026                           
  1027                           	psect	text1
  1028  05C6                     __ptext1:	
  1029 ;; *************** function _lcd_putc *****************
  1030 ;; Defined at:
  1031 ;;		line 190 in file "lcd.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  c               1    wreg     unsigned char 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  c               1   12[COMMON] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       0       0       0       0
  1046 ;;      Locals:         1       0       0       0       0
  1047 ;;      Temps:          2       0       0       0       0
  1048 ;;      Totals:         3       0       0       0       0
  1049 ;;Total ram usage:        3 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 3
  1052 ;; This function calls:
  1053 ;;		_lcd_busy
  1054 ;;		_lcd_gotoxy
  1055 ;;		_lcd_put_byte
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;;		_lcd_puts
  1059 ;;		_lcd_String_Delay
  1060 ;;		_putch
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           
  1065                           ;psect for function _lcd_putc
  1066  05C6                     _lcd_putc:
  1067                           
  1068                           ;incstack = 0
  1069                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1070                           ;lcd_putc@c stored from wreg
  1071  05C6  00FC               	movwf	lcd_putc@c
  1072  05C7                     l1256:
  1073                           
  1074                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1075  05C7  2E0E               	goto	l1272
  1076  05C8                     l1258:
  1077                           
  1078                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1079  05C8  01F3               	clrf	lcd_put_byte@b
  1080  05C9  0AF3               	incf	lcd_put_byte@b,f
  1081  05CA  3000               	movlw	0
  1082  05CB  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1083  05D0                     l1260:	
  1084                           ;lcd.c: 199:    while(lcd_busy());
  1085                           
  1086  05D0  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1087  05D5  3A00               	xorlw	0
  1088  05D6  1D03               	skipz
  1089  05D7  2DD9               	goto	u601
  1090  05D8  2DDA               	goto	u600
  1091  05D9                     u601:
  1092  05D9  2DD0               	goto	l1260
  1093  05DA                     u600:
  1094  05DA  2E21               	goto	l72
  1095  05DB                     l1262:
  1096                           
  1097                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1098  05DB  01F6               	clrf	lcd_gotoxy@row
  1099  05DC  0AF6               	incf	lcd_gotoxy@row,f
  1100  05DD  3000               	movlw	0
  1101  05DE  120A  118A  2485  120A  118A  	fcall	_lcd_gotoxy
  1102                           
  1103                           ;lcd.c: 203:    break;
  1104  05E3  2E21               	goto	l72
  1105  05E4                     l1264:
  1106                           
  1107                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1108  05E4  3010               	movlw	16
  1109  05E5  00FA               	movwf	??_lcd_putc
  1110  05E6  087A               	movf	??_lcd_putc,w
  1111  05E7  00F3               	movwf	lcd_put_byte@b
  1112  05E8  3000               	movlw	0
  1113  05E9  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1114  05EE                     l1266:	
  1115                           ;lcd.c: 206:    while(lcd_busy());
  1116                           
  1117  05EE  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1118  05F3  3A00               	xorlw	0
  1119  05F4  1D03               	skipz
  1120  05F5  2DF7               	goto	u611
  1121  05F6  2DF8               	goto	u610
  1122  05F7                     u611:
  1123  05F7  2DEE               	goto	l1266
  1124  05F8                     u610:
  1125  05F8  2E21               	goto	l72
  1126  05F9                     l1268:
  1127                           
  1128                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1129  05F9  087C               	movf	lcd_putc@c,w
  1130  05FA  00FA               	movwf	??_lcd_putc
  1131  05FB  087A               	movf	??_lcd_putc,w
  1132  05FC  00F3               	movwf	lcd_put_byte@b
  1133  05FD  3001               	movlw	1
  1134  05FE  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1135  0603                     l1270:	
  1136                           ;lcd.c: 212:     while(lcd_busy());
  1137                           
  1138  0603  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1139  0608  3A00               	xorlw	0
  1140  0609  1D03               	skipz
  1141  060A  2E0C               	goto	u621
  1142  060B  2E0D               	goto	u620
  1143  060C                     u621:
  1144  060C  2E03               	goto	l1270
  1145  060D                     u620:
  1146  060D  2E21               	goto	l72
  1147  060E                     l1272:
  1148  060E  087C               	movf	lcd_putc@c,w
  1149  060F  00FA               	movwf	??_lcd_putc
  1150  0610  01FB               	clrf	??_lcd_putc+1
  1151                           
  1152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1153                           ; Switch size 1, requested type "simple"
  1154                           ; Number of cases is 1, Range of values is 0 to 0
  1155                           ; switch strategies available:
  1156                           ; Name         Instructions Cycles
  1157                           ; simple_byte            4     3 (average)
  1158                           ; direct_byte           11     8 (fixed)
  1159                           ; jumptable            260     6 (fixed)
  1160                           ;	Chosen strategy is simple_byte
  1161  0611  087B               	movf	??_lcd_putc+1,w
  1162  0612  3A00               	xorlw	0	; case 0
  1163  0613  1903               	skipnz
  1164  0614  2E16               	goto	l1512
  1165  0615  2DF9               	goto	l1268
  1166  0616                     l1512:
  1167                           
  1168                           ; Switch size 1, requested type "simple"
  1169                           ; Number of cases is 3, Range of values is 8 to 12
  1170                           ; switch strategies available:
  1171                           ; Name         Instructions Cycles
  1172                           ; simple_byte           10     6 (average)
  1173                           ; direct_byte           26    11 (fixed)
  1174                           ; jumptable            263     9 (fixed)
  1175                           ;	Chosen strategy is simple_byte
  1176  0616  087A               	movf	??_lcd_putc,w
  1177  0617  3A08               	xorlw	8	; case 8
  1178  0618  1903               	skipnz
  1179  0619  2DE4               	goto	l1264
  1180  061A  3A02               	xorlw	2	; case 10
  1181  061B  1903               	skipnz
  1182  061C  2DDB               	goto	l1262
  1183  061D  3A06               	xorlw	6	; case 12
  1184  061E  1903               	skipnz
  1185  061F  2DC8               	goto	l1258
  1186  0620  2DF9               	goto	l1268
  1187  0621                     l72:
  1188  0621  0008               	return
  1189  0622                     __end_of_lcd_putc:
  1190                           
  1191                           	psect	text2
  1192  0485                     __ptext2:	
  1193 ;; *************** function _lcd_gotoxy *****************
  1194 ;; Defined at:
  1195 ;;		line 167 in file "lcd.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  col             1    wreg     unsigned char 
  1198 ;;  row             1    6[COMMON] unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  col             1    8[COMMON] unsigned char 
  1201 ;;  address         1    9[COMMON] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         1       0       0       0       0
  1212 ;;      Locals:         2       0       0       0       0
  1213 ;;      Temps:          1       0       0       0       0
  1214 ;;      Totals:         4       0       0       0       0
  1215 ;;Total ram usage:        4 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 2
  1218 ;; This function calls:
  1219 ;;		_lcd_busy
  1220 ;;		_lcd_put_byte
  1221 ;; This function is called by:
  1222 ;;		_lcd_putc
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function _lcd_gotoxy
  1229  0485                     _lcd_gotoxy:
  1230                           
  1231                           ;incstack = 0
  1232                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1233                           ;lcd_gotoxy@col stored from wreg
  1234  0485  00F8               	movwf	lcd_gotoxy@col
  1235  0486                     l1244:
  1236                           
  1237                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1238  0486  0876               	movf	lcd_gotoxy@row,w
  1239  0487  1903               	btfsc	3,2
  1240  0488  2C8A               	goto	u581
  1241  0489  2C8B               	goto	u580
  1242  048A                     u581:
  1243  048A  2C90               	goto	l1248
  1244  048B                     u580:
  1245  048B                     l1246:
  1246                           
  1247                           ;lcd.c: 174:   address=0x40;
  1248  048B  3040               	movlw	64
  1249  048C  00F7               	movwf	??_lcd_gotoxy
  1250  048D  0877               	movf	??_lcd_gotoxy,w
  1251  048E  00F9               	movwf	lcd_gotoxy@address
  1252  048F  2C91               	goto	l1250
  1253  0490                     l1248:
  1254                           
  1255                           ;lcd.c: 176:   address=0;
  1256  0490  01F9               	clrf	lcd_gotoxy@address
  1257  0491                     l1250:
  1258                           
  1259                           ;lcd.c: 178:  address += col;
  1260  0491  0878               	movf	lcd_gotoxy@col,w
  1261  0492  00F7               	movwf	??_lcd_gotoxy
  1262  0493  0877               	movf	??_lcd_gotoxy,w
  1263  0494  07F9               	addwf	lcd_gotoxy@address,f
  1264  0495                     l1252:
  1265                           
  1266                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1267  0495  0879               	movf	lcd_gotoxy@address,w
  1268  0496  3880               	iorlw	128
  1269  0497  00F7               	movwf	??_lcd_gotoxy
  1270  0498  0877               	movf	??_lcd_gotoxy,w
  1271  0499  00F3               	movwf	lcd_put_byte@b
  1272  049A  3000               	movlw	0
  1273  049B  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1274  04A0                     l1254:	
  1275                           ;lcd.c: 181:  while(lcd_busy());
  1276                           
  1277  04A0  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1278  04A5  3A00               	xorlw	0
  1279  04A6  1D03               	skipz
  1280  04A7  2CA9               	goto	u591
  1281  04A8  2CAA               	goto	u590
  1282  04A9                     u591:
  1283  04A9  2CA0               	goto	l1254
  1284  04AA                     u590:
  1285  04AA                     l54:
  1286  04AA  0008               	return
  1287  04AB                     __end_of_lcd_gotoxy:
  1288                           
  1289                           	psect	text3
  1290  0622                     __ptext3:	
  1291 ;; *************** function _lcd_init *****************
  1292 ;; Defined at:
  1293 ;;		line 241 in file "lcd.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  i               1    0        unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, pclath, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0
  1309 ;;      Temps:          2       0       0       0       0
  1310 ;;      Totals:         2       0       0       0       0
  1311 ;;Total ram usage:        2 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 2
  1314 ;; This function calls:
  1315 ;;		_lcd_busy
  1316 ;;		_lcd_put_byte
  1317 ;;		_lcd_put_nibble
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           
  1324                           ;psect for function _lcd_init
  1325  0622                     _lcd_init:
  1326  0622                     l1278:	
  1327                           ;incstack = 0
  1328                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1329                           
  1330                           
  1331                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1332  0622  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0623  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0624  1188               	bcf	8,3	;volatile
  1335                           
  1336                           ;lcd.c: 248:  TRISD1 = 0;
  1337  0625  1088               	bcf	8,1	;volatile
  1338                           
  1339                           ;lcd.c: 249:  TRISD2 = 0;
  1340  0626  1108               	bcf	8,2	;volatile
  1341                           
  1342                           ;lcd.c: 250:  TRISD4 = 0;
  1343  0627  1208               	bcf	8,4	;volatile
  1344                           
  1345                           ;lcd.c: 251:  TRISD5 = 0;
  1346  0628  1288               	bcf	8,5	;volatile
  1347                           
  1348                           ;lcd.c: 252:  TRISD6 = 0;
  1349  0629  1308               	bcf	8,6	;volatile
  1350                           
  1351                           ;lcd.c: 253:  TRISD7 = 0;
  1352  062A  1388               	bcf	8,7	;volatile
  1353  062B                     l1280:
  1354                           
  1355                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1356  062B  3014               	movlw	20
  1357  062C  00F7               	movwf	??_lcd_init+1
  1358  062D  3079               	movlw	121
  1359  062E  00F6               	movwf	??_lcd_init
  1360  062F                     u867:
  1361  062F  0BF6               	decfsz	??_lcd_init,f
  1362  0630  2E2F               	goto	u867
  1363  0631  0BF7               	decfsz	??_lcd_init+1,f
  1364  0632  2E2F               	goto	u867
  1365  0633  2E34               	nop2
  1366  0634                     l1282:
  1367                           
  1368                           ;lcd.c: 257:  RD1 = 0;
  1369  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0636  1088               	bcf	8,1	;volatile
  1372  0637                     l1284:
  1373                           
  1374                           ;lcd.c: 258:  RD2 = 0;
  1375  0637  1108               	bcf	8,2	;volatile
  1376  0638                     l1286:
  1377                           
  1378                           ;lcd.c: 259:  RD3 = 0;
  1379  0638  1188               	bcf	8,3	;volatile
  1380  0639                     l1288:
  1381                           
  1382                           ;lcd.c: 261:  lcd_put_nibble(3);
  1383  0639  3003               	movlw	3
  1384  063A  120A  118A  253B  120A  118A  	fcall	_lcd_put_nibble
  1385  063F                     l1290:
  1386                           
  1387                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1388  063F  300D               	movlw	13
  1389  0640  00F7               	movwf	??_lcd_init+1
  1390  0641  30FB               	movlw	251
  1391  0642  00F6               	movwf	??_lcd_init
  1392  0643                     u877:
  1393  0643  0BF6               	decfsz	??_lcd_init,f
  1394  0644  2E43               	goto	u877
  1395  0645  0BF7               	decfsz	??_lcd_init+1,f
  1396  0646  2E43               	goto	u877
  1397  0647  2E48               	nop2
  1398                           
  1399                           ;lcd.c: 263:  lcd_put_nibble(3);
  1400  0648  3003               	movlw	3
  1401  0649  120A  118A  253B  120A  118A  	fcall	_lcd_put_nibble
  1402  064E                     l1292:
  1403                           
  1404                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1405  064E  300D               	movlw	13
  1406  064F  00F7               	movwf	??_lcd_init+1
  1407  0650  30FB               	movlw	251
  1408  0651  00F6               	movwf	??_lcd_init
  1409  0652                     u887:
  1410  0652  0BF6               	decfsz	??_lcd_init,f
  1411  0653  2E52               	goto	u887
  1412  0654  0BF7               	decfsz	??_lcd_init+1,f
  1413  0655  2E52               	goto	u887
  1414  0656  2E57               	nop2
  1415  0657                     l1294:
  1416                           
  1417                           ;lcd.c: 265:  lcd_put_nibble(3);
  1418  0657  3003               	movlw	3
  1419  0658  120A  118A  253B  120A  118A  	fcall	_lcd_put_nibble
  1420                           
  1421                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1422  065D  300D               	movlw	13
  1423  065E  00F7               	movwf	??_lcd_init+1
  1424  065F  30FB               	movlw	251
  1425  0660  00F6               	movwf	??_lcd_init
  1426  0661                     u897:
  1427  0661  0BF6               	decfsz	??_lcd_init,f
  1428  0662  2E61               	goto	u897
  1429  0663  0BF7               	decfsz	??_lcd_init+1,f
  1430  0664  2E61               	goto	u897
  1431  0665  2E66               	nop2
  1432  0666                     l1296:
  1433                           
  1434                           ;lcd.c: 268:  lcd_put_nibble(2);
  1435  0666  3002               	movlw	2
  1436  0667  120A  118A  253B  120A  118A  	fcall	_lcd_put_nibble
  1437  066C                     l1298:	
  1438                           ;lcd.c: 269:  while(lcd_busy());
  1439                           
  1440  066C  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1441  0671  3A00               	xorlw	0
  1442  0672  1D03               	skipz
  1443  0673  2E75               	goto	u631
  1444  0674  2E76               	goto	u630
  1445  0675                     u631:
  1446  0675  2E6C               	goto	l1298
  1447  0676                     u630:
  1448  0676                     l1300:
  1449                           
  1450                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1451  0676  3028               	movlw	40
  1452  0677  00F6               	movwf	??_lcd_init
  1453  0678  0876               	movf	??_lcd_init,w
  1454  0679  00F3               	movwf	lcd_put_byte@b
  1455  067A  3000               	movlw	0
  1456  067B  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1457  0680                     l1302:	
  1458                           ;lcd.c: 272:  while(lcd_busy());
  1459                           
  1460  0680  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1461  0685  3A00               	xorlw	0
  1462  0686  1D03               	skipz
  1463  0687  2E89               	goto	u641
  1464  0688  2E8A               	goto	u640
  1465  0689                     u641:
  1466  0689  2E80               	goto	l1302
  1467  068A                     u640:
  1468  068A                     l1304:
  1469                           
  1470                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1471  068A  300C               	movlw	12
  1472  068B  00F6               	movwf	??_lcd_init
  1473  068C  0876               	movf	??_lcd_init,w
  1474  068D  00F3               	movwf	lcd_put_byte@b
  1475  068E  3000               	movlw	0
  1476  068F  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1477  0694                     l1306:	
  1478                           ;lcd.c: 275:  while(lcd_busy());
  1479                           
  1480  0694  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1481  0699  3A00               	xorlw	0
  1482  069A  1D03               	skipz
  1483  069B  2E9D               	goto	u651
  1484  069C  2E9E               	goto	u650
  1485  069D                     u651:
  1486  069D  2E94               	goto	l1306
  1487  069E                     u650:
  1488  069E                     l1308:
  1489                           
  1490                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1491  069E  01F3               	clrf	lcd_put_byte@b
  1492  069F  0AF3               	incf	lcd_put_byte@b,f
  1493  06A0  3000               	movlw	0
  1494  06A1  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1495  06A6                     l1310:	
  1496                           ;lcd.c: 278:  while(lcd_busy());
  1497                           
  1498  06A6  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1499  06AB  3A00               	xorlw	0
  1500  06AC  1D03               	skipz
  1501  06AD  2EAF               	goto	u661
  1502  06AE  2EB0               	goto	u660
  1503  06AF                     u661:
  1504  06AF  2EA6               	goto	l1310
  1505  06B0                     u660:
  1506  06B0                     l1312:
  1507                           
  1508                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1509  06B0  3006               	movlw	6
  1510  06B1  00F6               	movwf	??_lcd_init
  1511  06B2  0876               	movf	??_lcd_init,w
  1512  06B3  00F3               	movwf	lcd_put_byte@b
  1513  06B4  3000               	movlw	0
  1514  06B5  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1515  06BA                     l1314:	
  1516                           ;lcd.c: 281:  while(lcd_busy());
  1517                           
  1518  06BA  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1519  06BF  3A00               	xorlw	0
  1520  06C0  1D03               	skipz
  1521  06C1  2EC3               	goto	u671
  1522  06C2  2EC4               	goto	u670
  1523  06C3                     u671:
  1524  06C3  2EBA               	goto	l1314
  1525  06C4                     u670:
  1526  06C4                     l96:
  1527  06C4  0008               	return
  1528  06C5                     __end_of_lcd_init:
  1529                           
  1530                           	psect	text4
  1531  057F                     __ptext4:	
  1532 ;; *************** function _insertCharacter *****************
  1533 ;; Defined at:
  1534 ;;		line 24 in file "BAI_3.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  character       1    wreg     PTR unsigned char 
  1537 ;;		 -> main@special_end(41), main@special_name_info(33), 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  character       1    9[COMMON] PTR unsigned char 
  1540 ;;		 -> main@special_end(41), main@special_name_info(33), 
  1541 ;;  i               2    7[COMMON] unsigned int 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         3       0       0       0       0
  1553 ;;      Temps:          1       0       0       0       0
  1554 ;;      Totals:         4       0       0       0       0
  1555 ;;Total ram usage:        4 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 2
  1558 ;; This function calls:
  1559 ;;		_lcd_busy
  1560 ;;		_lcd_put_byte
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _insertCharacter
  1568  057F                     _insertCharacter:
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _insertCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1572                           ;insertCharacter@character stored from wreg
  1573  057F  00F9               	movwf	insertCharacter@character
  1574  0580                     l1320:
  1575                           
  1576                           ;BAI_3.c: 25:     unsigned int i = 0;
  1577  0580  01F7               	clrf	insertCharacter@i
  1578  0581  01F8               	clrf	insertCharacter@i+1
  1579  0582                     l1322:
  1580                           
  1581                           ;BAI_3.c: 26:     lcd_put_byte(0, 0x40);
  1582  0582  3040               	movlw	64
  1583  0583  00F6               	movwf	??_insertCharacter
  1584  0584  0876               	movf	??_insertCharacter,w
  1585  0585  00F3               	movwf	lcd_put_byte@b
  1586  0586  3000               	movlw	0
  1587  0587  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1588  058C                     l1324:	
  1589                           ;BAI_3.c: 27:     while(lcd_busy());
  1590                           
  1591  058C  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1592  0591  3A00               	xorlw	0
  1593  0592  1D03               	skipz
  1594  0593  2D95               	goto	u681
  1595  0594  2D96               	goto	u680
  1596  0595                     u681:
  1597  0595  2D8C               	goto	l1324
  1598  0596                     u680:
  1599  0596  2DB8               	goto	l1332
  1600  0597                     l1326:
  1601                           
  1602                           ;BAI_3.c: 29:         lcd_put_byte(1, character[i]);
  1603  0597  0877               	movf	insertCharacter@i,w
  1604  0598  0779               	addwf	insertCharacter@character,w
  1605  0599  0084               	movwf	4
  1606  059A  120A  118A  2003  120A  118A  	fcall	stringdir
  1607  059F  00F6               	movwf	??_insertCharacter
  1608  05A0  0876               	movf	??_insertCharacter,w
  1609  05A1  00F3               	movwf	lcd_put_byte@b
  1610  05A2  3001               	movlw	1
  1611  05A3  120A  118A  2502  120A  118A  	fcall	_lcd_put_byte
  1612  05A8                     l1328:	
  1613                           ;BAI_3.c: 30:         while(lcd_busy());
  1614                           
  1615  05A8  120A  118A  24D2  120A  118A  	fcall	_lcd_busy
  1616  05AD  3A00               	xorlw	0
  1617  05AE  1D03               	skipz
  1618  05AF  2DB1               	goto	u691
  1619  05B0  2DB2               	goto	u690
  1620  05B1                     u691:
  1621  05B1  2DA8               	goto	l1328
  1622  05B2                     u690:
  1623  05B2                     l1330:
  1624                           
  1625                           ;BAI_3.c: 31:         i++;
  1626  05B2  3001               	movlw	1
  1627  05B3  07F7               	addwf	insertCharacter@i,f
  1628  05B4  1803               	skipnc
  1629  05B5  0AF8               	incf	insertCharacter@i+1,f
  1630  05B6  3000               	movlw	0
  1631  05B7  07F8               	addwf	insertCharacter@i+1,f
  1632  05B8                     l1332:
  1633                           
  1634                           ;BAI_3.c: 28:     while(character[i] != 0x99) {
  1635  05B8  0877               	movf	insertCharacter@i,w
  1636  05B9  0779               	addwf	insertCharacter@character,w
  1637  05BA  0084               	movwf	4
  1638  05BB  120A  118A  2003  120A  118A  	fcall	stringdir
  1639  05C0  3A99               	xorlw	153
  1640  05C1  1D03               	skipz
  1641  05C2  2DC4               	goto	u701
  1642  05C3  2DC5               	goto	u700
  1643  05C4                     u701:
  1644  05C4  2D97               	goto	l1326
  1645  05C5                     u700:
  1646  05C5                     l185:
  1647  05C5  0008               	return
  1648  05C6                     __end_of_insertCharacter:
  1649                           
  1650                           	psect	text5
  1651  0502                     __ptext5:	
  1652 ;; *************** function _lcd_put_byte *****************
  1653 ;; Defined at:
  1654 ;;		line 134 in file "lcd.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  rs              1    wreg     unsigned char 
  1657 ;;  b               1    3[COMMON] unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  rs              1    5[COMMON] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0, pclath, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1669 ;;      Params:         1       0       0       0       0
  1670 ;;      Locals:         1       0       0       0       0
  1671 ;;      Temps:          1       0       0       0       0
  1672 ;;      Totals:         3       0       0       0       0
  1673 ;;Total ram usage:        3 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 1
  1676 ;; This function calls:
  1677 ;;		_lcd_put_nibble
  1678 ;; This function is called by:
  1679 ;;		_lcd_gotoxy
  1680 ;;		_lcd_putc
  1681 ;;		_lcd_init
  1682 ;;		_insertCharacter
  1683 ;;		_lcd_ShiftLeft
  1684 ;;		_lcd_ShiftRight
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _lcd_put_byte
  1690  0502                     _lcd_put_byte:
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1694                           ;lcd_put_byte@rs stored from wreg
  1695  0502  00F5               	movwf	lcd_put_byte@rs
  1696  0503                     l1228:
  1697                           
  1698                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1699  0503  1683               	bsf	3,5	;RP0=1, select bank1
  1700  0504  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0505  1208               	bcf	8,4	;volatile
  1702                           
  1703                           ;lcd.c: 140:  TRISD5 = 0;
  1704  0506  1288               	bcf	8,5	;volatile
  1705                           
  1706                           ;lcd.c: 141:  TRISD6 = 0;
  1707  0507  1308               	bcf	8,6	;volatile
  1708                           
  1709                           ;lcd.c: 142:  TRISD7 = 0;
  1710  0508  1388               	bcf	8,7	;volatile
  1711  0509                     l1230:
  1712                           
  1713                           ;lcd.c: 144:  if(rs)
  1714  0509  0875               	movf	lcd_put_byte@rs,w
  1715  050A  1903               	btfsc	3,2
  1716  050B  2D0D               	goto	u561
  1717  050C  2D0E               	goto	u560
  1718  050D                     u561:
  1719  050D  2D12               	goto	l44
  1720  050E                     u560:
  1721  050E                     l1232:
  1722                           
  1723                           ;lcd.c: 145:   RD1 = 1;
  1724  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1725  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0510  1488               	bsf	8,1	;volatile
  1727  0511  2D15               	goto	l1234
  1728  0512                     l44:	
  1729                           ;lcd.c: 146:  else
  1730                           
  1731                           
  1732                           ;lcd.c: 147:   RD1 = 0;
  1733  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0514  1088               	bcf	8,1	;volatile
  1736  0515                     l1234:
  1737                           
  1738                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1739  0515  3006               	movlw	6
  1740  0516  00F4               	movwf	??_lcd_put_byte
  1741  0517                     u907:
  1742  0517  0BF4               	decfsz	??_lcd_put_byte,f
  1743  0518  2D17               	goto	u907
  1744  0519  0000               	nop
  1745  051A                     l1236:
  1746                           
  1747                           ;lcd.c: 150:  RD2 = 0;
  1748  051A  1283               	bcf	3,5	;RP0=0, select bank0
  1749  051B  1303               	bcf	3,6	;RP1=0, select bank0
  1750  051C  1108               	bcf	8,2	;volatile
  1751                           
  1752                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1753  051D  3006               	movlw	6
  1754  051E  00F4               	movwf	??_lcd_put_byte
  1755  051F                     u917:
  1756  051F  0BF4               	decfsz	??_lcd_put_byte,f
  1757  0520  2D1F               	goto	u917
  1758  0521  0000               	nop
  1759  0522                     l1238:
  1760                           
  1761                           ;lcd.c: 153:  RD3 = 0;
  1762  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0524  1188               	bcf	8,3	;volatile
  1765  0525                     l1240:
  1766                           
  1767                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1768  0525  0873               	movf	lcd_put_byte@b,w
  1769  0526  00F4               	movwf	??_lcd_put_byte
  1770  0527  3004               	movlw	4
  1771  0528                     u575:
  1772  0528  1003               	clrc
  1773  0529  0CF4               	rrf	??_lcd_put_byte,f
  1774  052A  3EFF               	addlw	-1
  1775  052B  1D03               	skipz
  1776  052C  2D28               	goto	u575
  1777  052D  0874               	movf	??_lcd_put_byte,w
  1778  052E  120A  118A  253B  120A  118A  	fcall	_lcd_put_nibble
  1779  0533                     l1242:
  1780                           
  1781                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1782  0533  0873               	movf	lcd_put_byte@b,w
  1783  0534  390F               	andlw	15
  1784  0535  120A  118A  253B  120A  118A  	fcall	_lcd_put_nibble
  1785  053A                     l46:
  1786  053A  0008               	return
  1787  053B                     __end_of_lcd_put_byte:
  1788                           
  1789                           	psect	text6
  1790  053B                     __ptext6:	
  1791 ;; *************** function _lcd_put_nibble *****************
  1792 ;; Defined at:
  1793 ;;		line 103 in file "lcd.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  b               1    wreg     unsigned char 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  b               1    1[COMMON] unsigned char 
  1798 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         2       0       0       0       0
  1810 ;;      Temps:          1       0       0       0       0
  1811 ;;      Totals:         3       0       0       0       0
  1812 ;;Total ram usage:        3 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_lcd_put_byte
  1818 ;;		_lcd_init
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _lcd_put_nibble
  1824  053B                     _lcd_put_nibble:
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _lcd_put_nibble: [wreg]
  1828                           ;lcd_put_nibble@b stored from wreg
  1829  053B  00F1               	movwf	lcd_put_nibble@b
  1830  053C                     l1190:
  1831                           
  1832                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1833  053C  1683               	bsf	3,5	;RP0=1, select bank1
  1834  053D  1303               	bcf	3,6	;RP1=0, select bank1
  1835  053E  1208               	bcf	8,4	;volatile
  1836                           
  1837                           ;lcd.c: 110:  TRISD5 = 0;
  1838  053F  1288               	bcf	8,5	;volatile
  1839                           
  1840                           ;lcd.c: 111:  TRISD6 = 0;
  1841  0540  1308               	bcf	8,6	;volatile
  1842                           
  1843                           ;lcd.c: 112:  TRISD7 = 0;
  1844  0541  1388               	bcf	8,7	;volatile
  1845  0542                     l1192:
  1846                           
  1847                           ;lcd.c: 114:  temp.Val = b;
  1848  0542  0871               	movf	lcd_put_nibble@b,w
  1849  0543  00F0               	movwf	??_lcd_put_nibble
  1850  0544  0870               	movf	??_lcd_put_nibble,w
  1851  0545  00F2               	movwf	lcd_put_nibble@temp
  1852  0546                     l1194:
  1853                           
  1854                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1855  0546  1872               	btfsc	lcd_put_nibble@temp,0
  1856  0547  2D49               	goto	u481
  1857  0548  2D4D               	goto	u480
  1858  0549                     u481:
  1859  0549  1283               	bcf	3,5	;RP0=0, select bank0
  1860  054A  1303               	bcf	3,6	;RP1=0, select bank0
  1861  054B  1608               	bsf	8,4	;volatile
  1862  054C  2D50               	goto	u494
  1863  054D                     u480:
  1864  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1865  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1866  054F  1208               	bcf	8,4	;volatile
  1867  0550                     u494:
  1868  0550                     l1196:
  1869                           
  1870                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1871  0550  18F2               	btfsc	lcd_put_nibble@temp,1
  1872  0551  2D53               	goto	u501
  1873  0552  2D57               	goto	u500
  1874  0553                     u501:
  1875  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0555  1688               	bsf	8,5	;volatile
  1878  0556  2D5A               	goto	u514
  1879  0557                     u500:
  1880  0557  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0558  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0559  1288               	bcf	8,5	;volatile
  1883  055A                     u514:
  1884  055A                     l1198:
  1885                           
  1886                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1887  055A  1972               	btfsc	lcd_put_nibble@temp,2
  1888  055B  2D5D               	goto	u521
  1889  055C  2D61               	goto	u520
  1890  055D                     u521:
  1891  055D  1283               	bcf	3,5	;RP0=0, select bank0
  1892  055E  1303               	bcf	3,6	;RP1=0, select bank0
  1893  055F  1708               	bsf	8,6	;volatile
  1894  0560  2D64               	goto	u534
  1895  0561                     u520:
  1896  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0563  1308               	bcf	8,6	;volatile
  1899  0564                     u534:
  1900  0564                     l1200:
  1901                           
  1902                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1903  0564  19F2               	btfsc	lcd_put_nibble@temp,3
  1904  0565  2D67               	goto	u541
  1905  0566  2D6B               	goto	u540
  1906  0567                     u541:
  1907  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0569  1788               	bsf	8,7	;volatile
  1910  056A  2D6E               	goto	u554
  1911  056B                     u540:
  1912  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1913  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1914  056D  1388               	bcf	8,7	;volatile
  1915  056E                     u554:
  1916                           
  1917                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1918  056E  3006               	movlw	6
  1919  056F  00F0               	movwf	??_lcd_put_nibble
  1920  0570                     u927:
  1921  0570  0BF0               	decfsz	??_lcd_put_nibble,f
  1922  0571  2D70               	goto	u927
  1923  0572  0000               	nop
  1924  0573                     l1202:
  1925                           
  1926                           ;lcd.c: 122:  RD3 = 1;
  1927  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0575  1588               	bsf	8,3	;volatile
  1930                           
  1931                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1932  0576  3006               	movlw	6
  1933  0577  00F0               	movwf	??_lcd_put_nibble
  1934  0578                     u937:
  1935  0578  0BF0               	decfsz	??_lcd_put_nibble,f
  1936  0579  2D78               	goto	u937
  1937  057A  0000               	nop
  1938  057B                     l1204:
  1939                           
  1940                           ;lcd.c: 124:  RD3 = 0;
  1941  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1942  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1943  057D  1188               	bcf	8,3	;volatile
  1944  057E                     l41:
  1945  057E  0008               	return
  1946  057F                     __end_of_lcd_put_nibble:
  1947                           
  1948                           	psect	text7
  1949  04D2                     __ptext7:	
  1950 ;; *************** function _lcd_busy *****************
  1951 ;; Defined at:
  1952 ;;		line 18 in file "lcd.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  busy            1    1[COMMON] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      unsigned char 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         0       0       0       0       0
  1967 ;;      Locals:         1       0       0       0       0
  1968 ;;      Temps:          1       0       0       0       0
  1969 ;;      Totals:         2       0       0       0       0
  1970 ;;Total ram usage:        2 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_lcd_gotoxy
  1976 ;;		_lcd_putc
  1977 ;;		_lcd_init
  1978 ;;		_insertCharacter
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _lcd_busy
  1984  04D2                     _lcd_busy:
  1985  04D2                     l1206:	
  1986                           ;incstack = 0
  1987                           ; Regs used in _lcd_busy: [wreg+status,2]
  1988                           
  1989                           
  1990                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1991  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  1992  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  1993  04D4  1608               	bsf	8,4	;volatile
  1994                           
  1995                           ;lcd.c: 25:  TRISD5 = 1;
  1996  04D5  1688               	bsf	8,5	;volatile
  1997                           
  1998                           ;lcd.c: 26:  TRISD6 = 1;
  1999  04D6  1708               	bsf	8,6	;volatile
  2000                           
  2001                           ;lcd.c: 27:  TRISD7 = 1;
  2002  04D7  1788               	bsf	8,7	;volatile
  2003                           
  2004                           ;lcd.c: 29:  RD2 = 1;
  2005  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2006  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2007  04DA  1508               	bsf	8,2	;volatile
  2008                           
  2009                           ;lcd.c: 30:  RD1 = 0;
  2010  04DB  1088               	bcf	8,1	;volatile
  2011  04DC                     l1208:
  2012                           
  2013                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2014  04DC  3006               	movlw	6
  2015  04DD  00F0               	movwf	??_lcd_busy
  2016  04DE                     u947:
  2017  04DE  0BF0               	decfsz	??_lcd_busy,f
  2018  04DF  2CDE               	goto	u947
  2019  04E0  0000               	nop
  2020  04E1                     l1210:
  2021                           
  2022                           ;lcd.c: 32:  RD3 = 1;
  2023  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2024  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2025  04E3  1588               	bsf	8,3	;volatile
  2026                           
  2027                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2028  04E4  3006               	movlw	6
  2029  04E5  00F0               	movwf	??_lcd_busy
  2030  04E6                     u957:
  2031  04E6  0BF0               	decfsz	??_lcd_busy,f
  2032  04E7  2CE6               	goto	u957
  2033  04E8  0000               	nop
  2034  04E9                     l1212:
  2035                           
  2036                           ;lcd.c: 35:  busy = RD7;
  2037  04E9  3000               	movlw	0
  2038  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2039  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2040  04EC  1B88               	btfsc	8,7	;volatile
  2041  04ED  3001               	movlw	1
  2042  04EE  00F1               	movwf	lcd_busy@busy
  2043  04EF                     l1214:
  2044                           
  2045                           ;lcd.c: 37:  RD3 = 0;
  2046  04EF  1188               	bcf	8,3	;volatile
  2047  04F0                     l1216:
  2048                           
  2049                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2050  04F0  3006               	movlw	6
  2051  04F1  00F0               	movwf	??_lcd_busy
  2052  04F2                     u967:
  2053  04F2  0BF0               	decfsz	??_lcd_busy,f
  2054  04F3  2CF2               	goto	u967
  2055  04F4  0000               	nop
  2056  04F5                     l1218:
  2057                           
  2058                           ;lcd.c: 39:  RD3 = 1;
  2059  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2060  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2061  04F7  1588               	bsf	8,3	;volatile
  2062  04F8                     l1220:
  2063                           
  2064                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2065  04F8  3006               	movlw	6
  2066  04F9  00F0               	movwf	??_lcd_busy
  2067  04FA                     u977:
  2068  04FA  0BF0               	decfsz	??_lcd_busy,f
  2069  04FB  2CFA               	goto	u977
  2070  04FC  0000               	nop
  2071  04FD                     l1222:
  2072                           
  2073                           ;lcd.c: 41:  RD3 = 0;
  2074  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2075  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2076  04FF  1188               	bcf	8,3	;volatile
  2077  0500                     l1224:
  2078                           
  2079                           ;lcd.c: 43:  return busy;
  2080  0500  0871               	movf	lcd_busy@busy,w
  2081  0501                     l33:
  2082  0501  0008               	return
  2083  0502                     __end_of_lcd_busy:
  2084                           
  2085                           	psect	text8
  2086  0468                     __ptext8:	
  2087 ;; *************** function _getLength *****************
  2088 ;; Defined at:
  2089 ;;		line 35 in file "BAI_3.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  character       1    wreg     PTR unsigned char 
  2092 ;;		 -> main@end_second(12), main@end_first(17), main@info(17), main@your_name(16), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  character       1    4[COMMON] PTR unsigned char 
  2095 ;;		 -> main@end_second(12), main@end_first(17), main@info(17), main@your_name(16), 
  2096 ;;  i               2    2[COMMON] unsigned int 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2    0[COMMON] unsigned int 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         2       0       0       0       0
  2107 ;;      Locals:         3       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0
  2109 ;;      Totals:         5       0       0       0       0
  2110 ;;Total ram usage:        5 bytes
  2111 ;; Hardware stack levels used: 2
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           
  2120                           ;psect for function _getLength
  2121  0468                     _getLength:
  2122                           
  2123                           ;incstack = 0
  2124                           ; Regs used in _getLength: [wreg-fsr0h+status,2+status,0+pclath]
  2125                           ;getLength@character stored from wreg
  2126  0468  00F4               	movwf	getLength@character
  2127  0469                     l1334:
  2128                           
  2129                           ;BAI_3.c: 36:     unsigned int i = 0;
  2130  0469  01F2               	clrf	getLength@i
  2131  046A  01F3               	clrf	getLength@i+1
  2132  046B                     l1336:
  2133                           
  2134                           ;BAI_3.c: 38:         if(character[i] == '\n')
  2135  046B  0872               	movf	getLength@i,w
  2136  046C  0774               	addwf	getLength@character,w
  2137  046D  0084               	movwf	4
  2138  046E  120A  118A  2003  120A  118A  	fcall	stringdir
  2139  0473  3A0A               	xorlw	10
  2140  0474  1D03               	skipz
  2141  0475  2C77               	goto	u711
  2142  0476  2C78               	goto	u710
  2143  0477                     u711:
  2144  0477  2C79               	goto	l1340
  2145  0478                     u710:
  2146  0478  2C80               	goto	l1342
  2147  0479                     l1340:
  2148                           
  2149                           ;BAI_3.c: 42:         i++;
  2150  0479  3001               	movlw	1
  2151  047A  07F2               	addwf	getLength@i,f
  2152  047B  1803               	skipnc
  2153  047C  0AF3               	incf	getLength@i+1,f
  2154  047D  3000               	movlw	0
  2155  047E  07F3               	addwf	getLength@i+1,f
  2156  047F  2C6B               	goto	l1336
  2157  0480                     l1342:
  2158                           
  2159                           ;BAI_3.c: 44:     return i;
  2160  0480  0873               	movf	getLength@i+1,w
  2161  0481  00F1               	movwf	?_getLength+1
  2162  0482  0872               	movf	getLength@i,w
  2163  0483  00F0               	movwf	?_getLength
  2164  0484                     l192:
  2165  0484  0008               	return
  2166  0485                     __end_of_getLength:
  2167                           
  2168                           	psect	text9
  2169  04AB                     __ptext9:	
  2170 ;; *************** function _delayOneMS *****************
  2171 ;; Defined at:
  2172 ;;		line 47 in file "BAI_3.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  n               2    0[COMMON] unsigned int 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         2       0       0       0       0
  2187 ;;      Locals:         0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0
  2189 ;;      Totals:         2       0       0       0       0
  2190 ;;Total ram usage:        2 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _delayOneMS
  2201  04AB                     _delayOneMS:
  2202  04AB                     l1346:	
  2203                           ;incstack = 0
  2204                           ; Regs used in _delayOneMS: [wreg+status,2+status,0]
  2205                           
  2206                           
  2207                           ;BAI_3.c: 48:     while(n--) {
  2208  04AB  2CC3               	goto	l1364
  2209  04AC                     l1348:
  2210                           
  2211                           ;BAI_3.c: 49:         TMR1H = 252;
  2212  04AC  30FC               	movlw	252
  2213  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  2214  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  2215  04AF  008F               	movwf	15	;volatile
  2216                           
  2217                           ;BAI_3.c: 50:         TMR1L = 24;
  2218  04B0  3018               	movlw	24
  2219  04B1  008E               	movwf	14	;volatile
  2220  04B2                     l1350:
  2221                           
  2222                           ;BAI_3.c: 51:         TMR1IF = 0;
  2223  04B2  100C               	bcf	12,0	;volatile
  2224  04B3                     l1352:
  2225                           
  2226                           ;BAI_3.c: 52:         TMR1CS = 0;
  2227  04B3  1090               	bcf	16,1	;volatile
  2228  04B4                     l1354:
  2229                           
  2230                           ;BAI_3.c: 53:         GIE = PEIE = TMR1IE = 0;
  2231  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2232  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2233  04B6  100C               	bcf	12,0	;volatile
  2234  04B7  130B               	bcf	11,6	;volatile
  2235  04B8  138B               	bcf	11,7	;volatile
  2236  04B9                     l1356:
  2237                           
  2238                           ;BAI_3.c: 54:         T1CKPS1 = 0;
  2239  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2240  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2241  04BB  1290               	bcf	16,5	;volatile
  2242  04BC                     l1358:
  2243                           
  2244                           ;BAI_3.c: 55:         T1CKPS0 = 0;
  2245  04BC  1210               	bcf	16,4	;volatile
  2246  04BD                     l1360:
  2247                           
  2248                           ;BAI_3.c: 56:         T1SYNC = 1;
  2249  04BD  1510               	bsf	16,2	;volatile
  2250  04BE                     l1362:
  2251                           
  2252                           ;BAI_3.c: 57:         TMR1ON = 1;
  2253  04BE  1410               	bsf	16,0	;volatile
  2254  04BF                     l197:	
  2255                           ;BAI_3.c: 58:         while(!TMR1IF);
  2256                           
  2257  04BF  1C0C               	btfss	12,0	;volatile
  2258  04C0  2CC2               	goto	u721
  2259  04C1  2CC3               	goto	u720
  2260  04C2                     u721:
  2261  04C2  2CBF               	goto	l197
  2262  04C3                     u720:
  2263  04C3                     l1364:
  2264                           
  2265                           ;BAI_3.c: 48:     while(n--) {
  2266  04C3  3001               	movlw	1
  2267  04C4  02F0               	subwf	delayOneMS@n,f
  2268  04C5  3000               	movlw	0
  2269  04C6  1C03               	skipc
  2270  04C7  03F1               	decf	delayOneMS@n+1,f
  2271  04C8  02F1               	subwf	delayOneMS@n+1,f
  2272  04C9  0A70               	incf	delayOneMS@n,w
  2273  04CA  1D03               	skipz
  2274  04CB  2CD0               	goto	u731
  2275  04CC  0A71               	incf	delayOneMS@n+1,w
  2276  04CD  1D03               	btfss	3,2
  2277  04CE  2CD0               	goto	u731
  2278  04CF  2CD1               	goto	u730
  2279  04D0                     u731:
  2280  04D0  2CAC               	goto	l1348
  2281  04D1                     u730:
  2282  04D1                     l201:
  2283  04D1  0008               	return
  2284  04D2                     __end_of_delayOneMS:
  2285  007E                     btemp	set	126	;btemp
  2286  007E                     wtemp0	set	126
  2287                           
  2288                           	psect	config
  2289                           
  2290                           ;Config register CONFIG1 @ 0x2007
  2291                           ;	Oscillator Selection bits
  2292                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2293                           ;	Watchdog Timer Enable bit
  2294                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2295                           ;	Power-up Timer Enable bit
  2296                           ;	PWRTE = OFF, PWRT disabled
  2297                           ;	RE3/MCLR pin function select bit
  2298                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2299                           ;	Code Protection bit
  2300                           ;	CP = OFF, Program memory code protection is disabled
  2301                           ;	Data Code Protection bit
  2302                           ;	CPD = OFF, Data memory code protection is disabled
  2303                           ;	Brown Out Reset Selection bits
  2304                           ;	BOREN = OFF, BOR disabled
  2305                           ;	Internal External Switchover bit
  2306                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2307                           ;	Fail-Safe Clock Monitor Enabled bit
  2308                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2309                           ;	Low Voltage Programming Enable bit
  2310                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2311                           ;	In-Circuit Debugger Mode bit
  2312                           ;	DEBUG = 0x1, unprogrammed default
  2313  2007                     	org	8199
  2314  2007  20F2               	dw	8434
  2315                           
  2316                           ;Config register CONFIG2 @ 0x2008
  2317                           ;	Brown-out Reset Selection bit
  2318                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2319                           ;	Flash Program Memory Self Write Enable bits
  2320                           ;	WRT = OFF, Write protection off
  2321  2008                     	org	8200
  2322  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    136
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    getLength@character	PTR unsigned char  size(1) Largest target is 17
		 -> main@end_second(CODE[12]), main@end_first(CODE[17]), main@info(CODE[17]), main@your_name(CODE[16]), 

    insertCharacter@character	PTR unsigned char  size(1) Largest target is 41
		 -> main@special_end(CODE[41]), main@special_name_info(CODE[33]), 


Critical Paths under _main in COMMON

    _main->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _insertCharacter->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7423
                                              0 BANK0      4     4      0
                         _delayOneMS
                          _getLength
                    _insertCharacter
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             3     3      0    2717
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           4     3      1    1561
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _insertCharacter                                      4     4      0    1268
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _getLength                                            5     3      2     200
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _delayOneMS                                           2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delayOneMS
   _getLength
   _insertCharacter
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 25 18:46:00 2021

                            pc 0002                             l33 0501                             l41 057E  
                           l44 0512                             l46 053A                             l54 04AA  
                           l72 0621                             l96 06C4         __end_of_lcd_put_nibble 057F  
                           fsr 0004        __end_ofmain@special_end 0032                  ?_lcd_put_byte 0073  
                          l201 04D1                            l220 06D7                            l231 076D  
                          l219 0769                            l192 0484                            l185 05C5  
                          l197 04BF                            _GIE 005F                            _RB0 0030  
                          _RB1 0031                            _RD1 0041                            _RD2 0042  
                          _RD3 0043                            _RD4 0044                            _RD5 0045  
                          _RD6 0046                            _RD7 0047                            u500 0557  
                          u501 0553                            u520 0561                            u600 05DA  
                          u521 055D                            u601 05D9                            u514 055A  
                          u610 05F8                            u611 05F7                            u540 056B  
                          u700 05C5                            u620 060D                            u541 0567  
                          u701 05C4                            u621 060C                            u710 0478  
                          u534 0564                            u630 0676                            u711 0477  
                          u631 0675                            u720 04C3                            u480 054D  
                          u560 050E                            u640 068A                            u800 0721  
                          u721 04C2                            u481 0549                            u561 050D  
                          u641 0689                            u801 0720                            u730 04D1  
                          u554 056E                            u650 069E                            u810 0759  
                          u731 04D0                            u651 069D                            u811 0758  
                          u660 06B0                            u580 048B                            u820 076D  
                          u661 06AF                            u581 048A                            u821 076C  
                          u805 071D                            u494 0550                            u670 06C4  
                          u590 04AA                            u830 0771                            u575 0528  
                          u671 06C3                            u591 04A9                            u831 0770  
                          u815 0755                            u680 0596                            u840 07B1  
                          u681 0595                            u841 07B0                            u690 05B2  
                          u850 07E9                            u907 0517                            u691 05B1  
                          u851 07E8                            u780 06D7                            u917 051F  
                          u845 07AD                            u781 06D6                            u790 06DB  
                          u927 0570                            u855 07E5                            u791 06DA  
                          u937 0578                            u947 04DE                            u867 062F  
                          u957 04E6                            u877 0643                            u967 04F2  
                          u887 0652                            u977 04FA                            u897 0661  
                          fsr0 0004                           l1200 0564                           l1210 04E1  
                         l1202 0573                           l1220 04F8                           l1212 04E9  
                         l1204 057B                           l1300 0676                           l1222 04FD  
                         l1214 04EF                           l1206 04D2                           l1230 0509  
                         l1310 06A6                           l1302 0680                           l1224 0500  
                         l1216 04F0                           l1208 04DC                           l1240 0525  
                         l1232 050E                           l1320 0580                           l1312 06B0  
                         l1304 068A                           l1218 04F5                           l1242 0533  
                         l1234 0515                           l1330 05B2                           l1322 0582  
                         l1314 06BA                           l1306 0694                           l1250 0491  
                         l1410 06CD                           l1340 0479                           l1236 051A  
                         l1228 0503                           l1332 05B8                           l1324 058C  
                         l1308 069E                           l1252 0495                           l1244 0486  
                         l1260 05D0                           l1420 06D1                           l1412 06CE  
                         l1404 06C5                           l1350 04B2                           l1342 0480  
                         l1334 0469                           l1190 053C                           l1238 0522  
                         l1326 0597                           l1254 04A0                           l1246 048B  
                         l1270 0603                           l1262 05DB                           l1430 06E6  
                         l1422 06D1                           l1414 06CF                           l1406 06C9  
                         l1360 04BD                           l1352 04B3                           l1336 046B  
                         l1192 0542                           l1328 05A8                           l1280 062B  
                         l1248 0490                           l1512 0616                           l1264 05E4  
                         l1272 060E                           l1256 05C7                           l1440 0717  
                         l1432 06F3                           l1416 06D1                           l1408 06CC  
                         l1362 04BE                           l1354 04B4                           l1346 04AB  
                         l1194 0546                           l1290 063F                           l1282 0634  
                         l1266 05EE                           l1258 05C8                           l1450 0747  
                         l1442 0721                           l1434 06FF                           l1426 06DB  
                         l1418 06D1                           l1356 04B9                           l1348 04AC  
                         l1364 04C3                           l1196 0550                           l1292 064E  
                         l1284 0637                           l1268 05F9                           l1460 0771  
                         l1452 074F                           l1444 072D                           l1436 0702  
                         l1428 06E0                           l1358 04BC                           l1198 055A  
                         l1294 0657                           l1286 0638                           l1278 0622  
                         l1470 079F                           l1462 0776                           l1454 0759  
                         l1446 0735                           l1438 070F                           l1296 0666  
                         l1288 0639                           l1480 07CA                           l1472 07A7  
                         l1464 077C                           l1456 0762                           l1448 073A  
                         l1298 066C                           l1490 07F2                           l1482 07D7  
                         l1474 07B1                           l1466 078F                           l1484 07DF  
                         l1476 07BD                           l1468 0792                           l1486 07E9  
                         l1478 07C5                           l1488 07E9                           _PEIE 005E  
                         _WPUB 0095                           _main 06C5                   lcd_busy@busy 0071  
                         btemp 007E                           start 0000                ?_lcd_put_nibble 0070  
               ??_lcd_put_byte 0074                          ?_main 0070                          _ANSEL 0188  
                        _TMR1H 000F                          _TMR1L 000E                          _nRBPU 040F  
                        main@i 0022                          pclath 000A                          status 0003  
                        wtemp0 007E  __end_ofmain@special_name_info 0053                __initialization 07FC  
                 __end_of_main 07FC                  lcd_gotoxy@col 0078                  lcd_gotoxy@row 0076  
           lcd_put_nibble@temp 0072                         ??_main 007D                  main@end_first 0053  
                       _ANSELH 0189                         _T1SYNC 0082                         _TMR1IE 0460  
                       _TMR1IF 0060                         _TMR1CS 0081                         _TMR1ON 0080  
                       _TRISB0 0430                         _TRISB1 0431                         _TRISB2 0432  
                       _TRISD1 0441                         _TRISD2 0442                         _TRISD3 0443  
                       _TRISD4 0444                         _TRISD5 0445                         _TRISD6 0446  
                       _TRISD7 0447               __end_of_lcd_busy 0502               __end_of_lcd_init 06C5  
             __end_of_lcd_putc 0622                  lcd_put_byte@b 0073       __size_of_insertCharacter 0047  
             __end_ofmain@info 0075        __end_of__initialization 07FC           __end_of_lcd_put_byte 053B  
               __pcstackCOMMON 0070                  main@your_name 0075             __size_of_getLength 001D  
            lcd_gotoxy@address 0079                 main@end_second 0085                     _delayOneMS 04AB  
             ??_lcd_put_nibble 0070                     __pmaintext 06C5             getLength@character 0074  
                      _T1CKPS0 0084                        _T1CKPS1 0085                     _lcd_gotoxy 0485  
                    ?_lcd_busy 0070                      ?_lcd_init 0070                      ?_lcd_putc 0070  
                   __stringtab 0003         __end_ofmain@end_second 0091              ??_insertCharacter 0076  
            __end_of_getLength 0485                        __ptext1 05C6                        __ptext2 0485  
                      __ptext3 0622                        __ptext4 057F                        __ptext5 0502  
                      __ptext6 053B                        __ptext7 04D2                        __ptext8 0468  
                      __ptext9 04AB          __size_of_lcd_put_byte 0039                     ??_lcd_busy 0070  
                   ??_lcd_init 0076                     ??_lcd_putc 007A           end_of_initialization 07FC  
               lcd_put_byte@rs 0075                    ?_delayOneMS 0070                     getLength@i 0072  
        main@special_name_info 0032                   _lcd_put_byte 0502                    ?_lcd_gotoxy 0076  
                   main@length 0020            __size_of_delayOneMS 0027            start_initialization 07FC  
          __size_of_lcd_gotoxy 0026                      ___latbits 0002                _insertCharacter 057F  
                __pcstackBANK0 0020              __size_of_lcd_busy 0030              __size_of_lcd_init 00A3  
            __size_of_lcd_putc 005C                      _getLength 0468                      __pstrings 0003  
             insertCharacter@i 0077          __end_ofmain@end_first 0064                   ??_delayOneMS 0072  
                   ?_getLength 0070        __end_of_insertCharacter 05C6                    __stringbase 0008  
      __size_of_lcd_put_nibble 0044                      lcd_putc@c 007C             __end_of_delayOneMS 04D2  
                 ??_lcd_gotoxy 0077          __end_ofmain@your_name 0085             __end_of_lcd_gotoxy 04AB  
           __end_of__stringtab 0009                       _lcd_busy 04D2                       _lcd_init 0622  
                     _lcd_putc 05C6       insertCharacter@character 0079                  __size_of_main 0137  
                  delayOneMS@n 0070                    ??_getLength 0072                       main@info 0064  
             ?_insertCharacter 0070                lcd_put_nibble@b 0071                main@special_end 0009  
                    stringcode 0003                 _lcd_put_nibble 053B                       stringdir 0003  
                     stringtab 0003  
