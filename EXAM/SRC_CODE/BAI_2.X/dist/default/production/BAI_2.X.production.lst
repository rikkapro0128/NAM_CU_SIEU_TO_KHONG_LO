

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 25 18:27:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0008                     _PORTD	set	8
   211  005C                     _INTE	set	92
   212  0059                     _INTF	set	89
   213  005F                     _GIE	set	95
   214  0095                     _WPUB	set	149
   215  0086                     _TRISB	set	134
   216  0088                     _TRISD	set	136
   217  040E                     _INTEDG	set	1038
   218  040F                     _nRBPU	set	1039
   219  0189                     _ANSELH	set	393
   220  0188                     _ANSEL	set	392
   221                           
   222                           	psect	cinit
   223  0011                     start_initialization:	
   224                           ; #config settings
   225                           
   226  0011                     __initialization:
   227  0011                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  0011                     __end_of__initialization:
   231  0011  0183               	clrf	3
   232  0012  120A  118A  2A16   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	cstackCOMMON
   235  0070                     __pcstackCOMMON:
   236  0070                     ?_declarePort:
   237  0070                     ?_main:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_myIsr:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?i1___lwdiv:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?i1___lwmod:	
   247                           ; 2 bytes @ 0x0
   248                           
   249  0070                     i1___lwdiv@divisor:	
   250                           ; 2 bytes @ 0x0
   251                           
   252  0070                     i1___lwmod@divisor:	
   253                           ; 2 bytes @ 0x0
   254                           
   255                           
   256                           ; 2 bytes @ 0x0
   257  0070                     	ds	2
   258  0072                     i1___lwdiv@dividend:
   259  0072                     i1___lwmod@dividend:	
   260                           ; 2 bytes @ 0x2
   261                           
   262                           
   263                           ; 2 bytes @ 0x2
   264  0072                     	ds	2
   265  0074                     ??i1___lwdiv:
   266  0074                     ??i1___lwmod:	
   267                           ; 1 bytes @ 0x4
   268                           
   269                           
   270                           ; 1 bytes @ 0x4
   271  0074                     	ds	1
   272  0075                     i1___lwmod@counter:
   273  0075                     i1___lwdiv@quotient:	
   274                           ; 1 bytes @ 0x5
   275                           
   276                           
   277                           ; 2 bytes @ 0x5
   278  0075                     	ds	2
   279  0077                     i1___lwdiv@counter:
   280                           
   281                           ; 1 bytes @ 0x7
   282  0077                     	ds	1
   283  0078                     ?_countReverse:
   284  0078                     countReverse@num:	
   285                           ; 1 bytes @ 0x8
   286                           
   287                           
   288                           ; 2 bytes @ 0x8
   289  0078                     	ds	2
   290  007A                     ??_countReverse:
   291                           
   292                           ; 1 bytes @ 0xA
   293  007A                     	ds	3
   294                           
   295                           	psect	cstackBANK0
   296  0020                     __pcstackBANK0:
   297  0020                     countReverse@temp:
   298                           
   299                           ; 2 bytes @ 0x0
   300  0020                     	ds	2
   301  0022                     countReverse@CH:
   302                           
   303                           ; 2 bytes @ 0x2
   304  0022                     	ds	2
   305  0024                     countReverse@DV:
   306                           
   307                           ; 2 bytes @ 0x4
   308  0024                     	ds	2
   309  0026                     ??_myIsr:
   310                           
   311                           ; 1 bytes @ 0x6
   312  0026                     	ds	2
   313  0028                     myIsr@num:
   314                           
   315                           ; 2 bytes @ 0x8
   316  0028                     	ds	2
   317  002A                     ??_declarePort:
   318  002A                     ?___lwdiv:	
   319                           ; 1 bytes @ 0xA
   320                           
   321  002A                     ?___lwmod:	
   322                           ; 2 bytes @ 0xA
   323                           
   324  002A                     ___lwdiv@divisor:	
   325                           ; 2 bytes @ 0xA
   326                           
   327  002A                     ___lwmod@divisor:	
   328                           ; 2 bytes @ 0xA
   329                           
   330                           
   331                           ; 2 bytes @ 0xA
   332  002A                     	ds	2
   333  002C                     ___lwdiv@dividend:
   334  002C                     ___lwmod@dividend:	
   335                           ; 2 bytes @ 0xC
   336                           
   337                           
   338                           ; 2 bytes @ 0xC
   339  002C                     	ds	2
   340  002E                     ??___lwdiv:
   341  002E                     ??___lwmod:	
   342                           ; 1 bytes @ 0xE
   343                           
   344                           
   345                           ; 1 bytes @ 0xE
   346  002E                     	ds	1
   347  002F                     ___lwmod@counter:
   348  002F                     ___lwdiv@quotient:	
   349                           ; 1 bytes @ 0xF
   350                           
   351                           
   352                           ; 2 bytes @ 0xF
   353  002F                     	ds	2
   354  0031                     ___lwdiv@counter:
   355                           
   356                           ; 1 bytes @ 0x11
   357  0031                     	ds	1
   358  0032                     ?_countForward:
   359  0032                     countForward@num:	
   360                           ; 1 bytes @ 0x12
   361                           
   362                           
   363                           ; 2 bytes @ 0x12
   364  0032                     	ds	2
   365  0034                     ??_countForward:
   366                           
   367                           ; 1 bytes @ 0x14
   368  0034                     	ds	3
   369  0037                     countForward@temp:
   370                           
   371                           ; 2 bytes @ 0x17
   372  0037                     	ds	2
   373  0039                     countForward@chuc:
   374                           
   375                           ; 2 bytes @ 0x19
   376  0039                     	ds	2
   377  003B                     countForward@donvi:
   378                           
   379                           ; 2 bytes @ 0x1B
   380  003B                     	ds	2
   381  003D                     countForward@dem:
   382                           
   383                           ; 2 bytes @ 0x1D
   384  003D                     	ds	2
   385  003F                     ??_main:
   386                           
   387                           	psect	maintext
   388  0216                     __pmaintext:	
   389                           ; 1 bytes @ 0x1F
   390 ;;
   391 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   392 ;;
   393 ;; *************** function _main *****************
   394 ;; Defined at:
   395 ;;		line 53 in file "BAI_2.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, status,2, status,0, pclath, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : B00/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels required when called: 5
   415 ;; This function calls:
   416 ;;		_countForward
   417 ;;		_declarePort
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           
   424                           ;psect for function _main
   425  0216                     _main:
   426  0216                     l42:	
   427                           ;incstack = 0
   428                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   429                           ;BAI_2.c: 54:     while(1) {
   430                           
   431  0216                     l939:
   432                           
   433                           ;BAI_2.c: 55:         declarePort();
   434  0216  120A  118A  2200  120A  118A  	fcall	_declarePort
   435                           
   436                           ;BAI_2.c: 56:         countForward(60);
   437  021B  303C               	movlw	60
   438  021C  1283               	bcf	3,5	;RP0=0, select bank0
   439  021D  1303               	bcf	3,6	;RP1=0, select bank0
   440  021E  00B2               	movwf	countForward@num
   441  021F  3000               	movlw	0
   442  0220  00B3               	movwf	countForward@num+1
   443  0221  120A  118A  2015  120A  118A  	fcall	_countForward
   444  0226  2A16               	goto	l42
   445  0227  120A  118A  280E   	ljmp	start
   446  022A                     __end_of_main:
   447                           
   448                           	psect	text1
   449  0200                     __ptext1:	
   450 ;; *************** function _declarePort *****************
   451 ;; Defined at:
   452 ;;		line 18 in file "BAI_2.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used: 1
   472 ;; Hardware stack levels required when called: 3
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _declarePort
   482  0200                     _declarePort:
   483  0200                     l893:	
   484                           ;incstack = 0
   485                           ; Regs used in _declarePort: [wreg+status,2]
   486                           
   487                           
   488                           ;BAI_2.c: 19:     ANSEL = ANSELH = 0;
   489  0200  1683               	bsf	3,5	;RP0=1, select bank3
   490  0201  1703               	bsf	3,6	;RP1=1, select bank3
   491  0202  0189               	clrf	9	;volatile
   492  0203  0188               	clrf	8	;volatile
   493                           
   494                           ;BAI_2.c: 20:     TRISD = 0;
   495  0204  1683               	bsf	3,5	;RP0=1, select bank1
   496  0205  1303               	bcf	3,6	;RP1=0, select bank1
   497  0206  0188               	clrf	8	;volatile
   498  0207                     l895:
   499                           
   500                           ;BAI_2.c: 21:     PORTD = 0xff;
   501  0207  30FF               	movlw	255
   502  0208  1283               	bcf	3,5	;RP0=0, select bank0
   503  0209  1303               	bcf	3,6	;RP1=0, select bank0
   504  020A  0088               	movwf	8	;volatile
   505  020B                     l897:
   506                           
   507                           ;BAI_2.c: 22:     TRISB = WPUB = 0x01;
   508  020B  3001               	movlw	1
   509  020C  1683               	bsf	3,5	;RP0=1, select bank1
   510  020D  1303               	bcf	3,6	;RP1=0, select bank1
   511  020E  0095               	movwf	21	;volatile
   512  020F  0086               	movwf	6	;volatile
   513  0210                     l899:
   514                           
   515                           ;BAI_2.c: 23:     nRBPU = 0;
   516  0210  1381               	bcf	1,7	;volatile
   517  0211                     l901:
   518                           
   519                           ;BAI_2.c: 24:     GIE = 1;
   520  0211  178B               	bsf	11,7	;volatile
   521  0212                     l903:
   522                           
   523                           ;BAI_2.c: 25:     INTF = 0;
   524  0212  108B               	bcf	11,1	;volatile
   525  0213                     l905:
   526                           
   527                           ;BAI_2.c: 26:     INTE = 1;
   528  0213  160B               	bsf	11,4	;volatile
   529  0214                     l907:
   530                           
   531                           ;BAI_2.c: 27:     INTEDG = 1;
   532  0214  1701               	bsf	1,6	;volatile
   533  0215                     l27:
   534  0215  0008               	return
   535  0216                     __end_of_declarePort:
   536                           
   537                           	psect	text2
   538  0015                     __ptext2:	
   539 ;; *************** function _countForward *****************
   540 ;; Defined at:
   541 ;;		line 41 in file "BAI_2.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  num             2   18[BANK0 ] unsigned int 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  dem             2   29[BANK0 ] unsigned int 
   546 ;;  donvi           2   27[BANK0 ] unsigned int 
   547 ;;  chuc            2   25[BANK0 ] unsigned int 
   548 ;;  temp            2   23[BANK0 ] unsigned int 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, pclath, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         0       2       0       0       0
   559 ;;      Locals:         0       8       0       0       0
   560 ;;      Temps:          0       3       0       0       0
   561 ;;      Totals:         0      13       0       0       0
   562 ;;Total ram usage:       13 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 4
   565 ;; This function calls:
   566 ;;		___lwdiv
   567 ;;		___lwmod
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           
   574                           ;psect for function _countForward
   575  0015                     _countForward:
   576  0015                     l923:	
   577                           ;incstack = 0
   578                           ; Regs used in _countForward: [wreg+status,2+status,0+pclath+cstack]
   579                           
   580  0015  1283               	bcf	3,5	;RP0=0, select bank0
   581  0016  1303               	bcf	3,6	;RP1=0, select bank0
   582  0017  01BD               	clrf	countForward@dem
   583  0018  01BE               	clrf	countForward@dem+1
   584  0019  01B9               	clrf	countForward@chuc
   585  001A  01BA               	clrf	countForward@chuc+1
   586  001B  01BB               	clrf	countForward@donvi
   587  001C  01BC               	clrf	countForward@donvi+1
   588  001D                     l925:
   589                           
   590                           ;BAI_2.c: 44:         temp = (chuc << 4) | donvi;
   591  001D  083A               	movf	countForward@chuc+1,w
   592  001E  00B5               	movwf	??_countForward+1
   593  001F  0839               	movf	countForward@chuc,w
   594  0020  00B4               	movwf	??_countForward
   595  0021  0EB4               	swapf	??_countForward,f
   596  0022  0EB5               	swapf	??_countForward+1,f
   597  0023  30F0               	movlw	240
   598  0024  05B5               	andwf	??_countForward+1,f
   599  0025  0834               	movf	??_countForward,w
   600  0026  390F               	andlw	15
   601  0027  04B5               	iorwf	??_countForward+1,f
   602  0028  30F0               	movlw	240
   603  0029  05B4               	andwf	??_countForward,f
   604  002A  083B               	movf	countForward@donvi,w
   605  002B  0434               	iorwf	??_countForward,w
   606  002C  00B7               	movwf	countForward@temp
   607  002D  083C               	movf	countForward@donvi+1,w
   608  002E  0435               	iorwf	??_countForward+1,w
   609  002F  00B8               	movwf	countForward@temp+1
   610  0030                     l927:
   611                           
   612                           ;BAI_2.c: 45:         PORTD = temp;
   613  0030  0837               	movf	countForward@temp,w
   614  0031  0088               	movwf	8	;volatile
   615  0032                     l929:
   616                           
   617                           ;BAI_2.c: 46:         _delay((unsigned long)((300)*(4000000/4000.0)));
   618  0032  3002               	movlw	2
   619  0033  1283               	bcf	3,5	;RP0=0, select bank0
   620  0034  1303               	bcf	3,6	;RP1=0, select bank0
   621  0035  00B6               	movwf	??_countForward+2
   622  0036  3086               	movlw	134
   623  0037  00B5               	movwf	??_countForward+1
   624  0038  3098               	movlw	152
   625  0039  00B4               	movwf	??_countForward
   626  003A                     u597:
   627  003A  0BB4               	decfsz	??_countForward,f
   628  003B  283A               	goto	u597
   629  003C  0BB5               	decfsz	??_countForward+1,f
   630  003D  283A               	goto	u597
   631  003E  0BB6               	decfsz	??_countForward+2,f
   632  003F  283A               	goto	u597
   633  0040  0000               	nop
   634  0041                     l931:
   635                           
   636                           ;BAI_2.c: 47:         dem++;
   637  0041  3001               	movlw	1
   638  0042  1283               	bcf	3,5	;RP0=0, select bank0
   639  0043  1303               	bcf	3,6	;RP1=0, select bank0
   640  0044  07BD               	addwf	countForward@dem,f
   641  0045  1803               	skipnc
   642  0046  0ABE               	incf	countForward@dem+1,f
   643  0047  3000               	movlw	0
   644  0048  07BE               	addwf	countForward@dem+1,f
   645  0049                     l933:
   646                           
   647                           ;BAI_2.c: 48:         chuc = dem / 10;
   648  0049  300A               	movlw	10
   649  004A  00AA               	movwf	___lwdiv@divisor
   650  004B  3000               	movlw	0
   651  004C  00AB               	movwf	___lwdiv@divisor+1
   652  004D  083E               	movf	countForward@dem+1,w
   653  004E  00AD               	movwf	___lwdiv@dividend+1
   654  004F  083D               	movf	countForward@dem,w
   655  0050  00AC               	movwf	___lwdiv@dividend
   656  0051  120A  118A  20DA  120A  118A  	fcall	___lwdiv
   657  0056  1283               	bcf	3,5	;RP0=0, select bank0
   658  0057  1303               	bcf	3,6	;RP1=0, select bank0
   659  0058  082B               	movf	?___lwdiv+1,w
   660  0059  00BA               	movwf	countForward@chuc+1
   661  005A  082A               	movf	?___lwdiv,w
   662  005B  00B9               	movwf	countForward@chuc
   663  005C                     l935:
   664                           
   665                           ;BAI_2.c: 49:         donvi = dem % 10;
   666  005C  300A               	movlw	10
   667  005D  00AA               	movwf	___lwmod@divisor
   668  005E  3000               	movlw	0
   669  005F  00AB               	movwf	___lwmod@divisor+1
   670  0060  083E               	movf	countForward@dem+1,w
   671  0061  00AD               	movwf	___lwmod@dividend+1
   672  0062  083D               	movf	countForward@dem,w
   673  0063  00AC               	movwf	___lwmod@dividend
   674  0064  120A  118A  2164  120A  118A  	fcall	___lwmod
   675  0069  1283               	bcf	3,5	;RP0=0, select bank0
   676  006A  1303               	bcf	3,6	;RP1=0, select bank0
   677  006B  082B               	movf	?___lwmod+1,w
   678  006C  00BC               	movwf	countForward@donvi+1
   679  006D  082A               	movf	?___lwmod,w
   680  006E  00BB               	movwf	countForward@donvi
   681  006F                     l937:
   682                           
   683                           ;BAI_2.c: 50:     }while(num--);
   684  006F  3001               	movlw	1
   685  0070  02B2               	subwf	countForward@num,f
   686  0071  3000               	movlw	0
   687  0072  1C03               	skipc
   688  0073  03B3               	decf	countForward@num+1,f
   689  0074  02B3               	subwf	countForward@num+1,f
   690  0075  0A32               	incf	countForward@num,w
   691  0076  1D03               	skipz
   692  0077  287C               	goto	u571
   693  0078  0A33               	incf	countForward@num+1,w
   694  0079  1D03               	btfss	3,2
   695  007A  287C               	goto	u571
   696  007B  287D               	goto	u570
   697  007C                     u571:
   698  007C  281D               	goto	l925
   699  007D                     u570:
   700  007D                     l37:
   701  007D  0008               	return
   702  007E                     __end_of_countForward:
   703                           
   704                           	psect	text3
   705  0164                     __ptext3:	
   706 ;; *************** function ___lwmod *****************
   707 ;; Defined at:
   708 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  divisor         2   10[BANK0 ] unsigned int 
   711 ;;  dividend        2   12[BANK0 ] unsigned int 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  counter         1   15[BANK0 ] unsigned char 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  2   10[BANK0 ] unsigned int 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       4       0       0       0
   724 ;;      Locals:         0       1       0       0       0
   725 ;;      Temps:          0       1       0       0       0
   726 ;;      Totals:         0       6       0       0       0
   727 ;;Total ram usage:        6 bytes
   728 ;; Hardware stack levels used: 1
   729 ;; Hardware stack levels required when called: 3
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_countForward
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           
   738                           ;psect for function ___lwmod
   739  0164                     ___lwmod:
   740  0164                     l823:	
   741                           ;incstack = 0
   742                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   743                           
   744  0164  1283               	bcf	3,5	;RP0=0, select bank0
   745  0165  1303               	bcf	3,6	;RP1=0, select bank0
   746  0166  082A               	movf	___lwmod@divisor,w
   747  0167  042B               	iorwf	___lwmod@divisor+1,w
   748  0168  1903               	btfsc	3,2
   749  0169  296B               	goto	u371
   750  016A  296C               	goto	u370
   751  016B                     u371:
   752  016B  299B               	goto	l841
   753  016C                     u370:
   754  016C                     l825:
   755  016C  01AF               	clrf	___lwmod@counter
   756  016D  0AAF               	incf	___lwmod@counter,f
   757  016E  297A               	goto	l831
   758  016F                     l827:
   759  016F  3001               	movlw	1
   760  0170                     u385:
   761  0170  1003               	clrc
   762  0171  0DAA               	rlf	___lwmod@divisor,f
   763  0172  0DAB               	rlf	___lwmod@divisor+1,f
   764  0173  3EFF               	addlw	-1
   765  0174  1D03               	skipz
   766  0175  2970               	goto	u385
   767  0176                     l829:
   768  0176  3001               	movlw	1
   769  0177  00AE               	movwf	??___lwmod
   770  0178  082E               	movf	??___lwmod,w
   771  0179  07AF               	addwf	___lwmod@counter,f
   772  017A                     l831:
   773  017A  1FAB               	btfss	___lwmod@divisor+1,7
   774  017B  297D               	goto	u391
   775  017C  297E               	goto	u390
   776  017D                     u391:
   777  017D  296F               	goto	l827
   778  017E                     u390:
   779  017E                     l833:
   780  017E  082B               	movf	___lwmod@divisor+1,w
   781  017F  022D               	subwf	___lwmod@dividend+1,w
   782  0180  1D03               	skipz
   783  0181  2984               	goto	u405
   784  0182  082A               	movf	___lwmod@divisor,w
   785  0183  022C               	subwf	___lwmod@dividend,w
   786  0184                     u405:
   787  0184  1C03               	skipc
   788  0185  2987               	goto	u401
   789  0186  2988               	goto	u400
   790  0187                     u401:
   791  0187  298E               	goto	l837
   792  0188                     u400:
   793  0188                     l835:
   794  0188  082A               	movf	___lwmod@divisor,w
   795  0189  02AC               	subwf	___lwmod@dividend,f
   796  018A  082B               	movf	___lwmod@divisor+1,w
   797  018B  1C03               	skipc
   798  018C  03AD               	decf	___lwmod@dividend+1,f
   799  018D  02AD               	subwf	___lwmod@dividend+1,f
   800  018E                     l837:
   801  018E  3001               	movlw	1
   802  018F                     u415:
   803  018F  1003               	clrc
   804  0190  0CAB               	rrf	___lwmod@divisor+1,f
   805  0191  0CAA               	rrf	___lwmod@divisor,f
   806  0192  3EFF               	addlw	-1
   807  0193  1D03               	skipz
   808  0194  298F               	goto	u415
   809  0195                     l839:
   810  0195  3001               	movlw	1
   811  0196  02AF               	subwf	___lwmod@counter,f
   812  0197  1D03               	btfss	3,2
   813  0198  299A               	goto	u421
   814  0199  299B               	goto	u420
   815  019A                     u421:
   816  019A  297E               	goto	l833
   817  019B                     u420:
   818  019B                     l841:
   819  019B  082D               	movf	___lwmod@dividend+1,w
   820  019C  00AB               	movwf	?___lwmod+1
   821  019D  082C               	movf	___lwmod@dividend,w
   822  019E  00AA               	movwf	?___lwmod
   823  019F                     l421:
   824  019F  0008               	return
   825  01A0                     __end_of___lwmod:
   826                           
   827                           	psect	text4
   828  00DA                     __ptext4:	
   829 ;; *************** function ___lwdiv *****************
   830 ;; Defined at:
   831 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  divisor         2   10[BANK0 ] unsigned int 
   834 ;;  dividend        2   12[BANK0 ] unsigned int 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  quotient        2   15[BANK0 ] unsigned int 
   837 ;;  counter         1   17[BANK0 ] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  2   10[BANK0 ] unsigned int 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   847 ;;      Params:         0       4       0       0       0
   848 ;;      Locals:         0       3       0       0       0
   849 ;;      Temps:          0       1       0       0       0
   850 ;;      Totals:         0       8       0       0       0
   851 ;;Total ram usage:        8 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 3
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_countForward
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function ___lwdiv
   863  00DA                     ___lwdiv:
   864  00DA                     l797:	
   865                           ;incstack = 0
   866                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   867                           
   868  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   869  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   870  00DC  01AF               	clrf	___lwdiv@quotient
   871  00DD  01B0               	clrf	___lwdiv@quotient+1
   872  00DE                     l799:
   873  00DE  082A               	movf	___lwdiv@divisor,w
   874  00DF  042B               	iorwf	___lwdiv@divisor+1,w
   875  00E0  1903               	btfsc	3,2
   876  00E1  28E3               	goto	u301
   877  00E2  28E4               	goto	u300
   878  00E3                     u301:
   879  00E3  291B               	goto	l819
   880  00E4                     u300:
   881  00E4                     l801:
   882  00E4  01B1               	clrf	___lwdiv@counter
   883  00E5  0AB1               	incf	___lwdiv@counter,f
   884  00E6  28F2               	goto	l807
   885  00E7                     l803:
   886  00E7  3001               	movlw	1
   887  00E8                     u315:
   888  00E8  1003               	clrc
   889  00E9  0DAA               	rlf	___lwdiv@divisor,f
   890  00EA  0DAB               	rlf	___lwdiv@divisor+1,f
   891  00EB  3EFF               	addlw	-1
   892  00EC  1D03               	skipz
   893  00ED  28E8               	goto	u315
   894  00EE                     l805:
   895  00EE  3001               	movlw	1
   896  00EF  00AE               	movwf	??___lwdiv
   897  00F0  082E               	movf	??___lwdiv,w
   898  00F1  07B1               	addwf	___lwdiv@counter,f
   899  00F2                     l807:
   900  00F2  1FAB               	btfss	___lwdiv@divisor+1,7
   901  00F3  28F5               	goto	u321
   902  00F4  28F6               	goto	u320
   903  00F5                     u321:
   904  00F5  28E7               	goto	l803
   905  00F6                     u320:
   906  00F6                     l809:
   907  00F6  3001               	movlw	1
   908  00F7                     u335:
   909  00F7  1003               	clrc
   910  00F8  0DAF               	rlf	___lwdiv@quotient,f
   911  00F9  0DB0               	rlf	___lwdiv@quotient+1,f
   912  00FA  3EFF               	addlw	-1
   913  00FB  1D03               	skipz
   914  00FC  28F7               	goto	u335
   915  00FD  082B               	movf	___lwdiv@divisor+1,w
   916  00FE  022D               	subwf	___lwdiv@dividend+1,w
   917  00FF  1D03               	skipz
   918  0100  2903               	goto	u345
   919  0101  082A               	movf	___lwdiv@divisor,w
   920  0102  022C               	subwf	___lwdiv@dividend,w
   921  0103                     u345:
   922  0103  1C03               	skipc
   923  0104  2906               	goto	u341
   924  0105  2907               	goto	u340
   925  0106                     u341:
   926  0106  290E               	goto	l815
   927  0107                     u340:
   928  0107                     l811:
   929  0107  082A               	movf	___lwdiv@divisor,w
   930  0108  02AC               	subwf	___lwdiv@dividend,f
   931  0109  082B               	movf	___lwdiv@divisor+1,w
   932  010A  1C03               	skipc
   933  010B  03AD               	decf	___lwdiv@dividend+1,f
   934  010C  02AD               	subwf	___lwdiv@dividend+1,f
   935  010D                     l813:
   936  010D  142F               	bsf	___lwdiv@quotient,0
   937  010E                     l815:
   938  010E  3001               	movlw	1
   939  010F                     u355:
   940  010F  1003               	clrc
   941  0110  0CAB               	rrf	___lwdiv@divisor+1,f
   942  0111  0CAA               	rrf	___lwdiv@divisor,f
   943  0112  3EFF               	addlw	-1
   944  0113  1D03               	skipz
   945  0114  290F               	goto	u355
   946  0115                     l817:
   947  0115  3001               	movlw	1
   948  0116  02B1               	subwf	___lwdiv@counter,f
   949  0117  1D03               	btfss	3,2
   950  0118  291A               	goto	u361
   951  0119  291B               	goto	u360
   952  011A                     u361:
   953  011A  28F6               	goto	l809
   954  011B                     u360:
   955  011B                     l819:
   956  011B  0830               	movf	___lwdiv@quotient+1,w
   957  011C  00AB               	movwf	?___lwdiv+1
   958  011D  082F               	movf	___lwdiv@quotient,w
   959  011E  00AA               	movwf	?___lwdiv
   960  011F                     l411:
   961  011F  0008               	return
   962  0120                     __end_of___lwdiv:
   963                           
   964                           	psect	text5
   965  01DA                     __ptext5:	
   966 ;; *************** function _myIsr *****************
   967 ;; Defined at:
   968 ;;		line 60 in file "BAI_2.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  num             2    8[BANK0 ] unsigned int 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0, pclath, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         0       2       0       0       0
   984 ;;      Temps:          0       2       0       0       0
   985 ;;      Totals:         0       4       0       0       0
   986 ;;Total ram usage:        4 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 2
   989 ;; This function calls:
   990 ;;		_countReverse
   991 ;; This function is called by:
   992 ;;		Interrupt level 1
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _myIsr
   998  01DA                     _myIsr:
   999  01DA                     i1l941:
  1000                           
  1001                           ;BAI_2.c: 61:     INTF = 0;
  1002  01DA  108B               	bcf	11,1	;volatile
  1003  01DB                     i1l943:
  1004                           
  1005                           ;BAI_2.c: 62:     unsigned int num = 2;
  1006  01DB  3002               	movlw	2
  1007  01DC  00A8               	movwf	myIsr@num
  1008  01DD  3000               	movlw	0
  1009  01DE  00A9               	movwf	myIsr@num+1
  1010                           
  1011                           ;BAI_2.c: 63:     while(num--) {
  1012  01DF  29E9               	goto	i1l947
  1013  01E0                     i1l945:
  1014                           
  1015                           ;BAI_2.c: 64:         countReverse(24);
  1016  01E0  3018               	movlw	24
  1017  01E1  00F8               	movwf	countReverse@num
  1018  01E2  3000               	movlw	0
  1019  01E3  00F9               	movwf	countReverse@num+1
  1020  01E4  120A  118A  207E  120A  118A  	fcall	_countReverse
  1021  01E9                     i1l947:
  1022                           
  1023                           ;BAI_2.c: 63:     while(num--) {
  1024  01E9  3001               	movlw	1
  1025  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1026  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1027  01EC  02A8               	subwf	myIsr@num,f
  1028  01ED  3000               	movlw	0
  1029  01EE  1C03               	skipc
  1030  01EF  03A9               	decf	myIsr@num+1,f
  1031  01F0  02A9               	subwf	myIsr@num+1,f
  1032  01F1  0A28               	incf	myIsr@num,w
  1033  01F2  1D03               	skipz
  1034  01F3  29F8               	goto	u58_21
  1035  01F4  0A29               	incf	myIsr@num+1,w
  1036  01F5  1D03               	btfss	3,2
  1037  01F6  29F8               	goto	u58_21
  1038  01F7  29F9               	goto	u58_20
  1039  01F8                     u58_21:
  1040  01F8  29E0               	goto	i1l945
  1041  01F9                     u58_20:
  1042  01F9                     i1l53:
  1043  01F9  0827               	movf	??_myIsr+1,w
  1044  01FA  008A               	movwf	10
  1045  01FB  0E26               	swapf	??_myIsr,w
  1046  01FC  0083               	movwf	3
  1047  01FD  0EFE               	swapf	btemp,f
  1048  01FE  0E7E               	swapf	btemp,w
  1049  01FF  0009               	retfie
  1050  0200                     __end_of_myIsr:
  1051                           
  1052                           	psect	intentry
  1053  0004                     __pintentry:	
  1054                           ;incstack = 0
  1055                           ; Regs used in _myIsr: [wreg+status,2+status,0+pclath+cstack]
  1056                           
  1057  0004                     interrupt_function:
  1058  007E                     saved_w	set	btemp
  1059  0004  00FE               	movwf	btemp
  1060  0005  0E03               	swapf	3,w
  1061  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0008  00A6               	movwf	??_myIsr
  1064  0009  080A               	movf	10,w
  1065  000A  00A7               	movwf	??_myIsr+1
  1066  000B  120A  118A  29DA   	ljmp	_myIsr
  1067                           
  1068                           	psect	text6
  1069  007E                     __ptext6:	
  1070 ;; *************** function _countReverse *****************
  1071 ;; Defined at:
  1072 ;;		line 30 in file "BAI_2.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  num             2    8[COMMON] unsigned int 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  DV              2    4[BANK0 ] unsigned int 
  1077 ;;  CH              2    2[BANK0 ] unsigned int 
  1078 ;;  temp            2    0[BANK0 ] unsigned int 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         2       0       0       0       0
  1089 ;;      Locals:         0       6       0       0       0
  1090 ;;      Temps:          3       0       0       0       0
  1091 ;;      Totals:         5       6       0       0       0
  1092 ;;Total ram usage:       11 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 1
  1095 ;; This function calls:
  1096 ;;		i1___lwdiv
  1097 ;;		i1___lwmod
  1098 ;; This function is called by:
  1099 ;;		_myIsr
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _countReverse
  1105  007E                     _countReverse:
  1106  007E                     i1l909:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _countReverse: [wreg+status,2+status,0+pclath+cstack]
  1109                           
  1110  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1111  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0080  01A2               	clrf	countReverse@CH
  1113  0081  01A3               	clrf	countReverse@CH+1
  1114  0082  01A4               	clrf	countReverse@DV
  1115  0083  01A5               	clrf	countReverse@DV+1
  1116  0084                     i1l911:
  1117                           
  1118                           ;BAI_2.c: 33:         CH = num / 10;
  1119  0084  300A               	movlw	10
  1120  0085  00F0               	movwf	i1___lwdiv@divisor
  1121  0086  3000               	movlw	0
  1122  0087  00F1               	movwf	i1___lwdiv@divisor+1
  1123  0088  0879               	movf	countReverse@num+1,w
  1124  0089  00F3               	movwf	i1___lwdiv@dividend+1
  1125  008A  0878               	movf	countReverse@num,w
  1126  008B  00F2               	movwf	i1___lwdiv@dividend
  1127  008C  120A  118A  2120  120A  118A  	fcall	i1___lwdiv
  1128  0091  0871               	movf	?i1___lwdiv+1,w
  1129  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0094  00A3               	movwf	countReverse@CH+1
  1132  0095  0870               	movf	?i1___lwdiv,w
  1133  0096  00A2               	movwf	countReverse@CH
  1134  0097                     i1l913:
  1135                           
  1136                           ;BAI_2.c: 34:         DV = num % 10;
  1137  0097  300A               	movlw	10
  1138  0098  00F0               	movwf	i1___lwmod@divisor
  1139  0099  3000               	movlw	0
  1140  009A  00F1               	movwf	i1___lwmod@divisor+1
  1141  009B  0879               	movf	countReverse@num+1,w
  1142  009C  00F3               	movwf	i1___lwmod@dividend+1
  1143  009D  0878               	movf	countReverse@num,w
  1144  009E  00F2               	movwf	i1___lwmod@dividend
  1145  009F  120A  118A  21A0  120A  118A  	fcall	i1___lwmod
  1146  00A4  0871               	movf	?i1___lwmod+1,w
  1147  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1149  00A7  00A5               	movwf	countReverse@DV+1
  1150  00A8  0870               	movf	?i1___lwmod,w
  1151  00A9  00A4               	movwf	countReverse@DV
  1152  00AA                     i1l915:
  1153                           
  1154                           ;BAI_2.c: 35:         temp = (CH << 4) | DV;
  1155  00AA  0823               	movf	countReverse@CH+1,w
  1156  00AB  00FB               	movwf	??_countReverse+1
  1157  00AC  0822               	movf	countReverse@CH,w
  1158  00AD  00FA               	movwf	??_countReverse
  1159  00AE  0EFA               	swapf	??_countReverse,f
  1160  00AF  0EFB               	swapf	??_countReverse+1,f
  1161  00B0  30F0               	movlw	240
  1162  00B1  05FB               	andwf	??_countReverse+1,f
  1163  00B2  087A               	movf	??_countReverse,w
  1164  00B3  390F               	andlw	15
  1165  00B4  04FB               	iorwf	??_countReverse+1,f
  1166  00B5  30F0               	movlw	240
  1167  00B6  05FA               	andwf	??_countReverse,f
  1168  00B7  0824               	movf	countReverse@DV,w
  1169  00B8  047A               	iorwf	??_countReverse,w
  1170  00B9  00A0               	movwf	countReverse@temp
  1171  00BA  0825               	movf	countReverse@DV+1,w
  1172  00BB  047B               	iorwf	??_countReverse+1,w
  1173  00BC  00A1               	movwf	countReverse@temp+1
  1174  00BD                     i1l917:
  1175                           
  1176                           ;BAI_2.c: 36:         PORTD = temp;
  1177  00BD  0820               	movf	countReverse@temp,w
  1178  00BE  0088               	movwf	8	;volatile
  1179  00BF                     i1l919:
  1180                           
  1181                           ;BAI_2.c: 37:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1182  00BF  3002               	movlw	2
  1183  00C0  00FC               	movwf	??_countReverse+2
  1184  00C1  3086               	movlw	134
  1185  00C2  00FB               	movwf	??_countReverse+1
  1186  00C3  3099               	movlw	153
  1187  00C4  00FA               	movwf	??_countReverse
  1188  00C5                     u60_27:
  1189  00C5  0BFA               	decfsz	??_countReverse,f
  1190  00C6  28C5               	goto	u60_27
  1191  00C7  0BFB               	decfsz	??_countReverse+1,f
  1192  00C8  28C5               	goto	u60_27
  1193  00C9  0BFC               	decfsz	??_countReverse+2,f
  1194  00CA  28C5               	goto	u60_27
  1195  00CB                     i1l921:
  1196                           
  1197                           ;BAI_2.c: 38:     }while(num--);
  1198  00CB  3001               	movlw	1
  1199  00CC  02F8               	subwf	countReverse@num,f
  1200  00CD  3000               	movlw	0
  1201  00CE  1C03               	skipc
  1202  00CF  03F9               	decf	countReverse@num+1,f
  1203  00D0  02F9               	subwf	countReverse@num+1,f
  1204  00D1  0A78               	incf	countReverse@num,w
  1205  00D2  1D03               	skipz
  1206  00D3  28D8               	goto	u56_21
  1207  00D4  0A79               	incf	countReverse@num+1,w
  1208  00D5  1D03               	btfss	3,2
  1209  00D6  28D8               	goto	u56_21
  1210  00D7  28D9               	goto	u56_20
  1211  00D8                     u56_21:
  1212  00D8  2884               	goto	i1l911
  1213  00D9                     u56_20:
  1214  00D9                     i1l32:
  1215  00D9  0008               	return
  1216  00DA                     __end_of_countReverse:
  1217                           
  1218                           	psect	text7
  1219  01A0                     __ptext7:	
  1220 ;; *************** function i1___lwmod *****************
  1221 ;; Defined at:
  1222 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  divisor         2    0[COMMON] unsigned int 
  1225 ;;  dividend        2    2[COMMON] unsigned int 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  counter         1    5[COMMON] unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2    0[COMMON] unsigned int 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         4       0       0       0       0
  1238 ;;      Locals:         1       0       0       0       0
  1239 ;;      Temps:          1       0       0       0       0
  1240 ;;      Totals:         6       0       0       0       0
  1241 ;;Total ram usage:        6 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_countReverse
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function i1___lwmod
  1252  01A0                     i1___lwmod:
  1253  01A0                     i1l871:	
  1254                           ;incstack = 0
  1255                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  1256                           
  1257  01A0  0870               	movf	i1___lwmod@divisor,w
  1258  01A1  0471               	iorwf	i1___lwmod@divisor+1,w
  1259  01A2  1903               	btfsc	3,2
  1260  01A3  29A5               	goto	u50_21
  1261  01A4  29A6               	goto	u50_20
  1262  01A5                     u50_21:
  1263  01A5  29D5               	goto	i1l889
  1264  01A6                     u50_20:
  1265  01A6                     i1l873:
  1266  01A6  01F5               	clrf	i1___lwmod@counter
  1267  01A7  0AF5               	incf	i1___lwmod@counter,f
  1268  01A8  29B4               	goto	i1l879
  1269  01A9                     i1l875:
  1270  01A9  3001               	movlw	1
  1271  01AA                     u51_25:
  1272  01AA  1003               	clrc
  1273  01AB  0DF0               	rlf	i1___lwmod@divisor,f
  1274  01AC  0DF1               	rlf	i1___lwmod@divisor+1,f
  1275  01AD  3EFF               	addlw	-1
  1276  01AE  1D03               	skipz
  1277  01AF  29AA               	goto	u51_25
  1278  01B0                     i1l877:
  1279  01B0  3001               	movlw	1
  1280  01B1  00F4               	movwf	??i1___lwmod
  1281  01B2  0874               	movf	??i1___lwmod,w
  1282  01B3  07F5               	addwf	i1___lwmod@counter,f
  1283  01B4                     i1l879:
  1284  01B4  1FF1               	btfss	i1___lwmod@divisor+1,7
  1285  01B5  29B7               	goto	u52_21
  1286  01B6  29B8               	goto	u52_20
  1287  01B7                     u52_21:
  1288  01B7  29A9               	goto	i1l875
  1289  01B8                     u52_20:
  1290  01B8                     i1l881:
  1291  01B8  0871               	movf	i1___lwmod@divisor+1,w
  1292  01B9  0273               	subwf	i1___lwmod@dividend+1,w
  1293  01BA  1D03               	skipz
  1294  01BB  29BE               	goto	u53_25
  1295  01BC  0870               	movf	i1___lwmod@divisor,w
  1296  01BD  0272               	subwf	i1___lwmod@dividend,w
  1297  01BE                     u53_25:
  1298  01BE  1C03               	skipc
  1299  01BF  29C1               	goto	u53_21
  1300  01C0  29C2               	goto	u53_20
  1301  01C1                     u53_21:
  1302  01C1  29C8               	goto	i1l885
  1303  01C2                     u53_20:
  1304  01C2                     i1l883:
  1305  01C2  0870               	movf	i1___lwmod@divisor,w
  1306  01C3  02F2               	subwf	i1___lwmod@dividend,f
  1307  01C4  0871               	movf	i1___lwmod@divisor+1,w
  1308  01C5  1C03               	skipc
  1309  01C6  03F3               	decf	i1___lwmod@dividend+1,f
  1310  01C7  02F3               	subwf	i1___lwmod@dividend+1,f
  1311  01C8                     i1l885:
  1312  01C8  3001               	movlw	1
  1313  01C9                     u54_25:
  1314  01C9  1003               	clrc
  1315  01CA  0CF1               	rrf	i1___lwmod@divisor+1,f
  1316  01CB  0CF0               	rrf	i1___lwmod@divisor,f
  1317  01CC  3EFF               	addlw	-1
  1318  01CD  1D03               	skipz
  1319  01CE  29C9               	goto	u54_25
  1320  01CF                     i1l887:
  1321  01CF  3001               	movlw	1
  1322  01D0  02F5               	subwf	i1___lwmod@counter,f
  1323  01D1  1D03               	btfss	3,2
  1324  01D2  29D4               	goto	u55_21
  1325  01D3  29D5               	goto	u55_20
  1326  01D4                     u55_21:
  1327  01D4  29B8               	goto	i1l881
  1328  01D5                     u55_20:
  1329  01D5                     i1l889:
  1330  01D5  0873               	movf	i1___lwmod@dividend+1,w
  1331  01D6  00F1               	movwf	?i1___lwmod+1
  1332  01D7  0872               	movf	i1___lwmod@dividend,w
  1333  01D8  00F0               	movwf	?i1___lwmod
  1334  01D9                     i1l421:
  1335  01D9  0008               	return
  1336  01DA                     __end_ofi1___lwmod:
  1337                           
  1338                           	psect	text8
  1339  0120                     __ptext8:	
  1340 ;; *************** function i1___lwdiv *****************
  1341 ;; Defined at:
  1342 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  divisor         2    0[COMMON] unsigned int 
  1345 ;;  dividend        2    2[COMMON] unsigned int 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  quotient        2    5[COMMON] unsigned int 
  1348 ;;  counter         1    7[COMMON] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  2    0[COMMON] unsigned int 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         4       0       0       0       0
  1359 ;;      Locals:         3       0       0       0       0
  1360 ;;      Temps:          1       0       0       0       0
  1361 ;;      Totals:         8       0       0       0       0
  1362 ;;Total ram usage:        8 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_countReverse
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function i1___lwdiv
  1373  0120                     i1___lwdiv:
  1374  0120                     i1l845:	
  1375                           ;incstack = 0
  1376                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  1377                           
  1378  0120  01F5               	clrf	i1___lwdiv@quotient
  1379  0121  01F6               	clrf	i1___lwdiv@quotient+1
  1380  0122                     i1l847:
  1381  0122  0870               	movf	i1___lwdiv@divisor,w
  1382  0123  0471               	iorwf	i1___lwdiv@divisor+1,w
  1383  0124  1903               	btfsc	3,2
  1384  0125  2927               	goto	u43_21
  1385  0126  2928               	goto	u43_20
  1386  0127                     u43_21:
  1387  0127  295F               	goto	i1l867
  1388  0128                     u43_20:
  1389  0128                     i1l849:
  1390  0128  01F7               	clrf	i1___lwdiv@counter
  1391  0129  0AF7               	incf	i1___lwdiv@counter,f
  1392  012A  2936               	goto	i1l855
  1393  012B                     i1l851:
  1394  012B  3001               	movlw	1
  1395  012C                     u44_25:
  1396  012C  1003               	clrc
  1397  012D  0DF0               	rlf	i1___lwdiv@divisor,f
  1398  012E  0DF1               	rlf	i1___lwdiv@divisor+1,f
  1399  012F  3EFF               	addlw	-1
  1400  0130  1D03               	skipz
  1401  0131  292C               	goto	u44_25
  1402  0132                     i1l853:
  1403  0132  3001               	movlw	1
  1404  0133  00F4               	movwf	??i1___lwdiv
  1405  0134  0874               	movf	??i1___lwdiv,w
  1406  0135  07F7               	addwf	i1___lwdiv@counter,f
  1407  0136                     i1l855:
  1408  0136  1FF1               	btfss	i1___lwdiv@divisor+1,7
  1409  0137  2939               	goto	u45_21
  1410  0138  293A               	goto	u45_20
  1411  0139                     u45_21:
  1412  0139  292B               	goto	i1l851
  1413  013A                     u45_20:
  1414  013A                     i1l857:
  1415  013A  3001               	movlw	1
  1416  013B                     u46_25:
  1417  013B  1003               	clrc
  1418  013C  0DF5               	rlf	i1___lwdiv@quotient,f
  1419  013D  0DF6               	rlf	i1___lwdiv@quotient+1,f
  1420  013E  3EFF               	addlw	-1
  1421  013F  1D03               	skipz
  1422  0140  293B               	goto	u46_25
  1423  0141  0871               	movf	i1___lwdiv@divisor+1,w
  1424  0142  0273               	subwf	i1___lwdiv@dividend+1,w
  1425  0143  1D03               	skipz
  1426  0144  2947               	goto	u47_25
  1427  0145  0870               	movf	i1___lwdiv@divisor,w
  1428  0146  0272               	subwf	i1___lwdiv@dividend,w
  1429  0147                     u47_25:
  1430  0147  1C03               	skipc
  1431  0148  294A               	goto	u47_21
  1432  0149  294B               	goto	u47_20
  1433  014A                     u47_21:
  1434  014A  2952               	goto	i1l863
  1435  014B                     u47_20:
  1436  014B                     i1l859:
  1437  014B  0870               	movf	i1___lwdiv@divisor,w
  1438  014C  02F2               	subwf	i1___lwdiv@dividend,f
  1439  014D  0871               	movf	i1___lwdiv@divisor+1,w
  1440  014E  1C03               	skipc
  1441  014F  03F3               	decf	i1___lwdiv@dividend+1,f
  1442  0150  02F3               	subwf	i1___lwdiv@dividend+1,f
  1443  0151                     i1l861:
  1444  0151  1475               	bsf	i1___lwdiv@quotient,0
  1445  0152                     i1l863:
  1446  0152  3001               	movlw	1
  1447  0153                     u48_25:
  1448  0153  1003               	clrc
  1449  0154  0CF1               	rrf	i1___lwdiv@divisor+1,f
  1450  0155  0CF0               	rrf	i1___lwdiv@divisor,f
  1451  0156  3EFF               	addlw	-1
  1452  0157  1D03               	skipz
  1453  0158  2953               	goto	u48_25
  1454  0159                     i1l865:
  1455  0159  3001               	movlw	1
  1456  015A  02F7               	subwf	i1___lwdiv@counter,f
  1457  015B  1D03               	btfss	3,2
  1458  015C  295E               	goto	u49_21
  1459  015D  295F               	goto	u49_20
  1460  015E                     u49_21:
  1461  015E  293A               	goto	i1l857
  1462  015F                     u49_20:
  1463  015F                     i1l867:
  1464  015F  0876               	movf	i1___lwdiv@quotient+1,w
  1465  0160  00F1               	movwf	?i1___lwdiv+1
  1466  0161  0875               	movf	i1___lwdiv@quotient,w
  1467  0162  00F0               	movwf	?i1___lwdiv
  1468  0163                     i1l411:
  1469  0163  0008               	return
  1470  0164                     __end_ofi1___lwdiv:
  1471  007E                     btemp	set	126	;btemp
  1472  007E                     wtemp0	set	126
  1473                           
  1474                           	psect	config
  1475                           
  1476                           ;Config register CONFIG1 @ 0x2007
  1477                           ;	Oscillator Selection bits
  1478                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1479                           ;	Watchdog Timer Enable bit
  1480                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1481                           ;	Power-up Timer Enable bit
  1482                           ;	PWRTE = OFF, PWRT disabled
  1483                           ;	RE3/MCLR pin function select bit
  1484                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1485                           ;	Code Protection bit
  1486                           ;	CP = OFF, Program memory code protection is disabled
  1487                           ;	Data Code Protection bit
  1488                           ;	CPD = OFF, Data memory code protection is disabled
  1489                           ;	Brown Out Reset Selection bits
  1490                           ;	BOREN = OFF, BOR disabled
  1491                           ;	Internal External Switchover bit
  1492                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1493                           ;	Fail-Safe Clock Monitor Enabled bit
  1494                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1495                           ;	Low Voltage Programming Enable bit
  1496                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1497                           ;	In-Circuit Debugger Mode bit
  1498                           ;	DEBUG = 0x1, unprogrammed default
  1499  2007                     	org	8199
  1500  2007  20F2               	dw	8434
  1501                           
  1502                           ;Config register CONFIG2 @ 0x2008
  1503                           ;	Brown-out Reset Selection bit
  1504                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1505                           ;	Flash Program Memory Self Write Enable bits
  1506                           ;	WRT = OFF, Write protection off
  1507  2008                     	org	8200
  1508  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     31      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    _myIsr->_countReverse
    _countReverse->i1___lwdiv

Critical Paths under _main in BANK0

    _main->_countForward
    _countForward->___lwdiv

Critical Paths under _myIsr in BANK0

    _myIsr->_countReverse

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1041
                       _countForward
                        _declarePort
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _countForward                                        13    11      2    1041
                                             18 BANK0     13    11      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     411
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     414
                                             10 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myIsr                                                4     4      0     662
                                              6 BANK0      4     4      0
                       _countReverse
 ---------------------------------------------------------------------------------
 (4) _countReverse                                        11     9      2     639
                                              8 COMMON     5     3      2
                                              0 BANK0      6     6      0
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (5) i1___lwmod                                            6     2      4     211
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _countForward
     ___lwdiv
     ___lwmod
   _declarePort

 _myIsr (ROOT)
   _countReverse
     i1___lwdiv
     i1___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 25 18:27:00 2021

                     l42 0216                       l27 0215                       l37 007D  
                    l411 011F                      l421 019F                      l801 00E4  
                    l811 0107                      l803 00E7                      l813 010D  
                    l805 00EE                      l901 0211                      l815 010E  
                    l807 00F2                      l831 017A                      l823 0164  
                    l903 0212                      l817 0115                      l809 00F6  
                    l833 017E                      l825 016C                      l841 019B  
                    l905 0213                      l819 011B                      l835 0188  
                    l827 016F                      l931 0041                      l923 0015  
                    l907 0214                      l837 018E                      l829 0176  
                    l933 0049                      l925 001D                      l839 0195  
                    l935 005C                      l927 0030                      l937 006F  
                    l929 0032                      l939 0216                      l797 00DA  
                    l893 0200                      l799 00DE                      l895 0207  
                    l897 020B                      l899 0210                      _GIE 005F  
                    u300 00E4                      u301 00E3                      u320 00F6  
                    u400 0188                      u321 00F5                      u401 0187  
                    u315 00E8                      u340 0107                      u420 019B  
                    u341 0106                      u421 019A                      u405 0184  
                    u335 00F7                      u415 018F                      u360 011B  
                    u361 011A                      u345 0103                      u370 016C  
                    u355 010F                      u371 016B                      u390 017E  
                    u391 017D                      u385 0170                      u570 007D  
                    u571 007C                      u597 003A                     _INTE 005C  
                   _INTF 0059                     i1l32 00D9                     i1l53 01F9  
         countReverse@CH 0022           countReverse@DV 0024                     _WPUB 0095  
                   _main 0216                     btemp 007E                     start 000E  
                  ?_main 0070            ?_countForward 0032                    _ANSEL 0188  
        __end_of___lwdiv 0120                    i1l411 0163                    i1l421 01D9  
        __end_of___lwmod 01A0                    i1l911 0084                    i1l921 00CB  
                  i1l913 0097                    i1l851 012B                    i1l915 00AA  
                  i1l861 0151                    i1l853 0132                    i1l845 0120  
                  i1l917 00BD                    i1l909 007E                    i1l941 01DA  
                  i1l863 0152                    i1l855 0136                    i1l847 0122  
                  i1l871 01A0                    i1l919 00BF                    i1l943 01DB  
                  i1l865 0159                    i1l857 013A                    i1l849 0128  
                  i1l881 01B8                    i1l873 01A6                    i1l945 01E0  
                  i1l859 014B                    i1l867 015F                    i1l883 01C2  
                  i1l875 01A9                    i1l947 01E9                    i1l885 01C8  
                  i1l877 01B0                    i1l887 01CF                    i1l879 01B4  
                  i1l889 01D5                    u50_20 01A6                    u50_21 01A5  
                  u43_20 0128                    u43_21 0127                    _PORTD 0008  
                  u51_25 01AA                    u52_20 01B8                    u52_21 01B7  
                  u44_25 012C                    u60_27 00C5                    u45_20 013A  
                  u53_20 01C2                    u45_21 0139                    u53_21 01C1  
                  u53_25 01BE                    u46_25 013B                    u54_25 01C9  
                  u47_20 014B                    u55_20 01D5                    u47_21 014A  
                  u55_21 01D4                    u47_25 0147                    u56_20 00D9  
                  u56_21 00D8                    u48_25 0153                    u49_20 015F  
                  u49_21 015E                    _TRISB 0086                    _TRISD 0088  
                  u58_20 01F9                    u58_21 01F8            ?_countReverse 0078  
        countReverse@num 0078                    _nRBPU 040F     __size_of_declarePort 0016  
     i1___lwmod@dividend 0072                    _myIsr 01DA                    pclath 000A  
                  status 0003                    wtemp0 007E       __size_ofi1___lwdiv 0044  
     __size_ofi1___lwmod 003A          __initialization 0011             __end_of_main 022A  
         ??_countForward 0034                   ??_main 003F           ??_countReverse 007A  
                 ?_myIsr 0070                   _ANSELH 0189                   _INTEDG 040E  
       countReverse@temp 0020                ??___lwdiv 002E                ??___lwmod 002E  
      __end_ofi1___lwdiv 0164        __end_ofi1___lwmod 01DA                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_myIsr 0200  
                ??_myIsr 0026     __end_of_countForward 007E     __end_of_countReverse 00DA  
             __pmaintext 0216               __pintentry 0004                  ___lwdiv 00DA  
                ___lwmod 0164                  __ptext1 0200                  __ptext2 0015  
                __ptext3 0164                  __ptext4 00DA                  __ptext5 01DA  
                __ptext6 007E                  __ptext7 01A0                  __ptext8 0120  
          ??_declarePort 002A        i1___lwdiv@divisor 0070        i1___lwdiv@counter 0077  
   end_of_initialization 0011                i1___lwdiv 0120                i1___lwmod 01A0  
  __size_of_countForward 0069      __end_of_declarePort 0216    __size_of_countReverse 005C  
      i1___lwmod@divisor 0070        i1___lwmod@counter 0075             _countForward 0015  
    start_initialization 0011             _countReverse 007E               ?i1___lwdiv 0070  
             ?i1___lwmod 0070              _declarePort 0200                ___latbits 0002  
          __pcstackBANK0 0020         ___lwdiv@dividend 002C                 ?___lwdiv 002A  
               ?___lwmod 002A         ___lwdiv@quotient 002F              ??i1___lwdiv 0074  
            ??i1___lwmod 0074           __size_of_myIsr 0026        interrupt_function 0004  
       __size_of___lwdiv 0046         __size_of___lwmod 003C          ___lwdiv@divisor 002A  
        ___lwdiv@counter 0031       i1___lwdiv@dividend 0072            __size_of_main 0014  
     i1___lwdiv@quotient 0075             ?_declarePort 0070                 myIsr@num 0028  
               intlevel1 0000         ___lwmod@dividend 002C        countForward@donvi 003B  
       countForward@chuc 0039          ___lwmod@divisor 002A         countForward@temp 0037  
        ___lwmod@counter 002F          countForward@dem 003D          countForward@num 0032  
