

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 22 20:55:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0008                     _PORTD	set	8
   208  005C                     _INTE	set	92
   209  0059                     _INTF	set	89
   210  005F                     _GIE	set	95
   211  0095                     _WPUB	set	149
   212  0086                     _TRISB	set	134
   213  0088                     _TRISD	set	136
   214  040E                     _INTEDG	set	1038
   215  040F                     _nRBPU	set	1039
   216  0189                     _ANSELH	set	393
   217  0188                     _ANSEL	set	392
   218                           
   219                           	psect	cinit
   220  000F                     start_initialization:	
   221                           ; #config settings
   222                           
   223  000F                     __initialization:
   224  000F                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227  000F                     __end_of__initialization:
   228  000F  0183               	clrf	3
   229  0010  120A  118A  2913   	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:
   233  0070                     ?_khaiBaoPort:
   234  0070                     ?_main:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_myIsr:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ??_myIsr:	
   241                           ; 1 bytes @ 0x0
   242                           
   243                           
   244                           ; 1 bytes @ 0x0
   245  0070                     	ds	2
   246  0072                     ??_khaiBaoPort:
   247  0072                     ?___lwdiv:	
   248                           ; 1 bytes @ 0x2
   249                           
   250  0072                     ?___lwmod:	
   251                           ; 2 bytes @ 0x2
   252                           
   253  0072                     ___lwdiv@divisor:	
   254                           ; 2 bytes @ 0x2
   255                           
   256  0072                     ___lwmod@divisor:	
   257                           ; 2 bytes @ 0x2
   258                           
   259                           
   260                           ; 2 bytes @ 0x2
   261  0072                     	ds	2
   262  0074                     ___lwdiv@dividend:
   263  0074                     ___lwmod@dividend:	
   264                           ; 2 bytes @ 0x4
   265                           
   266                           
   267                           ; 2 bytes @ 0x4
   268  0074                     	ds	2
   269  0076                     ??___lwdiv:
   270  0076                     ??___lwmod:	
   271                           ; 1 bytes @ 0x6
   272                           
   273                           
   274                           ; 1 bytes @ 0x6
   275  0076                     	ds	1
   276  0077                     ___lwmod@counter:
   277  0077                     ___lwdiv@quotient:	
   278                           ; 1 bytes @ 0x7
   279                           
   280                           
   281                           ; 2 bytes @ 0x7
   282  0077                     	ds	2
   283  0079                     ___lwdiv@counter:
   284                           
   285                           ; 1 bytes @ 0x9
   286  0079                     	ds	1
   287  007A                     ?_demThuan:
   288  007A                     demThuan@num:	
   289                           ; 1 bytes @ 0xA
   290                           
   291                           
   292                           ; 2 bytes @ 0xA
   293  007A                     	ds	2
   294  007C                     ??_main:
   295                           
   296                           	psect	cstackBANK0
   297  0020                     __pcstackBANK0:	
   298                           ; 1 bytes @ 0xC
   299                           
   300  0020                     ??_demThuan:
   301                           
   302                           ; 1 bytes @ 0x0
   303  0020                     	ds	1
   304  0021                     demThuan@chuc:
   305                           
   306                           ; 2 bytes @ 0x1
   307  0021                     	ds	2
   308  0023                     demThuan@donvi:
   309                           
   310                           ; 2 bytes @ 0x3
   311  0023                     	ds	2
   312  0025                     demThuan@hold:
   313                           
   314                           ; 2 bytes @ 0x5
   315  0025                     	ds	2
   316  0027                     demThuan@tong:
   317                           
   318                           ; 2 bytes @ 0x7
   319  0027                     	ds	2
   320                           
   321                           	psect	maintext
   322  0113                     __pmaintext:	
   323 ;;
   324 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   325 ;;
   326 ;; *************** function _main *****************
   327 ;; Defined at:
   328 ;;		line 57 in file "BAI_1.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : B00/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0
   345 ;;      Totals:         0       0       0       0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels required when called: 3
   348 ;; This function calls:
   349 ;;		_demThuan
   350 ;;		_khaiBaoPort
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           
   357                           ;psect for function _main
   358  0113                     _main:
   359  0113                     l47:	
   360                           ;incstack = 0
   361                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   362                           ;BAI_1.c: 58:     while(1) {
   363                           
   364  0113                     l801:
   365                           
   366                           ;BAI_1.c: 59:         khaiBaoPort();
   367  0113  120A  118A  20FD  120A  118A  	fcall	_khaiBaoPort
   368                           
   369                           ;BAI_1.c: 60:         demThuan(30);
   370  0118  301E               	movlw	30
   371  0119  00FA               	movwf	demThuan@num
   372  011A  3000               	movlw	0
   373  011B  00FB               	movwf	demThuan@num+1
   374  011C  120A  118A  2013  120A  118A  	fcall	_demThuan
   375  0121  2913               	goto	l47
   376  0122  120A  118A  280C   	ljmp	start
   377  0125                     __end_of_main:
   378                           
   379                           	psect	text1
   380  00FD                     __ptext1:	
   381 ;; *************** function _khaiBaoPort *****************
   382 ;; Defined at:
   383 ;;		line 20 in file "BAI_1.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; Hardware stack levels required when called: 1
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _khaiBaoPort
   413  00FD                     _khaiBaoPort:
   414  00FD                     l695:	
   415                           ;incstack = 0
   416                           ; Regs used in _khaiBaoPort: [wreg+status,2]
   417                           
   418                           
   419                           ;BAI_1.c: 21:     ANSEL = ANSELH = 0;
   420  00FD  1683               	bsf	3,5	;RP0=1, select bank3
   421  00FE  1703               	bsf	3,6	;RP1=1, select bank3
   422  00FF  0189               	clrf	9	;volatile
   423  0100  0188               	clrf	8	;volatile
   424                           
   425                           ;BAI_1.c: 22:     TRISD = 0;
   426  0101  1683               	bsf	3,5	;RP0=1, select bank1
   427  0102  1303               	bcf	3,6	;RP1=0, select bank1
   428  0103  0188               	clrf	8	;volatile
   429  0104                     l697:
   430                           
   431                           ;BAI_1.c: 23:     PORTD = 0Xff;
   432  0104  30FF               	movlw	255
   433  0105  1283               	bcf	3,5	;RP0=0, select bank0
   434  0106  1303               	bcf	3,6	;RP1=0, select bank0
   435  0107  0088               	movwf	8	;volatile
   436  0108                     l699:
   437                           
   438                           ;BAI_1.c: 24:     TRISB = WPUB = 0x01;
   439  0108  3001               	movlw	1
   440  0109  1683               	bsf	3,5	;RP0=1, select bank1
   441  010A  1303               	bcf	3,6	;RP1=0, select bank1
   442  010B  0095               	movwf	21	;volatile
   443  010C  0086               	movwf	6	;volatile
   444  010D                     l701:
   445                           
   446                           ;BAI_1.c: 25:     nRBPU = 0;
   447  010D  1381               	bcf	1,7	;volatile
   448  010E                     l703:
   449                           
   450                           ;BAI_1.c: 26:     GIE = 1;
   451  010E  178B               	bsf	11,7	;volatile
   452  010F                     l705:
   453                           
   454                           ;BAI_1.c: 27:     INTF = 0;
   455  010F  108B               	bcf	11,1	;volatile
   456  0110                     l707:
   457                           
   458                           ;BAI_1.c: 28:     INTE = 1;
   459  0110  160B               	bsf	11,4	;volatile
   460  0111                     l709:
   461                           
   462                           ;BAI_1.c: 29:     INTEDG = 1;
   463  0111  1701               	bsf	1,6	;volatile
   464  0112                     l27:
   465  0112  0008               	return
   466  0113                     __end_of_khaiBaoPort:
   467                           
   468                           	psect	text2
   469  0013                     __ptext2:	
   470 ;; *************** function _demThuan *****************
   471 ;; Defined at:
   472 ;;		line 40 in file "BAI_1.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  num             2   10[COMMON] unsigned int 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  tong            2    7[BANK0 ] unsigned int 
   477 ;;  hold            2    5[BANK0 ] unsigned int 
   478 ;;  donvi           2    3[BANK0 ] unsigned int 
   479 ;;  chuc            2    1[BANK0 ] unsigned int 
   480 ;;  j               2    0        unsigned int 
   481 ;;  i               2    0        unsigned int 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         2       0       0       0       0
   492 ;;      Locals:         0       8       0       0       0
   493 ;;      Temps:          0       1       0       0       0
   494 ;;      Totals:         2       9       0       0       0
   495 ;;Total ram usage:       11 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; Hardware stack levels required when called: 2
   498 ;; This function calls:
   499 ;;		___lwdiv
   500 ;;		___lwmod
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _demThuan
   508  0013                     _demThuan:
   509  0013                     l781:	
   510                           ;incstack = 0
   511                           ; Regs used in _demThuan: [wreg+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;BAI_1.c: 41:     unsigned int i, j, tong = 0;
   515  0013  1283               	bcf	3,5	;RP0=0, select bank0
   516  0014  1303               	bcf	3,6	;RP1=0, select bank0
   517  0015  01A7               	clrf	demThuan@tong
   518  0016  01A8               	clrf	demThuan@tong+1
   519                           
   520                           ;BAI_1.c: 42:     unsigned int chuc = 0, donvi = 0, hold = 0;
   521  0017  01A1               	clrf	demThuan@chuc
   522  0018  01A2               	clrf	demThuan@chuc+1
   523  0019  01A3               	clrf	demThuan@donvi
   524  001A  01A4               	clrf	demThuan@donvi+1
   525  001B  01A5               	clrf	demThuan@hold
   526  001C  01A6               	clrf	demThuan@hold+1
   527                           
   528                           ;BAI_1.c: 43:     while(num--) {
   529  001D  2870               	goto	l799
   530  001E                     l783:
   531                           
   532                           ;BAI_1.c: 45:             PORTD = donvi;
   533  001E  0823               	movf	demThuan@donvi,w
   534  001F  0088               	movwf	8	;volatile
   535  0020                     l785:
   536                           
   537                           ;BAI_1.c: 46:             PORTD = (chuc << 4);
   538  0020  0821               	movf	demThuan@chuc,w
   539  0021  00A0               	movwf	??_demThuan
   540  0022  3003               	movlw	3
   541  0023                     u305:
   542  0023  1003               	clrc
   543  0024  0DA0               	rlf	??_demThuan,f
   544  0025  3EFF               	addlw	-1
   545  0026  1D03               	skipz
   546  0027  2823               	goto	u305
   547  0028  1003               	clrc
   548  0029  0D20               	rlf	??_demThuan,w
   549  002A  0088               	movwf	8	;volatile
   550  002B                     l787:
   551                           
   552                           ;BAI_1.c: 47:             hold++;
   553  002B  3001               	movlw	1
   554  002C  07A5               	addwf	demThuan@hold,f
   555  002D  1803               	skipnc
   556  002E  0AA6               	incf	demThuan@hold+1,f
   557  002F  3000               	movlw	0
   558  0030  07A6               	addwf	demThuan@hold+1,f
   559  0031                     l789:
   560                           
   561                           ;BAI_1.c: 48:             _delay((unsigned long)((1)*(4000000/4000.0)));
   562  0031  30C7               	movlw	199
   563  0032  1283               	bcf	3,5	;RP0=0, select bank0
   564  0033  1303               	bcf	3,6	;RP1=0, select bank0
   565  0034  00A0               	movwf	??_demThuan
   566  0035                     u337:
   567  0035  2836               	nop2
   568  0036  0BA0               	decfsz	??_demThuan,f
   569  0037  2835               	goto	u337
   570  0038  2839               	nop2
   571  0039                     l791:
   572                           
   573                           ;BAI_1.c: 44:         while(hold < 50) {
   574  0039  3000               	movlw	0
   575  003A  1283               	bcf	3,5	;RP0=0, select bank0
   576  003B  1303               	bcf	3,6	;RP1=0, select bank0
   577  003C  0226               	subwf	demThuan@hold+1,w
   578  003D  3032               	movlw	50
   579  003E  1903               	skipnz
   580  003F  0225               	subwf	demThuan@hold,w
   581  0040  1C03               	skipc
   582  0041  2843               	goto	u311
   583  0042  2844               	goto	u310
   584  0043                     u311:
   585  0043  281E               	goto	l783
   586  0044                     u310:
   587  0044                     l793:
   588                           
   589                           ;BAI_1.c: 50:         tong++;
   590  0044  3001               	movlw	1
   591  0045  07A7               	addwf	demThuan@tong,f
   592  0046  1803               	skipnc
   593  0047  0AA8               	incf	demThuan@tong+1,f
   594  0048  3000               	movlw	0
   595  0049  07A8               	addwf	demThuan@tong+1,f
   596  004A                     l795:
   597                           
   598                           ;BAI_1.c: 51:         donvi = tong % 10;
   599  004A  300A               	movlw	10
   600  004B  00F2               	movwf	___lwmod@divisor
   601  004C  3000               	movlw	0
   602  004D  00F3               	movwf	___lwmod@divisor+1
   603  004E  0828               	movf	demThuan@tong+1,w
   604  004F  00F5               	movwf	___lwmod@dividend+1
   605  0050  0827               	movf	demThuan@tong,w
   606  0051  00F4               	movwf	___lwmod@dividend
   607  0052  120A  118A  20C3  120A  118A  	fcall	___lwmod
   608  0057  0873               	movf	?___lwmod+1,w
   609  0058  1283               	bcf	3,5	;RP0=0, select bank0
   610  0059  1303               	bcf	3,6	;RP1=0, select bank0
   611  005A  00A4               	movwf	demThuan@donvi+1
   612  005B  0872               	movf	?___lwmod,w
   613  005C  00A3               	movwf	demThuan@donvi
   614  005D                     l797:
   615                           
   616                           ;BAI_1.c: 52:         chuc = tong / 10;
   617  005D  300A               	movlw	10
   618  005E  00F2               	movwf	___lwdiv@divisor
   619  005F  3000               	movlw	0
   620  0060  00F3               	movwf	___lwdiv@divisor+1
   621  0061  0828               	movf	demThuan@tong+1,w
   622  0062  00F5               	movwf	___lwdiv@dividend+1
   623  0063  0827               	movf	demThuan@tong,w
   624  0064  00F4               	movwf	___lwdiv@dividend
   625  0065  120A  118A  207F  120A  118A  	fcall	___lwdiv
   626  006A  0873               	movf	?___lwdiv+1,w
   627  006B  1283               	bcf	3,5	;RP0=0, select bank0
   628  006C  1303               	bcf	3,6	;RP1=0, select bank0
   629  006D  00A2               	movwf	demThuan@chuc+1
   630  006E  0872               	movf	?___lwdiv,w
   631  006F  00A1               	movwf	demThuan@chuc
   632  0070                     l799:
   633                           
   634                           ;BAI_1.c: 43:     while(num--) {
   635  0070  3001               	movlw	1
   636  0071  02FA               	subwf	demThuan@num,f
   637  0072  3000               	movlw	0
   638  0073  1C03               	skipc
   639  0074  03FB               	decf	demThuan@num+1,f
   640  0075  02FB               	subwf	demThuan@num+1,f
   641  0076  0A7A               	incf	demThuan@num,w
   642  0077  1D03               	skipz
   643  0078  287D               	goto	u321
   644  0079  0A7B               	incf	demThuan@num+1,w
   645  007A  1D03               	btfss	3,2
   646  007B  287D               	goto	u321
   647  007C  287E               	goto	u320
   648  007D                     u321:
   649  007D  2839               	goto	l791
   650  007E                     u320:
   651  007E                     l42:
   652  007E  0008               	return
   653  007F                     __end_of_demThuan:
   654                           
   655                           	psect	text3
   656  00C3                     __ptext3:	
   657 ;; *************** function ___lwmod *****************
   658 ;; Defined at:
   659 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  divisor         2    2[COMMON] unsigned int 
   662 ;;  dividend        2    4[COMMON] unsigned int 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  counter         1    7[COMMON] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  2    2[COMMON] unsigned int 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         4       0       0       0       0
   675 ;;      Locals:         1       0       0       0       0
   676 ;;      Temps:          1       0       0       0       0
   677 ;;      Totals:         6       0       0       0       0
   678 ;;Total ram usage:        6 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_demThuan
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function ___lwmod
   690  00C3                     ___lwmod:
   691  00C3                     l759:	
   692                           ;incstack = 0
   693                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   694                           
   695  00C3  0872               	movf	___lwmod@divisor,w
   696  00C4  0473               	iorwf	___lwmod@divisor+1,w
   697  00C5  1903               	btfsc	3,2
   698  00C6  28C8               	goto	u241
   699  00C7  28C9               	goto	u240
   700  00C8                     u241:
   701  00C8  28F8               	goto	l777
   702  00C9                     u240:
   703  00C9                     l761:
   704  00C9  01F7               	clrf	___lwmod@counter
   705  00CA  0AF7               	incf	___lwmod@counter,f
   706  00CB  28D7               	goto	l767
   707  00CC                     l763:
   708  00CC  3001               	movlw	1
   709  00CD                     u255:
   710  00CD  1003               	clrc
   711  00CE  0DF2               	rlf	___lwmod@divisor,f
   712  00CF  0DF3               	rlf	___lwmod@divisor+1,f
   713  00D0  3EFF               	addlw	-1
   714  00D1  1D03               	skipz
   715  00D2  28CD               	goto	u255
   716  00D3                     l765:
   717  00D3  3001               	movlw	1
   718  00D4  00F6               	movwf	??___lwmod
   719  00D5  0876               	movf	??___lwmod,w
   720  00D6  07F7               	addwf	___lwmod@counter,f
   721  00D7                     l767:
   722  00D7  1FF3               	btfss	___lwmod@divisor+1,7
   723  00D8  28DA               	goto	u261
   724  00D9  28DB               	goto	u260
   725  00DA                     u261:
   726  00DA  28CC               	goto	l763
   727  00DB                     u260:
   728  00DB                     l769:
   729  00DB  0873               	movf	___lwmod@divisor+1,w
   730  00DC  0275               	subwf	___lwmod@dividend+1,w
   731  00DD  1D03               	skipz
   732  00DE  28E1               	goto	u275
   733  00DF  0872               	movf	___lwmod@divisor,w
   734  00E0  0274               	subwf	___lwmod@dividend,w
   735  00E1                     u275:
   736  00E1  1C03               	skipc
   737  00E2  28E4               	goto	u271
   738  00E3  28E5               	goto	u270
   739  00E4                     u271:
   740  00E4  28EB               	goto	l773
   741  00E5                     u270:
   742  00E5                     l771:
   743  00E5  0872               	movf	___lwmod@divisor,w
   744  00E6  02F4               	subwf	___lwmod@dividend,f
   745  00E7  0873               	movf	___lwmod@divisor+1,w
   746  00E8  1C03               	skipc
   747  00E9  03F5               	decf	___lwmod@dividend+1,f
   748  00EA  02F5               	subwf	___lwmod@dividend+1,f
   749  00EB                     l773:
   750  00EB  3001               	movlw	1
   751  00EC                     u285:
   752  00EC  1003               	clrc
   753  00ED  0CF3               	rrf	___lwmod@divisor+1,f
   754  00EE  0CF2               	rrf	___lwmod@divisor,f
   755  00EF  3EFF               	addlw	-1
   756  00F0  1D03               	skipz
   757  00F1  28EC               	goto	u285
   758  00F2                     l775:
   759  00F2  3001               	movlw	1
   760  00F3  02F7               	subwf	___lwmod@counter,f
   761  00F4  1D03               	btfss	3,2
   762  00F5  28F7               	goto	u291
   763  00F6  28F8               	goto	u290
   764  00F7                     u291:
   765  00F7  28DB               	goto	l769
   766  00F8                     u290:
   767  00F8                     l777:
   768  00F8  0875               	movf	___lwmod@dividend+1,w
   769  00F9  00F3               	movwf	?___lwmod+1
   770  00FA  0874               	movf	___lwmod@dividend,w
   771  00FB  00F2               	movwf	?___lwmod
   772  00FC                     l423:
   773  00FC  0008               	return
   774  00FD                     __end_of___lwmod:
   775                           
   776                           	psect	text4
   777  007F                     __ptext4:	
   778 ;; *************** function ___lwdiv *****************
   779 ;; Defined at:
   780 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  divisor         2    2[COMMON] unsigned int 
   783 ;;  dividend        2    4[COMMON] unsigned int 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  quotient        2    7[COMMON] unsigned int 
   786 ;;  counter         1    9[COMMON] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2    2[COMMON] unsigned int 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         4       0       0       0       0
   797 ;;      Locals:         3       0       0       0       0
   798 ;;      Temps:          1       0       0       0       0
   799 ;;      Totals:         8       0       0       0       0
   800 ;;Total ram usage:        8 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_demThuan
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           
   811                           ;psect for function ___lwdiv
   812  007F                     ___lwdiv:
   813  007F                     l733:	
   814                           ;incstack = 0
   815                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   816                           
   817  007F  01F7               	clrf	___lwdiv@quotient
   818  0080  01F8               	clrf	___lwdiv@quotient+1
   819  0081                     l735:
   820  0081  0872               	movf	___lwdiv@divisor,w
   821  0082  0473               	iorwf	___lwdiv@divisor+1,w
   822  0083  1903               	btfsc	3,2
   823  0084  2886               	goto	u171
   824  0085  2887               	goto	u170
   825  0086                     u171:
   826  0086  28BE               	goto	l755
   827  0087                     u170:
   828  0087                     l737:
   829  0087  01F9               	clrf	___lwdiv@counter
   830  0088  0AF9               	incf	___lwdiv@counter,f
   831  0089  2895               	goto	l743
   832  008A                     l739:
   833  008A  3001               	movlw	1
   834  008B                     u185:
   835  008B  1003               	clrc
   836  008C  0DF2               	rlf	___lwdiv@divisor,f
   837  008D  0DF3               	rlf	___lwdiv@divisor+1,f
   838  008E  3EFF               	addlw	-1
   839  008F  1D03               	skipz
   840  0090  288B               	goto	u185
   841  0091                     l741:
   842  0091  3001               	movlw	1
   843  0092  00F6               	movwf	??___lwdiv
   844  0093  0876               	movf	??___lwdiv,w
   845  0094  07F9               	addwf	___lwdiv@counter,f
   846  0095                     l743:
   847  0095  1FF3               	btfss	___lwdiv@divisor+1,7
   848  0096  2898               	goto	u191
   849  0097  2899               	goto	u190
   850  0098                     u191:
   851  0098  288A               	goto	l739
   852  0099                     u190:
   853  0099                     l745:
   854  0099  3001               	movlw	1
   855  009A                     u205:
   856  009A  1003               	clrc
   857  009B  0DF7               	rlf	___lwdiv@quotient,f
   858  009C  0DF8               	rlf	___lwdiv@quotient+1,f
   859  009D  3EFF               	addlw	-1
   860  009E  1D03               	skipz
   861  009F  289A               	goto	u205
   862  00A0  0873               	movf	___lwdiv@divisor+1,w
   863  00A1  0275               	subwf	___lwdiv@dividend+1,w
   864  00A2  1D03               	skipz
   865  00A3  28A6               	goto	u215
   866  00A4  0872               	movf	___lwdiv@divisor,w
   867  00A5  0274               	subwf	___lwdiv@dividend,w
   868  00A6                     u215:
   869  00A6  1C03               	skipc
   870  00A7  28A9               	goto	u211
   871  00A8  28AA               	goto	u210
   872  00A9                     u211:
   873  00A9  28B1               	goto	l751
   874  00AA                     u210:
   875  00AA                     l747:
   876  00AA  0872               	movf	___lwdiv@divisor,w
   877  00AB  02F4               	subwf	___lwdiv@dividend,f
   878  00AC  0873               	movf	___lwdiv@divisor+1,w
   879  00AD  1C03               	skipc
   880  00AE  03F5               	decf	___lwdiv@dividend+1,f
   881  00AF  02F5               	subwf	___lwdiv@dividend+1,f
   882  00B0                     l749:
   883  00B0  1477               	bsf	___lwdiv@quotient,0
   884  00B1                     l751:
   885  00B1  3001               	movlw	1
   886  00B2                     u225:
   887  00B2  1003               	clrc
   888  00B3  0CF3               	rrf	___lwdiv@divisor+1,f
   889  00B4  0CF2               	rrf	___lwdiv@divisor,f
   890  00B5  3EFF               	addlw	-1
   891  00B6  1D03               	skipz
   892  00B7  28B2               	goto	u225
   893  00B8                     l753:
   894  00B8  3001               	movlw	1
   895  00B9  02F9               	subwf	___lwdiv@counter,f
   896  00BA  1D03               	btfss	3,2
   897  00BB  28BD               	goto	u231
   898  00BC  28BE               	goto	u230
   899  00BD                     u231:
   900  00BD  2899               	goto	l745
   901  00BE                     u230:
   902  00BE                     l755:
   903  00BE  0878               	movf	___lwdiv@quotient+1,w
   904  00BF  00F3               	movwf	?___lwdiv+1
   905  00C0  0877               	movf	___lwdiv@quotient,w
   906  00C1  00F2               	movwf	?___lwdiv
   907  00C2                     l413:
   908  00C2  0008               	return
   909  00C3                     __end_of___lwdiv:
   910                           
   911                           	psect	text5
   912  0125                     __ptext5:	
   913 ;; *************** function _myIsr *****************
   914 ;; Defined at:
   915 ;;		line 64 in file "BAI_1.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		None
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          2       0       0       0       0
   932 ;;      Totals:         2       0       0       0       0
   933 ;;Total ram usage:        2 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		Interrupt level 1
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _myIsr
   944  0125                     _myIsr:
   945  0125                     i1l55:
   946  0125  0871               	movf	??_myIsr+1,w
   947  0126  008A               	movwf	10
   948  0127  0E70               	swapf	??_myIsr,w
   949  0128  0083               	movwf	3
   950  0129  0EFE               	swapf	btemp,f
   951  012A  0E7E               	swapf	btemp,w
   952  012B  0009               	retfie
   953  012C                     __end_of_myIsr:
   954  007E                     btemp	set	126	;btemp
   955  007E                     wtemp0	set	126
   956                           
   957                           	psect	intentry
   958  0004                     __pintentry:	
   959                           ;incstack = 0
   960                           ; Regs used in _myIsr: []
   961                           
   962  0004                     interrupt_function:
   963  007E                     saved_w	set	btemp
   964  0004  00FE               	movwf	btemp
   965  0005  0E03               	swapf	3,w
   966  0006  00F0               	movwf	??_myIsr
   967  0007  080A               	movf	10,w
   968  0008  00F1               	movwf	??_myIsr+1
   969  0009  120A  118A  2925   	ljmp	_myIsr
   970                           
   971                           	psect	config
   972                           
   973                           ;Config register CONFIG1 @ 0x2007
   974                           ;	Oscillator Selection bits
   975                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   976                           ;	Watchdog Timer Enable bit
   977                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   978                           ;	Power-up Timer Enable bit
   979                           ;	PWRTE = OFF, PWRT disabled
   980                           ;	RE3/MCLR pin function select bit
   981                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   982                           ;	Code Protection bit
   983                           ;	CP = OFF, Program memory code protection is disabled
   984                           ;	Data Code Protection bit
   985                           ;	CPD = OFF, Data memory code protection is disabled
   986                           ;	Brown Out Reset Selection bits
   987                           ;	BOREN = OFF, BOR disabled
   988                           ;	Internal External Switchover bit
   989                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   990                           ;	Fail-Safe Clock Monitor Enabled bit
   991                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   992                           ;	Low Voltage Programming Enable bit
   993                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   994                           ;	In-Circuit Debugger Mode bit
   995                           ;	DEBUG = 0x1, unprogrammed default
   996  2007                     	org	8199
   997  2007  20F2               	dw	8434
   998                           
   999                           ;Config register CONFIG2 @ 0x2008
  1000                           ;	Brown-out Reset Selection bit
  1001                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1002                           ;	Flash Program Memory Self Write Enable bits
  1003                           ;	WRT = OFF, Write protection off
  1004  2008                     	org	8200
  1005  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      9       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_demThuan
    _demThuan->___lwdiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_demThuan

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     841
                           _demThuan
                        _khaiBaoPort
 ---------------------------------------------------------------------------------
 (1) _khaiBaoPort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _demThuan                                            15    13      2     841
                                             10 COMMON     2     0      2
                                              0 BANK0      9     9      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _demThuan
     ___lwdiv
     ___lwmod
   _khaiBaoPort

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 22 20:55:25 2021

                     l42 007E                       l27 0112                       l47 0113  
                    l413 00C2                      l423 00FC                      l701 010D  
                    l703 010E                      l705 010F                      l801 0113  
                    l707 0110                      l741 0091                      l733 007F  
                    l709 0111                      l751 00B1                      l743 0095  
                    l735 0081                      l753 00B8                      l745 0099  
                    l737 0087                      l761 00C9                      l747 00AA  
                    l739 008A                      l755 00BE                      l771 00E5  
                    l763 00CC                      l749 00B0                      l773 00EB  
                    l765 00D3                      l781 0013                      l775 00F2  
                    l767 00D7                      l759 00C3                      l791 0039  
                    l783 001E                      l695 00FD                      l769 00DB  
                    l777 00F8                      l793 0044                      l785 0020  
                    l697 0104                      l795 004A                      l787 002B  
                    l699 0108                      l797 005D                      l789 0031  
                    l799 0070                      _GIE 005F                      u210 00AA  
                    u211 00A9                      u205 009A                      u230 00BE  
                    u310 0044                      u231 00BD                      u215 00A6  
                    u311 0043                      u240 00C9                      u320 007E  
                    u225 00B2                      u241 00C8                      u321 007D  
                    u305 0023                      u170 0087                      u171 0086  
                    u260 00DB                      u261 00DA                      u190 0099  
                    u270 00E5                      u191 0098                      u271 00E4  
                    u255 00CD                      u185 008B                      u337 0035  
                    u290 00F8                      u291 00F7                      u275 00E1  
                    u285 00EC                     _INTE 005C                     _INTF 0059  
                   i1l55 0125                     _WPUB 0095                     _main 0113  
                   btemp 007E                     start 000C                    ?_main 0070  
                  _ANSEL 0188          __end_of___lwdiv 00C3          __end_of___lwmod 00FD  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _nRBPU 040F                    _myIsr 0125                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0125                   ??_main 007C                   ?_myIsr 0070  
                 _ANSELH 0189                   _INTEDG 040E         __end_of_demThuan 007F  
   __size_of_khaiBaoPort 0016                ??___lwdiv 0076                ??___lwmod 0076  
                 saved_w 007E  __end_of__initialization 000F           __pcstackCOMMON 0070  
          __end_of_myIsr 012C            demThuan@donvi 0023                  ??_myIsr 0070  
             __pmaintext 0113               __pintentry 0004                ?_demThuan 007A  
                ___lwdiv 007F                  ___lwmod 00C3                  __ptext1 00FD  
                __ptext2 0013                  __ptext3 00C3                  __ptext4 007F  
                __ptext5 0125               ??_demThuan 0020     end_of_initialization 000F  
          ??_khaiBaoPort 0072      start_initialization 000F      __end_of_khaiBaoPort 0113  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_demThuan 006C  
           demThuan@chuc 0021             demThuan@hold 0025             demThuan@tong 0027  
       ___lwdiv@dividend 0074                 ?___lwdiv 0072                 ?___lwmod 0072  
       ___lwdiv@quotient 0077           __size_of_myIsr 0007              _khaiBaoPort 00FD  
      interrupt_function 0004         __size_of___lwdiv 0044         __size_of___lwmod 003A  
            demThuan@num 007A                 _demThuan 0013          ___lwdiv@divisor 0072  
        ___lwdiv@counter 0079            __size_of_main 0012                 intlevel1 0000  
       ___lwmod@dividend 0074          ___lwmod@divisor 0072          ___lwmod@counter 0077  
           ?_khaiBaoPort 0070  
